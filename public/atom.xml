<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jovey&#39;s Notes</title>
  <subtitle>心有猛虎 细嗅蔷薇</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="http://HankCoder.github.io/blog/"/>
  <updated>2016-05-22T14:56:40.000Z</updated>
  <id>http://HankCoder.github.io/blog/</id>
  
  <author>
    <name>Jovey Zheng</name>
    <email>jovey.zheng@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>实用的 CSS — 贝塞尔曲线(cubic-bezier)</title>
    <link href="http://HankCoder.github.io/blog/2016/03/16/article-20/"/>
    <id>http://HankCoder.github.io/blog/2016/03/16/article-20/</id>
    <published>2016-03-16T02:39:07.000Z</published>
    <updated>2016-05-22T14:56:40.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;在了解 &lt;code&gt;cubic-bezier&lt;/code&gt; 之前，你需要对 CSS3 中的动画效果有所认识，它是 &lt;code&gt;animation-timing-function&lt;/code&gt; 和 &lt;code&gt;transition-timing-function&lt;/code&gt; 中一个重要的内容。&lt;/p&gt;
&lt;h1 id=&quot;本体&quot;&gt;&lt;a href=&quot;#本体&quot; class=&quot;headerlink&quot; title=&quot;本体&quot;&gt;&lt;/a&gt;本体&lt;/h1&gt;&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;&lt;code&gt;cubic-bezier&lt;/code&gt; 又称&lt;strong&gt;三次贝塞尔&lt;/strong&gt;，主要是为 &lt;code&gt;animation&lt;/code&gt; 生成速度曲线的函数，规定是 &lt;code&gt;cubic-bezier(&amp;lt;x1&amp;gt;, &amp;lt;y1&amp;gt;, &amp;lt;x2&amp;gt;, &amp;lt;y2&amp;gt;)&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;我们可以从下图中简要理解一下 &lt;code&gt;cubic-bezier&lt;/code&gt;：&lt;br&gt;&lt;img src=&quot;/blog/images/article_img/cubic-bezier-01.png&quot; alt=&quot;cubic-bezier&quot;&gt;&lt;br&gt;&lt;img src=&quot;/blog/images/article_img/cubic-bezier-02.jpg&quot; alt=&quot;cubic-bezier&quot;&gt;&lt;/p&gt;
&lt;p&gt;从上图我们需要知道的是 &lt;code&gt;cubic-bezier&lt;/code&gt; 的取值范围:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;P0：默认值 (0, 0)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;P1：动态取值 (x1, y1)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;P2：动态取值 (x2, y2)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;P3：默认值 (1, 1)&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;我们需要关注的是 P1 和 P2 两点的取值，而其中 &lt;strong&gt;&lt;code&gt;X 轴&lt;/code&gt;&lt;/strong&gt;的取值范围是 &lt;strong&gt;0&lt;/strong&gt; 到 &lt;strong&gt;1&lt;/strong&gt;，当取值超出范围时 &lt;code&gt;cubic-bezier&lt;/code&gt; 将失效；&lt;code&gt;Y 轴&lt;/code&gt;的取值没有规定，当然也毋须过大。&lt;/p&gt;
&lt;p&gt;最直接的理解是，将&lt;strong&gt;以一条直线放在范围只有 1 的坐标轴中，并从中间拿出两个点来拉扯（X 轴的取值区间是 [0, 1]，Y 轴任意），最后形成的曲线就是动画的速度曲线&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&quot;使用&quot;&gt;&lt;a href=&quot;#使用&quot; class=&quot;headerlink&quot; title=&quot;使用&quot;&gt;&lt;/a&gt;使用&lt;/h2&gt;&lt;p&gt;在测试例子中：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;lang&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;zh-cn&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Document&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;css&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;selector-class&quot;&gt;.animation&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;50px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;50px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;#ed3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attribute&quot;&gt;-webkit-transition&lt;/span&gt;:  all &lt;span class=&quot;number&quot;&gt;2s&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;attribute&quot;&gt;-o-transition&lt;/span&gt;:  all &lt;span class=&quot;number&quot;&gt;2s&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;attribute&quot;&gt;transition&lt;/span&gt;:  all &lt;span class=&quot;number&quot;&gt;2s&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;selector-class&quot;&gt;.animation&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:hover&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attribute&quot;&gt;-webkit-transform&lt;/span&gt;:  &lt;span class=&quot;built_in&quot;&gt;translateX&lt;/span&gt;(100px);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;attribute&quot;&gt;-ms-transform&lt;/span&gt;:  &lt;span class=&quot;built_in&quot;&gt;translateX&lt;/span&gt;(100px);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;attribute&quot;&gt;-o-transform&lt;/span&gt;:  &lt;span class=&quot;built_in&quot;&gt;translateX&lt;/span&gt;(100px);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;attribute&quot;&gt;transform&lt;/span&gt;:  &lt;span class=&quot;built_in&quot;&gt;translateX&lt;/span&gt;(100px);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;animation&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我们可以在浏览器中看到，当鼠标移到元素上时，元素开始向右移动，开始比较慢，之后则比较快，移开时按原曲线回到原点。&lt;/p&gt;
&lt;p&gt;在例子中，当我们不为 &lt;code&gt;transition&lt;/code&gt; 添加 &lt;code&gt;cubic-bezier&lt;/code&gt; 或是其他 &lt;code&gt;timing-function&lt;/code&gt; 时，默认的速度曲线是 &lt;code&gt;ease&lt;/code&gt;，此时的速度曲线是：&lt;br&gt;&lt;img src=&quot;/blog/images/article_img/cubic-bezier-03.png&quot; alt=&quot;cubic-bezier&quot;&gt;&lt;/p&gt;
&lt;p&gt;那么让我们在代码中加入 &lt;code&gt;cubic-bezier(.17, .86, .73, .14)&lt;/code&gt;：&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.animation &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -webkit-transition:  all 2s cubic-bezier(.17, .86, .73, .14);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       -o-transition:  all 2s cubic-bezier(.17, .86, .73, .14);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          transition:  all 2s cubic-bezier(.17, .86, .73, .14);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;再刷新页面观察效果，会看到动画在执行过程中有一段很缓慢的移动，前后的速度相似，此时的运动曲线是：&lt;br&gt;&lt;img src=&quot;/blog/images/article_img/cubic-bezier-04.png&quot; alt=&quot;cubic-bezier&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;几个常用的固定值对应的-cubic-bezier-值以及速度曲线&quot;&gt;&lt;a href=&quot;#几个常用的固定值对应的-cubic-bezier-值以及速度曲线&quot; class=&quot;headerlink&quot; title=&quot;几个常用的固定值对应的 cubic-bezier 值以及速度曲线&quot;&gt;&lt;/a&gt;几个常用的固定值对应的 &lt;code&gt;cubic-bezier&lt;/code&gt; 值以及速度曲线&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ease&lt;/code&gt;：cubic-bezier(.25, .1, .25, 1)&lt;br&gt;&lt;img src=&quot;/blog/images/article_img/cubic-bezier-03.png&quot; alt=&quot;cubic-bezier&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;liner&lt;/code&gt;：cubic-bezier(0, 0, 1, 1) / cubic-bezier(1, 1, 0, 0)&lt;br&gt;&lt;img src=&quot;/blog/images/article_img/cubic-bezier-05.png&quot; alt=&quot;cubic-bezier&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ease-in&lt;/code&gt;：cubic-bezier(.42, 0, 1, 1)&lt;br&gt;&lt;img src=&quot;/blog/images/article_img/cubic-bezier-06.png&quot; alt=&quot;cubic-bezier&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ease-out&lt;/code&gt;：cubic-bezier(0, 0, .58, 1)&lt;br&gt;&lt;img src=&quot;/blog/images/article_img/cubic-bezier-07.png&quot; alt=&quot;cubic-bezier&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ease-in-out&lt;/code&gt;：cubic-bezier(.42, 0, .58, 1)&lt;br&gt;&lt;img src=&quot;/blog/images/article_img/cubic-bezier-08.png&quot; alt=&quot;cubic-bezier&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In Out . Back（来回的缓冲效果）：cubic-bezier(0.68, -0.55, 0.27, 1.55)&lt;br&gt;&lt;img src=&quot;/blog/images/article_img/cubic-bezier-09.png&quot; alt=&quot;cubic-bezier&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;效果参考&quot;&gt;&lt;a href=&quot;#效果参考&quot; class=&quot;headerlink&quot; title=&quot;效果参考&quot;&gt;&lt;/a&gt;效果参考&lt;/h1&gt;&lt;p&gt;文章所提到的动画效果可以在下面站点中看到，当然你也可以大胆尝试：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://cubic-bezier.com/#.17,.67,.83,.67&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;英文版在线预览（Lea Verou）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://yisibl.github.io/cubic-bezier/#.17,.67,.83,.67&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;中文版在线预览（更多效果）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://xuanfengge.com/easeing/ceaser/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在线生成系列&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jovey-zheng/loader&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;作者的《Loading》库&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/CSS/timing-function&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MDN&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_animation-timing-function.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;W3School&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;在了解 &lt;code&gt;cubic-bezier&lt;/code&gt; 之前，你需要对 CSS3 中的动画效果有所认识，它是 &lt;code&gt;animation-timing-function&lt;/code&gt; 和 &lt;code&gt;transition-timing-function&lt;/code&gt; 中一个重要的内容。&lt;/p&gt;
&lt;h1 id=&quot;本体&quot;&gt;&lt;a href=&quot;#本体&quot; class=&quot;headerlink&quot; title=&quot;本体&quot;&gt;&lt;/a&gt;本体&lt;/h1&gt;&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;&lt;code&gt;cubic-bezier&lt;/code&gt; 又称&lt;strong&gt;三次贝塞尔&lt;/strong&gt;，主要是为 &lt;code&gt;animation&lt;/code&gt; 生成速度曲线的函数，规定是 &lt;code&gt;cubic-bezier(&amp;lt;x1&amp;gt;, &amp;lt;y1&amp;gt;, &amp;lt;x2&amp;gt;, &amp;lt;y2&amp;gt;)&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;我们可以从下图中简要理解一下 &lt;code&gt;cubic-bezier&lt;/code&gt;：&lt;br&gt;&lt;img src=&quot;/blog/images/article_img/cubic-bezier-01.png&quot; alt=&quot;cubic-bezier&quot;&gt;&lt;br&gt;&lt;img src=&quot;/blog/images/article_img/cubic-bezier-02.jpg&quot; alt=&quot;cubic-bezier&quot;&gt;&lt;/p&gt;
&lt;p&gt;从上图我们需要知道的是 &lt;code&gt;cubic-bezier&lt;/code&gt; 的取值范围:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;P0：默认值 (0, 0)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;P1：动态取值 (x1, y1)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;P2：动态取值 (x2, y2)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;P3：默认值 (1, 1)&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="笔记随笔" scheme="http://HankCoder.github.io/blog/categories/%E7%AC%94%E8%AE%B0%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="css" scheme="http://HankCoder.github.io/blog/tags/css/"/>
    
      <category term="cubic-bezier" scheme="http://HankCoder.github.io/blog/tags/cubic-bezier/"/>
    
      <category term="animation" scheme="http://HankCoder.github.io/blog/tags/animation/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 构建博客 - NexT 主题浅谈</title>
    <link href="http://HankCoder.github.io/blog/2016/03/03/article-19/"/>
    <id>http://HankCoder.github.io/blog/2016/03/03/article-19/</id>
    <published>2016-03-03T06:16:35.000Z</published>
    <updated>2016-05-22T14:56:40.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;利用 &lt;a href=&quot;https://github.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github&lt;/a&gt; 所提供的 &lt;strong&gt;Github Page&lt;/strong&gt; 去构建静态的网站已经变得越来越流行，如果还不了解怎么入门，可以阅读我之前的一篇文章&lt;a href=&quot;http://www.jianshu.com/p/f66103553c45&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;「使用Hexo + Next搭建静态博客」&lt;/a&gt;。当然构建博客的方法不是只有一种，你也可以尝试其他方法，而本文主要是针对 &lt;strong&gt;Hexo&lt;/strong&gt; 去叙述的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;可能看过&lt;a href=&quot;http://www.jianshu.com/p/f66103553c45&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;「使用Hexo + Next搭建静态博客」&lt;/a&gt;这篇文章的同学都已经构建好了属于自己的博客了，那么接下来要说的就是关于 &lt;a href=&quot;http://theme-next.iissnan.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NexT 主题&lt;/a&gt;中遇到的一些问题和提示。&lt;/p&gt;
&lt;h1 id=&quot;关于-RSS&quot;&gt;&lt;a href=&quot;#关于-RSS&quot; class=&quot;headerlink&quot; title=&quot;关于 RSS&quot;&gt;&lt;/a&gt;关于 RSS&lt;/h1&gt;&lt;p&gt;很多同学在看到别人的博客时，都会发现有订阅的功能（即 RSS），但无奈官方介绍比较少，所以无从下手。&lt;/p&gt;
&lt;p&gt;那么下面将教大家如何去做：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;准备&lt;br&gt;你需要安装一个 &lt;strong&gt;Hexo 插件&lt;/strong&gt;：&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;--save hexo-generator-feed&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;配置&lt;br&gt;接下来需要在 &lt;code&gt;_config.yml&lt;/code&gt; 中配置一下，在 root 目录下的 &lt;code&gt;_config.yml&lt;/code&gt; 中添加：&lt;/p&gt;
&lt;figure class=&quot;highlight verilog&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# Extensions&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## Plugins: http:&lt;span class=&quot;comment&quot;&gt;//hexo.io/plugins/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plugins:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  hexo-&lt;span class=&quot;keyword&quot;&gt;generate&lt;/span&gt;-feed&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;然后在主题文件夹的 &lt;code&gt;_config.yml&lt;/code&gt; 中配置：&lt;br&gt;&lt;figure class=&quot;highlight vbscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# &lt;span class=&quot;keyword&quot;&gt;Set&lt;/span&gt; rss &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; disable feed link.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Leave rss as &lt;span class=&quot;literal&quot;&gt;empty&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; use site&lt;span class=&quot;comment&quot;&gt;&#39;s feed link.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# &lt;span class=&quot;keyword&quot;&gt;Set&lt;/span&gt; rss &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; specific value &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; you have burned your feed already.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rss: /atom.xml&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ol&gt;
&lt;li&gt;生成 RSS Feed&lt;br&gt;配置完之后在 CLI 中运行：&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;hexo g&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;重新生成一次，你会在 &lt;code&gt;./public&lt;/code&gt; 文件夹中看到 &lt;code&gt;atom.xml&lt;/code&gt; 文件。然后启动服务器查看是否有效，之后再部署到 &lt;code&gt;Github&lt;/code&gt; 中。&lt;/p&gt;
&lt;p&gt;最后你可以看到：&lt;br&gt;&lt;img src=&quot;/blog/images/article_img/19-1.png&quot; alt=&quot;效果&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;修改文件后不生效&quot;&gt;&lt;a href=&quot;#修改文件后不生效&quot; class=&quot;headerlink&quot; title=&quot;修改文件后不生效&quot;&gt;&lt;/a&gt;修改文件后不生效&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;有时候会发现，明明修改了文件的代码，然而没有生效。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;其实不是没有生效，而是静态文件没有更新，此时你需要执行：&lt;br&gt;&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;hexo clean&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后执行：&lt;br&gt;&lt;figure class=&quot;highlight gams&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&lt;span class=&quot;meta-keyword&quot;&gt;$hexo&lt;/span&gt; g&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;重新生成一次即可。&lt;/p&gt;
&lt;h1 id=&quot;社交链接图标&quot;&gt;&lt;a href=&quot;#社交链接图标&quot; class=&quot;headerlink&quot; title=&quot;社交链接图标&quot;&gt;&lt;/a&gt;社交链接图标&lt;/h1&gt;&lt;p&gt;说明一下，这些图标都是出自 &lt;a href=&quot;https://fortawesome.github.io/Font-Awesome/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;FontAwesome - 4.4.0&lt;/code&gt;&lt;/a&gt;，所以你可以根据自己的需求去修改图标。&lt;/p&gt;
&lt;p&gt;实际效果：&lt;br&gt;&lt;img src=&quot;/blog/images/article_img/19-2.png&quot; alt=&quot;效果&quot;&gt;&lt;/p&gt;
&lt;p&gt;有的同学会发现自己的图标是个地球：&lt;br&gt;&lt;img src=&quot;/blog/images/article_img/19-3.png&quot; alt=&quot;效果&quot;&gt;&lt;/p&gt;
&lt;p&gt;需要配置的是主题文件夹下的 &lt;code&gt;_config.yml&lt;/code&gt;，&lt;strong&gt;注意：命名需要一致，包括大小写&lt;/strong&gt;：&lt;br&gt;&lt;figure class=&quot;highlight dts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;# Social links&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;social:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;  GitHub:&lt;/span&gt; https:&lt;span class=&quot;comment&quot;&gt;//github.com/XXX&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;  Twitter:&lt;/span&gt; https:&lt;span class=&quot;comment&quot;&gt;//twitter.com/XXX&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;  Weibo:&lt;/span&gt; http:&lt;span class=&quot;comment&quot;&gt;//weibo.com/XXX&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;  Facebook:&lt;/span&gt; https:&lt;span class=&quot;comment&quot;&gt;//www.facebook.com/XXX&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;  JianShu:&lt;/span&gt; http:&lt;span class=&quot;comment&quot;&gt;//www.jianshu.com/XXX&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;# Social Icons&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;social_icons:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;  enable:&lt;/span&gt; true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;meta&quot;&gt;# Icon Mappings&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;  GitHub:&lt;/span&gt; github&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;  Twitter:&lt;/span&gt; twitter&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;  Weibo:&lt;/span&gt; weibo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;  Facebook:&lt;/span&gt; facebook-square&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;  JianShu:&lt;/span&gt; heartbeat&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;阅读次数&quot;&gt;&lt;a href=&quot;#阅读次数&quot; class=&quot;headerlink&quot; title=&quot;阅读次数&quot;&gt;&lt;/a&gt;阅读次数&lt;/h1&gt;&lt;p&gt;简单介绍一下此功能的做法。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;准备&lt;br&gt;需要在 &lt;a href=&quot;https://leancloud.cn&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LeanCloud&lt;/a&gt; 申请一个帐号，进行一番配置后拿到 AppID 和 AppKey。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;配置&lt;br&gt;然后在主题文件夹下的 &lt;code&gt;_config.yml&lt;/code&gt; 中配置：&lt;/p&gt;
&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Show number of visitors to each article.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# You can visit https://leancloud.cn get AppID and AppKey.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;leancloud_visitors:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  app_id:&lt;/span&gt; XXX&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  app_key:&lt;/span&gt; XXX&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;具体可以阅读&lt;a href=&quot;http://notes.xiamo.tk/2015-10-21-%E4%B8%BANexT%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E9%98%85%E8%AF%BB%E9%87%8F%E7%BB%9F%E8%AE%A1%E5%8A%9F%E8%83%BD.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这篇文章&lt;/a&gt;，里面的介绍非常详细！&lt;/p&gt;
&lt;h1 id=&quot;最后&quot;&gt;&lt;a href=&quot;#最后&quot; class=&quot;headerlink&quot; title=&quot;最后&quot;&gt;&lt;/a&gt;最后&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;文章将持续更新，有任何疑问和建议可以在下面评论。&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;利用 &lt;a href=&quot;https://github.com/&quot;&gt;Github&lt;/a&gt; 所提供的 &lt;strong&gt;Github Page&lt;/strong&gt; 去构建静态的网站已经变得越来越流行，如果还不了解怎么入门，可以阅读我之前的一篇文章&lt;a href=&quot;http://www.jianshu.com/p/f66103553c45&quot;&gt;「使用Hexo + Next搭建静态博客」&lt;/a&gt;。当然构建博客的方法不是只有一种，你也可以尝试其他方法，而本文主要是针对 &lt;strong&gt;Hexo&lt;/strong&gt; 去叙述的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;可能看过&lt;a href=&quot;http://www.jianshu.com/p/f66103553c45&quot;&gt;「使用Hexo + Next搭建静态博客」&lt;/a&gt;这篇文章的同学都已经构建好了属于自己的博客了，那么接下来要说的就是关于 &lt;a href=&quot;http://theme-next.iissnan.com/&quot;&gt;NexT 主题&lt;/a&gt;中遇到的一些问题和提示。&lt;/p&gt;
&lt;h1 id=&quot;关于-RSS&quot;&gt;&lt;a href=&quot;#关于-RSS&quot; class=&quot;headerlink&quot; title=&quot;关于 RSS&quot;&gt;&lt;/a&gt;关于 RSS&lt;/h1&gt;&lt;p&gt;很多同学在看到别人的博客时，都会发现有订阅的功能（即 RSS），但无奈官方介绍比较少，所以无从下手。&lt;/p&gt;
&lt;p&gt;那么下面将教大家如何去做：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;准备&lt;br&gt;你需要安装一个 &lt;strong&gt;Hexo 插件&lt;/strong&gt;：&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;--save hexo-generator-feed&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;配置&lt;br&gt;接下来需要在 &lt;code&gt;_config.yml&lt;/code&gt; 中配置一下，在 root 目录下的 &lt;code&gt;_config.yml&lt;/code&gt; 中添加：&lt;/p&gt;
&lt;figure class=&quot;highlight verilog&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# Extensions&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## Plugins: http:&lt;span class=&quot;comment&quot;&gt;//hexo.io/plugins/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plugins:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  hexo-&lt;span class=&quot;keyword&quot;&gt;generate&lt;/span&gt;-feed&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;然后在主题文件夹的 &lt;code&gt;_config.yml&lt;/code&gt; 中配置：&lt;br&gt;&lt;figure class=&quot;highlight vbscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# &lt;span class=&quot;keyword&quot;&gt;Set&lt;/span&gt; rss &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; disable feed link.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Leave rss as &lt;span class=&quot;literal&quot;&gt;empty&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; use site&lt;span class=&quot;comment&quot;&gt;&#39;s feed link.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# &lt;span class=&quot;keyword&quot;&gt;Set&lt;/span&gt; rss &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; specific value &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; you have burned your feed already.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rss: /atom.xml&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="笔记随笔" scheme="http://HankCoder.github.io/blog/categories/%E7%AC%94%E8%AE%B0%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="Hexo" scheme="http://HankCoder.github.io/blog/tags/Hexo/"/>
    
      <category term="NexT" scheme="http://HankCoder.github.io/blog/tags/NexT/"/>
    
      <category term="github" scheme="http://HankCoder.github.io/blog/tags/github/"/>
    
      <category term="博客" scheme="http://HankCoder.github.io/blog/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>React 入门实践</title>
    <link href="http://HankCoder.github.io/blog/2016/01/26/article-18/"/>
    <id>http://HankCoder.github.io/blog/2016/01/26/article-18/</id>
    <published>2016-01-26T01:43:59.000Z</published>
    <updated>2016-05-22T14:56:40.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;在写这篇文章之前，我已经接触 React 有大半年了。在初步学习 React 之后就正式应用到项目中，当时就想把自己的一些想法写出来分享一下，无奈不太会写文章，再则时间不是很充裕，所以也就搁下了。&lt;br&gt;本篇文章比较基础，没有深入的分析，大神们轻看。废话就不多说了，那么让我们来进入正题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;首先想要介绍的是 React，看到这篇文章的朋友想必都有一些关于 React 的了解了，但对于刚接触的新人而言，在这就要简要地介绍一下了。然后就是关于使用 React 构建一个简单单页应用（下文用 SPA 代替，Single Page Application）的一些介绍和讲解。&lt;/p&gt;
&lt;h2 id=&quot;关于-React&quot;&gt;&lt;a href=&quot;#关于-React&quot; class=&quot;headerlink&quot; title=&quot;关于 React&quot;&gt;&lt;/a&gt;关于 React&lt;/h2&gt;&lt;p&gt;React 起源于 Facebook 的内部项目，因为该公司对市场上所有 JavaScript MVC 框架，都不满意，就决定自己写一套，用来架设Instagram 的网站。做出来以后，发现这套东西很好用，就在2013年5月开源了。（&lt;a href=&quot;http://baike.baidu.com/item/react/18077599#viewPageContent&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;更多相关介绍请看这&lt;/a&gt;）&lt;/p&gt;
&lt;p&gt;特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;仅仅只是 UI&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;虚拟 DOM&lt;/strong&gt;：最大限度减少与 DOM 的交互（类似于使用 jQuery 操作 DOM）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;单向数据流&lt;/strong&gt;：很大程度减少了重复代码的使用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;组件化：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可组合（Composeable）：一个组件易于和其它组件一起使用，或者嵌套在另一个组件内部。如果一个组件内部创建了另一个组件，那么说父组件拥有（own）它创建的子组件，通过这个特性，一个复杂的UI可以拆分成多个简单的UI组件&lt;/li&gt;
&lt;li&gt;可重用（Reusable）：每个组件都是具有独立功能的，它可以被使用在多个UI场景&lt;/li&gt;
&lt;li&gt;可维护（Maintainable）：每个小的组件仅仅包含自身的逻辑，更容易被理解和维护&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;生命周期：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mounting：已插入真实 DOM&lt;/li&gt;
&lt;li&gt;Updating：正在被重新渲染&lt;/li&gt;
&lt;li&gt;Unmounting：已移出真实 DOM&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;React 为每个状态都提供了两种处理函数，will 函数在进入状态之前调用，did 函数在进入状态之后调用，三种状态共计五种处理函数。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;componentWillMount()&lt;/li&gt;
&lt;li&gt;componentDidMount()&lt;/li&gt;
&lt;li&gt;componentWillUpdate(object nextProps, object nextState)&lt;/li&gt;
&lt;li&gt;componentDidUpdate(object prevProps, object prevState)&lt;/li&gt;
&lt;li&gt;componentWillUnmount()&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此外，React 还提供两种特殊状态的处理函数。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;componentWillReceiveProps(object nextProps)：已加载组件收到新的参数时调用&lt;/li&gt;
&lt;li&gt;shouldComponentUpdate(object nextProps, object nextState)：组件判断是否重新渲染时调用&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;正题&quot;&gt;&lt;a href=&quot;#正题&quot; class=&quot;headerlink&quot; title=&quot;正题&quot;&gt;&lt;/a&gt;正题&lt;/h1&gt;&lt;p&gt;那么进入正题，花了点时间去写一个简单的 SPA，也算是一个比较完整 React 骨架，但不包括测试（测试的教程可以看&lt;a href=&quot;http://www.jianshu.com/p/6c74c96148c9&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这个&lt;/a&gt;），相关源码可以查看 &lt;a href=&quot;https://github.com/jovey-zheng/react-start-kit&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;react-start-kit&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;接下来看看我们这个项目的构建需要用到些什么：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;react&lt;/li&gt;
&lt;li&gt;redux&lt;/li&gt;
&lt;li&gt;webpack&lt;/li&gt;
&lt;li&gt;react-router&lt;/li&gt;
&lt;li&gt;ant design&lt;/li&gt;
&lt;li&gt;babel&lt;br&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;还有一些没有列举出来，具体可以看仓库源码的 &lt;a href=&quot;https://github.com/jovey-zheng/react-start-kit/blob/master/package.json&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;package.json&lt;/code&gt;&lt;/a&gt;。其中的详细介绍会在文尾列出一些我所看过的文章或是官方介绍。&lt;/p&gt;
&lt;h2 id=&quot;配置项&quot;&gt;&lt;a href=&quot;#配置项&quot; class=&quot;headerlink&quot; title=&quot;配置项&quot;&gt;&lt;/a&gt;配置项&lt;/h2&gt;&lt;h3 id=&quot;Webpack&quot;&gt;&lt;a href=&quot;#Webpack&quot; class=&quot;headerlink&quot; title=&quot;Webpack&quot;&gt;&lt;/a&gt;Webpack&lt;/h3&gt;&lt;p&gt;说到 React 项目的构建就不得不提 Webpack 这个神器。构建工具有很多，例如 Grunt，Gulp，Brunch 等，相比这些构建工具，Webpack 感觉就是和 React 不谋而合，尤其是 &lt;a href=&quot;https://github.com/gaearon/react-hot-loader&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;react-hot-loader&lt;/a&gt; 这样的神器（热加载），让 Webpack 成为最主流的 React 构建工具。&lt;/p&gt;
&lt;p&gt;关于 Webpack 的特性以及介绍这里就不赘述了，我们可以从下图看出 Webpack 的作用：&lt;br&gt;&lt;img src=&quot;http://cdn4.infoqstatic.com/statics_s2_20160120-0059u2/resource/articles/react-and-webpack/zh/resources/0602005.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;接着我们从项目代码中来看 Webpack。&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;entry&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;app&lt;/span&gt;: [__dirname + &lt;span class=&quot;string&quot;&gt;&#39;/src/index&#39;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;output&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;path&lt;/span&gt;: __dirname + &lt;span class=&quot;string&quot;&gt;&#39;/_dist&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  filename: &lt;span class=&quot;string&quot;&gt;&#39;[name]_[hash].js&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这部分主要是指定入口和出口文件。&lt;code&gt;entry&lt;/code&gt; 作为项目的入口文件；&lt;code&gt;output&lt;/code&gt; 作为文件编译后的出口，其中 &lt;code&gt;path&lt;/code&gt; 代表输出的路径，&lt;code&gt;filename&lt;/code&gt; 代表文件名称，而 &lt;code&gt;[name]_[hash]&lt;/code&gt; 保证了浏览器不会存在缓存（即修改文件后效果不生效）。&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;module&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;loaders&lt;/span&gt;: [&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    test: /\.js$/,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    loaders: [&lt;span class=&quot;string&quot;&gt;&#39;babel&#39;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    exclude: /node_modules/,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;test&lt;/span&gt;: /\.css$/,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    loaders: [&lt;span class=&quot;string&quot;&gt;&#39;style&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;css&#39;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    include: /components/,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;test&lt;/span&gt;: /\.(jpe?g|png|gif|svg|ico)/i,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    loader: &lt;span class=&quot;string&quot;&gt;&#39;file&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;test&lt;/span&gt;: /\.(ttf|eot|svg|woff|woff2)/,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    loader: &lt;span class=&quot;string&quot;&gt;&#39;file&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;test&lt;/span&gt;: /\.(pdf)/,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    loader: &lt;span class=&quot;string&quot;&gt;&#39;file&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;test&lt;/span&gt;: /\.(swf|xap)/,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    loader: &lt;span class=&quot;string&quot;&gt;&#39;file&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;而这部分会帮助我们去处理不同类型的文件，其中 &lt;code&gt;test&lt;/code&gt; 就是文件的后缀，&lt;code&gt;loaders&lt;/code&gt; 是“转译器”，&lt;code&gt;include&lt;/code&gt; 是指定文件的目录，&lt;code&gt;exclude&lt;/code&gt; 是排除某个目录。我们可以看出，所有的 &lt;code&gt;.js&lt;/code&gt; 文件都会通过 babel 去转译，也就是我们在项目中使用 ES6+ 语法会通过 babel 转译成浏览器可以识别的 ES5 代码。&lt;/p&gt;
&lt;p&gt;最后配置好的 config 是这样的：&lt;br&gt;&lt;figure class=&quot;highlight typescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; HtmlWebpackPlugin = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;html-webpack-plugin&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;module&lt;/span&gt;.exports = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  entry: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    app: [__dirname + &lt;span class=&quot;string&quot;&gt;&#39;/src/index&#39;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  output: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    path: __dirname + &lt;span class=&quot;string&quot;&gt;&#39;/_dist&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    filename: &lt;span class=&quot;string&quot;&gt;&#39;[name]_[hash].js&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  resolve: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    root: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      __dirname + &lt;span class=&quot;string&quot;&gt;&#39;/src&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      __dirname + &lt;span class=&quot;string&quot;&gt;&#39;/node_modules&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      __dirname,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    extensions: [&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;.js&#39;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;module&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    loaders: [&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      test: &lt;span class=&quot;regexp&quot;&gt;/\.js$/&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      loaders: [&lt;span class=&quot;string&quot;&gt;&#39;babel&#39;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      exclude: &lt;span class=&quot;regexp&quot;&gt;/node_modules/&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      test: &lt;span class=&quot;regexp&quot;&gt;/\.css$/&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      loaders: [&lt;span class=&quot;string&quot;&gt;&#39;style&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;css&#39;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      include: &lt;span class=&quot;regexp&quot;&gt;/components/&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      test: &lt;span class=&quot;regexp&quot;&gt;/\.(jpe?g|png|gif|svg|ico)/i&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      loader: &lt;span class=&quot;string&quot;&gt;&#39;file&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      test: &lt;span class=&quot;regexp&quot;&gt;/\.(ttf|eot|svg|woff|woff2)/&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      loader: &lt;span class=&quot;string&quot;&gt;&#39;file&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      test: &lt;span class=&quot;regexp&quot;&gt;/\.(pdf)/&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      loader: &lt;span class=&quot;string&quot;&gt;&#39;file&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      test: &lt;span class=&quot;regexp&quot;&gt;/\.(swf|xap)/&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      loader: &lt;span class=&quot;string&quot;&gt;&#39;file&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  plugins: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HtmlWebpackPlugin(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      template: __dirname + &lt;span class=&quot;string&quot;&gt;&#39;/src/index.html&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      favicon: __dirname + &lt;span class=&quot;string&quot;&gt;&#39;/src/favicon.ico&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      inject: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;Express-服务器启动&quot;&gt;&lt;a href=&quot;#Express-服务器启动&quot; class=&quot;headerlink&quot; title=&quot;Express 服务器启动&quot;&gt;&lt;/a&gt;Express 服务器启动&lt;/h3&gt;&lt;p&gt;Node.js web 应用开发框架 Express 作为项目的 web 服务器，有 Node.js 开发经验的同学应该挺熟悉的了，这里也不多做赘述。&lt;/p&gt;
&lt;p&gt;最终的启动代码是这样的：&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; express = &lt;span class=&quot;keyword&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;express&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; webpack = &lt;span class=&quot;keyword&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;webpack&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; webpackConfig = &lt;span class=&quot;keyword&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;./webpack.development&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; app = express();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; compiler = webpack(webpackConfig);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.&lt;span class=&quot;keyword&quot;&gt;use&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;webpack-dev-middleware&#39;&lt;/span&gt;)(compiler, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  stats: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    colors: &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.&lt;span class=&quot;keyword&quot;&gt;use&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;webpack-hot-middleware&#39;&lt;/span&gt;)(compiler)); &lt;span class=&quot;comment&quot;&gt;//热加载&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.listen(process.env.PORT, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(err)&lt;/span&gt; &lt;/span&gt;&amp;#123; &lt;span class=&quot;comment&quot;&gt;//在没有端口的情况下，会自动给出一个随机端口&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log(err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;为了方便我们的访问，项目使用了 &lt;code&gt;minihost&lt;/code&gt; 进行启动，方便快捷。值得一提的是，使用 &lt;code&gt;h -- npm start&lt;/code&gt; 命令启动时，访问的是项目文件夹的名称作为链接，例如项目叫 &lt;code&gt;myproject&lt;/code&gt;，那么此时可以访问 &lt;code&gt;myproject.t.t&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&quot;Redux&quot;&gt;&lt;a href=&quot;#Redux&quot; class=&quot;headerlink&quot; title=&quot;Redux&quot;&gt;&lt;/a&gt;Redux&lt;/h2&gt;&lt;p&gt;对于复杂的 SPA，状态（state）管理非常重要。state 可能包括：服务端的响应数据、本地对响应数据的缓存、本地创建的数据（比如，表单数据）以及一些 UI 的状态信息（比如，路由、选中的 tab、是否显示下拉列表、页码控制等等）。如果 state 变化不可预测，就会难于调试（state 不易重现，很难复现一些 bug）和不易于扩展（比如，优化更新渲染、服务端渲染、路由切换时获取数据等等）。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;state 为单一对象，使得 Redux 只需要维护一棵状态树，服务端很容易初始化状态，易于服务器渲染。state 只能通过 dispatch(action) 来触发更新，更新逻辑由 reducer 来执行。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在使用 Redux 后，state 就变得很容易维护，而且数据流非常清晰，容易解决遇到的 BUG。&lt;/p&gt;
&lt;p&gt;我们可以看下图来简要地理解 Redux：&lt;br&gt;&lt;img src=&quot;http://pic3.mojiax.com/mdimg/2016225/o_1acbp1n1r1qq9107d1enudoa15dtc.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;我们可以在项目中看到的结构是：&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;├─store&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├─actions&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├─reducers&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├─constants&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├─helpers&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├─components&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├─app&lt;span class=&quot;selector-class&quot;&gt;.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├─favicon&lt;span class=&quot;selector-class&quot;&gt;.ico&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├─index&lt;span class=&quot;selector-class&quot;&gt;.html&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├─index&lt;span class=&quot;selector-class&quot;&gt;.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└─routes.js&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;最终我们的 store 是：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &amp;#123;createStore, applyMiddleware, combineReducers, compose&amp;#125; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;redux&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; thunk &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;redux-thunk&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &amp;#123;reduxReactRouter&amp;#125; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;redux-router&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; createHistory &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;history/lib/createHashHistory&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; routes &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;../routes&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; * &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; reducers &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;../reducers&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; middlewares = [thunk];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (process.env.NODE_ENV === &lt;span class=&quot;string&quot;&gt;&#39;development&#39;&lt;/span&gt;) &amp;#123; &lt;span class=&quot;comment&quot;&gt;//在开发环境下可以看到 state 的 log&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; logger = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;redux-logger&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  middlewares = [...middlewares, logger];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; finalCreateStore = compose( &lt;span class=&quot;comment&quot;&gt;//组合多个函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  applyMiddleware(...middlewares),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  reduxReactRouter(&amp;#123;routes, createHistory&amp;#125;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)(createStore); &lt;span class=&quot;comment&quot;&gt;//创建 store 来管理所有的 state&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;configureStore&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;initialState&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; reducer = combineReducers(reducers);  &lt;span class=&quot;comment&quot;&gt;//把一个由多个不同 reducer 函数作为 value 的 object，合并成一个最终的 reducer 函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; store = finalCreateStore(reducer, initialState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (process.env.NODE_ENV === &lt;span class=&quot;string&quot;&gt;&#39;development&#39;&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.hot) &amp;#123; &lt;span class=&quot;comment&quot;&gt;//开发环境下的热加载&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.hot.accept(&lt;span class=&quot;string&quot;&gt;&#39;../reducers&#39;&lt;/span&gt;, () =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; nextReducers = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;../reducers&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; nextReducer = combineReducers(nextReducers);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      store.replaceReducer(nextReducer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; store;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;获取 state 需要在组件中调用 &lt;code&gt;connect&lt;/code&gt; 函数，可以自行定义需要获取的 state。（这用于区分展示型和容器型组件）&lt;br&gt;&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@connect&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  state =&amp;gt; (&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    data: state.data&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ComponentOne&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Component&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：&lt;code&gt;connect&lt;/code&gt; 必须紧跟 component 的定义，不然会报错。&lt;/p&gt;
&lt;h2 id=&quot;Router&quot;&gt;&lt;a href=&quot;#Router&quot; class=&quot;headerlink&quot; title=&quot;Router&quot;&gt;&lt;/a&gt;Router&lt;/h2&gt;&lt;p&gt;为项目添加路由系统，使用了 react-router 来管理路由。在开发项目的时候，比较推荐的做法是使用路由去跳转页面，并且创建 store 的同时我们就把 router 加入其中，然后我们根据路由的变化去更新视图。&lt;/p&gt;
&lt;p&gt;我们可以看看路由的源码：&lt;br&gt;&lt;figure class=&quot;highlight moonscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; React &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;react&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Route &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;react-router/lib/Route&#39;&lt;/span&gt;; //&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &amp;#123;Route&amp;#125; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;react-router&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Base &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;components/base/Base&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Home &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;components/home/Home&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; default (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;Route component=&amp;#123;Base&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;Route path=&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt; component=&amp;#123;Home&amp;#125; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;Route path=&lt;span class=&quot;string&quot;&gt;&quot;/home&quot;&lt;/span&gt; component=&amp;#123;Home&amp;#125; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;/Route&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;path&lt;/code&gt; 是跳转路径，&lt;code&gt;component&lt;/code&gt; 是与路径相匹配的组件。&lt;/p&gt;
&lt;h2 id=&quot;Ant-Design&quot;&gt;&lt;a href=&quot;#Ant-Design&quot; class=&quot;headerlink&quot; title=&quot;Ant Design&quot;&gt;&lt;/a&gt;Ant Design&lt;/h2&gt;&lt;p&gt;由蚂蚁金服技术部出品的一个 UI 设计语言，也是项目中所用到的 UI 组件库。&lt;/p&gt;
&lt;p&gt;特性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Designed as Ant Design，提炼和服务企业级中后台产品的交互语言和视觉风格&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://react-component.github.io/badgeboard/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Component&lt;/a&gt; 上精心封装的高质量 UI 库&lt;/li&gt;
&lt;li&gt;基于 npm + webpack + babel 的工作流，支持 ES2015&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;选择理由：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;有很好的技术支持&lt;/li&gt;
&lt;li&gt;简洁的样式&lt;/li&gt;
&lt;li&gt;基本涵盖常用组件&lt;br&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;简单的-Component&quot;&gt;&lt;a href=&quot;#简单的-Component&quot; class=&quot;headerlink&quot; title=&quot;简单的 Component&quot;&gt;&lt;/a&gt;简单的 Component&lt;/h2&gt;&lt;p&gt;组件作为 React 渲染的一个基本组成，我们通常把它们分为两类，&lt;strong&gt;容器型&lt;/strong&gt;和&lt;strong&gt;展示型&lt;/strong&gt;。相较于&lt;strong&gt;容器型&lt;/strong&gt;，&lt;strong&gt;展示型&lt;/strong&gt;是通过&lt;strong&gt;容器型&lt;/strong&gt;传递 props 来获取数据，而&lt;strong&gt;容器型&lt;/strong&gt;可以直接从 store 中获取，处理并传递给下级组件。&lt;/p&gt;
&lt;p&gt;在实际应用中会发现，定义一个容器型组件负责处理数据，然后分发给下级展示型组件，当需要更新数据时，那么容器型组件发生变化会引起下级展示型组件的变化，这样就对我们业务上造成了一定的困扰（在不需要更新的部分组件上也发生了更新）。因此，我们选择在需要获取数据的组件中使用 &lt;code&gt;connect&lt;/code&gt;，这样则会方便很多（感觉有些违反规则）。&lt;/p&gt;
&lt;p&gt;在项目中我们会这么定义组件：&lt;br&gt;&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;React&lt;/span&gt;, &amp;#123;&lt;span class=&quot;type&quot;&gt;Component&lt;/span&gt;&amp;#125; from &lt;span class=&quot;symbol&quot;&gt;&#39;reac&lt;/span&gt;t&#39;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &amp;#123;connect&amp;#125; from &lt;span class=&quot;symbol&quot;&gt;&#39;react&lt;/span&gt;-redux&#39;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Presentational&lt;/span&gt; from &lt;span class=&quot;symbol&quot;&gt;&#39;components&lt;/span&gt;/common/&lt;span class=&quot;type&quot;&gt;Presentational&lt;/span&gt;&#39;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@connect&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  state =&amp;gt; (&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    data: state.data&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Container&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Component&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  render() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    const &amp;#123;data&amp;#125; = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.props;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;&lt;span class=&quot;type&quot;&gt;Presentational&lt;/span&gt; data=&amp;#123;data&amp;#125; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面是可以从 store 获取数据的组件，并嵌套另一个组件，将数据传递给它。&lt;br&gt;&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;React&lt;/span&gt;, &amp;#123;&lt;span class=&quot;type&quot;&gt;Component&lt;/span&gt;, &lt;span class=&quot;type&quot;&gt;PropTypes&lt;/span&gt;&amp;#125; from &lt;span class=&quot;symbol&quot;&gt;&#39;reac&lt;/span&gt;t&#39;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Presentational&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Component&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  static propTypes = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    data: &lt;span class=&quot;type&quot;&gt;PropTypes&lt;/span&gt;.string,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  render() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    const &amp;#123;data&amp;#125; = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.props;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;data&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;获取上一个组件传递过来的数据，并展示出来。&lt;/p&gt;
&lt;h1 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h1&gt;&lt;p&gt;这是一篇科普文（哈哈~囧），并没有深入去分析各项技术的具体内容，希望能帮助刚入手 React 的新手们。实践项目的源码可以在 &lt;a href=&quot;https://github.com/jovey-zheng/react-start-kit&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;react-start-kit&lt;/a&gt; 看到，你可以下载这个项目进行自己的一些探索和开发。还在努力探索中，文中有措辞不当或是疏漏，欢迎提出意见和建议。&lt;/p&gt;
&lt;h1 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://facebook.github.io/react/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;react 官网&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://babeljs.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Babel 官网&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://segmentfault.com/a/1190000003503338?_ea=323420&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;redux 介绍&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://camsong.github.io/redux-in-chinese/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;redux 中文文档&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://ant.design/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Ant design 官网&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2015/03/react.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React 入门实例教程&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://react-guide.github.io/react-router-cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;react-router 中文文档&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://zhuanlan.zhihu.com/FrontendMagazine/20367175&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Webpack 傻瓜式指南（一）&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://zhuanlan.zhihu.com/purerender/20495964&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS Modules 详解及 React 中实践&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.cocoachina.com/webapp/20150721/12692.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;一看就懂的 ReactJs 入门教程（精华版）&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.infoq.com/cn/articles/react-and-webpack?utm_source=tuicool&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;深入浅出React（二）：React开发神器Webpack&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;在写这篇文章之前，我已经接触 React 有大半年了。在初步学习 React 之后就正式应用到项目中，当时就想把自己的一些想法写出来分享一下，无奈不太会写文章，再则时间不是很充裕，所以也就搁下了。&lt;br&gt;本篇文章比较基础，没有深入的分析，大神们轻看。废话就不多说了，那么让我们来进入正题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;首先想要介绍的是 React，看到这篇文章的朋友想必都有一些关于 React 的了解了，但对于刚接触的新人而言，在这就要简要地介绍一下了。然后就是关于使用 React 构建一个简单单页应用（下文用 SPA 代替，Single Page Application）的一些介绍和讲解。&lt;/p&gt;
&lt;h2 id=&quot;关于-React&quot;&gt;&lt;a href=&quot;#关于-React&quot; class=&quot;headerlink&quot; title=&quot;关于 React&quot;&gt;&lt;/a&gt;关于 React&lt;/h2&gt;&lt;p&gt;React 起源于 Facebook 的内部项目，因为该公司对市场上所有 JavaScript MVC 框架，都不满意，就决定自己写一套，用来架设Instagram 的网站。做出来以后，发现这套东西很好用，就在2013年5月开源了。（&lt;a href=&quot;http://baike.baidu.com/item/react/18077599#viewPageContent&quot;&gt;更多相关介绍请看这&lt;/a&gt;）&lt;/p&gt;
&lt;p&gt;特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;仅仅只是 UI&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;虚拟 DOM&lt;/strong&gt;：最大限度减少与 DOM 的交互（类似于使用 jQuery 操作 DOM）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;单向数据流&lt;/strong&gt;：很大程度减少了重复代码的使用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;组件化：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可组合（Composeable）：一个组件易于和其它组件一起使用，或者嵌套在另一个组件内部。如果一个组件内部创建了另一个组件，那么说父组件拥有（own）它创建的子组件，通过这个特性，一个复杂的UI可以拆分成多个简单的UI组件&lt;/li&gt;
&lt;li&gt;可重用（Reusable）：每个组件都是具有独立功能的，它可以被使用在多个UI场景&lt;/li&gt;
&lt;li&gt;可维护（Maintainable）：每个小的组件仅仅包含自身的逻辑，更容易被理解和维护&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="React" scheme="http://HankCoder.github.io/blog/categories/React/"/>
    
    
      <category term="React" scheme="http://HankCoder.github.io/blog/tags/React/"/>
    
      <category term="入门" scheme="http://HankCoder.github.io/blog/tags/%E5%85%A5%E9%97%A8/"/>
    
      <category term="实践" scheme="http://HankCoder.github.io/blog/tags/%E5%AE%9E%E8%B7%B5/"/>
    
  </entry>
  
  <entry>
    <title>React 测试驱动教程</title>
    <link href="http://HankCoder.github.io/blog/2016/01/21/article-17/"/>
    <id>http://HankCoder.github.io/blog/2016/01/21/article-17/</id>
    <published>2016-01-21T10:19:35.000Z</published>
    <updated>2016-05-22T14:56:40.000Z</updated>
    
    <content type="html">&lt;p&gt;测试是开发周期中的一个重要组成部分。没有测试的代码被称为：遗留代码。对于我而言，第一次学习 React 和 JavaScript 的时候，感到很有压力。如果你也是刚开始学习 JS/React，并加入他们的社区，那么也可能会有相同的感觉。想到的会是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;我应该用哪一个构建工具？&lt;/li&gt;
&lt;li&gt;哪一个测试框架比较好？&lt;/li&gt;
&lt;li&gt;我应该学习哪种流模式？&lt;/li&gt;
&lt;li&gt;我需要用到流吗？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为了解决这些烦恼，我决定写这篇文章。经过几个小时的博客文章阅读，查阅 JS 开发者的源码，还有参加 Florida 的 JSConf，终于让我找到了自己的测试“槽”。开始让我觉得没有经过测试的 React 程序代码是如此的不标准和凌乱。我想活在一个没有这种感觉的世界，但后来想想，这是不对的。&lt;/p&gt;
&lt;p&gt;本教程所有的代码都可以在我的 &lt;a href=&quot;https://github.com/SpencerCDixon/react-testing-starter-kit&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github 仓库&lt;/a&gt;中找到。&lt;/p&gt;
&lt;p&gt;让我们开始吧！&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;设置-Webpack&quot;&gt;&lt;a href=&quot;#设置-Webpack&quot; class=&quot;headerlink&quot; title=&quot;设置 Webpack&quot;&gt;&lt;/a&gt;设置 Webpack&lt;/h2&gt;&lt;p&gt;本教程不是一个教如何使用 webpack，所以我不会详细说，但重要的是要了解基本的东西。&lt;br&gt;Webpack 就像 Rails 中的 Assets Pipeline 一样。在基础层面上而言，在运行 react 应用时，&lt;br&gt;会在处理你的代码和服务的前后，只生成一个 &lt;code&gt;bundle.js&lt;/code&gt; 在客户端。&lt;/p&gt;
&lt;p&gt;因为它是一个非常强大的工具，所以我们会常常用到。在开始，Webpack 的功能可能会吓到你，&lt;br&gt;但我建议你坚持使用下去，一旦你了解了其中的原理，就会觉得得心应手。而你只需给它一个机会去表现。&lt;/p&gt;
&lt;p&gt;通常我们不会喜欢那些我们不会的，或是害怕的。然而，一旦你克服初始不适并开始理解它，总会变得很有趣。事实上，这正是我对测试的感受。当开始时讨厌它，在熟悉后喜欢它 :-)&lt;/p&gt;
&lt;p&gt;如果感兴趣，这里有一些资源来更多地了解关于 webpack：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://christianalfoni.github.io/react-webpack-cookbook/Getting-started.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Webpack Cookbook&lt;/a&gt;（使用的是 Babel 5，但对于学习 Webpack 的基本原理而言还是很有用的）&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.madewithlove.be/post/webpack-your-bags/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Webpack 初学者可以看这篇文章&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/petehunt/webpack-howto&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Pete Hunts 所写的 Webpack How-to&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：如果要持续随本教程实验，建议使用 Node 版本为 &lt;code&gt;v5.1.0&lt;/code&gt;。当然版本 &lt;code&gt;&amp;gt;4&lt;/code&gt; 的也是可以的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先，安装所有关于 webpack 和 babel 的依赖。Babel 是一个转译器，允许你在开发时使用 ES6（es2015）和 ES7 的特性，然后将这些代码转译成浏览器可以识别的 ES5 代码。&lt;/p&gt;
&lt;figure class=&quot;highlight gams&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkdir tdd_react&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd tdd_react&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm init        # follow along with &lt;span class=&quot;built-in&quot;&gt;normal&lt;/span&gt; npm init to &lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; up &lt;span class=&quot;comment&quot;&gt;project&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;comment&quot;&gt;i babel-loader babel-core webpack --save-dev&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;npm i&lt;/code&gt; 是 npm install 的别名。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;接下来，让我们设置项目的路径和创建一个 &lt;code&gt;webpack.config.js&lt;/code&gt; 文件：&lt;/p&gt;
&lt;figure class=&quot;highlight perl&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;mkdir&lt;/span&gt; src                  &lt;span class=&quot;comment&quot;&gt;# where all our source code will live&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;touch src/main.js          &lt;span class=&quot;comment&quot;&gt;# this will be the entry point for our webpack bundling&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;mkdir&lt;/span&gt; test                 &lt;span class=&quot;comment&quot;&gt;# place to store all our tests&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;mkdir&lt;/span&gt; dist                 &lt;span class=&quot;comment&quot;&gt;# this is where the bundled javascript from webpack will go&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;touch webpack.config.js    &lt;span class=&quot;comment&quot;&gt;# our webpack configuration file&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;初始化的 webpack config 会很小。阅读这些注释，理解下发生了什么：&lt;/p&gt;
&lt;figure class=&quot;highlight typescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// our webpack.config.js file located in project root&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; webpack = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;webpack&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; path = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;path&#39;&lt;/span&gt;);                &lt;span class=&quot;comment&quot;&gt;// a useful node path helper library&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; config = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  entry: [&lt;span class=&quot;string&quot;&gt;&#39;./src/main.js&#39;&lt;/span&gt;],                &lt;span class=&quot;comment&quot;&gt;// the entry point for our app&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  output: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    path: path.resolve(__dirname, &lt;span class=&quot;string&quot;&gt;&#39;dist&#39;&lt;/span&gt;), &lt;span class=&quot;comment&quot;&gt;// store the bundled output in dist/bundle.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    filename: &lt;span class=&quot;string&quot;&gt;&#39;bundle.js&#39;&lt;/span&gt;                  &lt;span class=&quot;comment&quot;&gt;// specifying file name for our compiled assets&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;module&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    loaders: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// telling webpack which loaders we want to use.  For now just run the&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// code through the babel-loader.  &#39;babel&#39; is an alias for babel-loader&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#123; test: &lt;span class=&quot;regexp&quot;&gt;/\.js$/&lt;/span&gt;, loaders: [&lt;span class=&quot;string&quot;&gt;&#39;babel&#39;&lt;/span&gt;], exclude: &lt;span class=&quot;regexp&quot;&gt;/node_modules/&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;module&lt;/span&gt;.exports = config;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;为了让 babel 更好地工作，我们需要定义哪个 &lt;code&gt;presets&lt;/code&gt; 是我们需要用到的。让我们继续，并且安装 React 和 ES6 预处理所需的东西：&lt;/p&gt;
&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;npm&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;babel-preset-react &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;babel-preset-es2015 &lt;/span&gt;--save-dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;现在我们有一些选项。在 webpack config 文件中，会告诉你哪一块是做 bebel 预处理的：&lt;/p&gt;
&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;loader&lt;span class=&quot;variable&quot;&gt;s:&lt;/span&gt; [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tes&lt;span class=&quot;variable&quot;&gt;t:&lt;/span&gt; /\.js$/,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    loader&lt;span class=&quot;variable&quot;&gt;s:&lt;/span&gt; [&lt;span class=&quot;string&quot;&gt;&#39;babel&#39;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    exclude: /node_modules/,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    query: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      preset&lt;span class=&quot;variable&quot;&gt;s:&lt;/span&gt; [&lt;span class=&quot;string&quot;&gt;&#39;react&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;es2015&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;另外的方法是将他们存在 &lt;code&gt;.babelrc&lt;/code&gt; 文件中，这也用在我的项目中。将 babel 预处理存储在 &lt;code&gt;.babelrc&lt;/code&gt; 中，对于以后的开发者而言，更容易去找到哪个 babel 预处理是可用的。此外，当我们将 Karma 设置到 webpack 之后，因为 &lt;code&gt;.babelrc&lt;/code&gt; 文件的存在，我们就不再需要其他的预处理配置了。&lt;/p&gt;
&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# inside our project root&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;touch&lt;/span&gt; .babelrc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;将下面这段粘贴到预处理文件中：&lt;/p&gt;
&lt;figure class=&quot;highlight vala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;# .babelrc&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;presets&quot;&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&quot;react&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;es2015&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;为了确认它能否工作，让我们在 &lt;code&gt;main.js&lt;/code&gt; 中加入一些 react 代码，并看看所有的包是否正常。接着安装 React 和 React DOM：&lt;/p&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;selector-tag&quot;&gt;i&lt;/span&gt; react react-dom -S&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;使用 &lt;code&gt;-S&lt;/code&gt; 是 &lt;code&gt;--save&lt;/code&gt; 的别名。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;创建第一个 React 组件：&lt;/p&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# src/main.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;React&lt;/span&gt;, &amp;#123; &lt;span class=&quot;type&quot;&gt;Component&lt;/span&gt; &amp;#125; from &lt;span class=&quot;symbol&quot;&gt;&#39;reac&lt;/span&gt;t&#39;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &amp;#123; render &amp;#125; from &lt;span class=&quot;symbol&quot;&gt;&#39;react&lt;/span&gt;-dom&#39;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Root&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Component&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  render() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;lt;h1&amp;gt; &lt;span class=&quot;type&quot;&gt;Hello&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;World&lt;/span&gt; &amp;lt;/h1&amp;gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;render(&amp;lt;&lt;span class=&quot;type&quot;&gt;Root&lt;/span&gt; /&amp;gt;, document.getElementById(&lt;span class=&quot;symbol&quot;&gt;&#39;roo&lt;/span&gt;t&#39;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;聪明的读者就会察觉我们并没有在根部创建一个 &lt;code&gt;index.html&lt;/code&gt; 文件。让我们继续，当 &lt;code&gt;bundle.js&lt;/code&gt; 编译后，将其放到 &lt;code&gt;/dist&lt;/code&gt; 文件夹中：&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# /dist/index.html&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;root&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;bundle.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;非常棒，让我们继续。最后，我们可以运行 webpack，看看一切是否正常。如果你没有全局安装 webpack（&lt;code&gt;npm i webpack -g&lt;/code&gt;），你也可以用 node modules 方式进行启动：&lt;/p&gt;
&lt;figure class=&quot;highlight coffeescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;.&lt;span class=&quot;regexp&quot;&gt;/node_modules/&lt;/span&gt;.bin/webpack&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Webpack 将默认情况下寻找一个配置名称为 &lt;code&gt;webpack.config.js&lt;/code&gt;。如果你高兴，也可以通过不同 webpack config 作为参数传入。&lt;/p&gt;
&lt;p&gt;在 package.json 中创建一个别名，来完成构建工作：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# package.json&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;... &lt;/span&gt;other stuff&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;scripts&quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;build&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;webpack&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;接下来让 &lt;code&gt;webpack-dev-server&lt;/code&gt; 提升开发体验：&lt;/p&gt;
&lt;figure class=&quot;highlight q&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm i webpack-&lt;span class=&quot;built_in&quot;&gt;dev&lt;/span&gt;-server --&lt;span class=&quot;built_in&quot;&gt;save&lt;/span&gt;-&lt;span class=&quot;built_in&quot;&gt;dev&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;将 webpack dev server 的入口加入到 &lt;code&gt;webpack.config.js&lt;/code&gt; 中：&lt;/p&gt;
&lt;figure class=&quot;highlight ada&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;... rest &lt;span class=&quot;keyword&quot;&gt;of&lt;/span&gt; config&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;entry&lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;symbol&quot;&gt;&#39;webpack&lt;/span&gt;/hot/dev-server&#39;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;symbol&quot;&gt;&#39;webpack&lt;/span&gt;-dev-server/client?http://localhost:&lt;span class=&quot;number&quot;&gt;3000&lt;/span&gt;&#39;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &#39;./src/main.js&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;... rest &lt;span class=&quot;keyword&quot;&gt;of&lt;/span&gt; config&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;让 script 运行在开发服务器上：&lt;/p&gt;
&lt;figure class=&quot;highlight avrasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;# package.json&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;... other stuff&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;scripts:&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;dev&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;webpack-dev-server --port 3000 --devtool eval --progress --colors --hot --content-base dist&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;build&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;webpack&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在 script 中使用了 &lt;code&gt;--content-base&lt;/code&gt; 标记，告诉 webpack 我们想服务于 &lt;code&gt;/dist&lt;/code&gt; 文件夹。我们还定义了 3000 端口，使得更像是 Rails 开发的体验。&lt;/p&gt;
&lt;p&gt;最后，在 webpack 配置文件中添加一个 resolve 标记，使进口文件看起来更直观。下面就是配置文件最终的样子：&lt;/p&gt;
&lt;figure class=&quot;highlight moonscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var webpack = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;webpack&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var path = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;path&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var config = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;name&quot;&gt;entry&lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;webpack/hot/dev-server&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;webpack-dev-server/client?http://localhost:3000&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;./src/main.js&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;name&quot;&gt;resolve&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;name&quot;&gt;root&lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      // allows us to &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; modules as &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; /src was the root.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      // so I can &lt;span class=&quot;name&quot;&gt;do&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Comment &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;components/Comment&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      // instead &lt;span class=&quot;name&quot;&gt;of&lt;/span&gt;:  &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Comment &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;../components/Comment&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt; whatever relative path would be&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      path.resolve(__dirname, &lt;span class=&quot;string&quot;&gt;&#39;./src&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // allows you to &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt; without the .js at end of filenames&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Component &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;component&#39;&lt;/span&gt; vs. &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Component &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;component.js&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;name&quot;&gt;extensions&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;.js&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;.json&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;.jsx&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;name&quot;&gt;output&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;name&quot;&gt;path&lt;/span&gt;: path.resolve(__dirname, &lt;span class=&quot;string&quot;&gt;&#39;dist&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;name&quot;&gt;filename&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;bundle.js&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;name&quot;&gt;module&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;name&quot;&gt;loaders&lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;name&quot;&gt;test&lt;/span&gt;: /\.js?$/,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // dont run node_modules &lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt; bower_components through babel loader&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;name&quot;&gt;exclude&lt;/span&gt;: /(node_modules|bower_components)/,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // babel is alias &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; babel-loader&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // npm i babel-core babel-loader &lt;span class=&quot;comment&quot;&gt;--save-dev&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;name&quot;&gt;loader&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;babel&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = config;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;为确保一切工作正常，让我们运行开发服务器，并且确认我们在屏幕上看到 “Hello World”。&lt;/p&gt;
&lt;figure class=&quot;highlight arduino&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;built_in&quot;&gt;run&lt;/span&gt; dev&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;open&lt;/span&gt; http:&lt;span class=&quot;comment&quot;&gt;//localhost:3000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;你应该看到的是这样的：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/rYTjH77.png?1&quot; alt=&quot;Hello World Image&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;设置-Mocha，Chai，Sinon-和-Enzyme&quot;&gt;&lt;a href=&quot;#设置-Mocha，Chai，Sinon-和-Enzyme&quot; class=&quot;headerlink&quot; title=&quot;设置 Mocha，Chai，Sinon 和 Enzyme&quot;&gt;&lt;/a&gt;设置 Mocha，Chai，Sinon 和 Enzyme&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Mocha&lt;/strong&gt;：将用于运行我们的测试。&lt;br&gt;&lt;strong&gt;Chai&lt;/strong&gt;：是我们期待的库。应用非常广泛，允许使用 RSpec 一样的语法。&lt;br&gt;&lt;strong&gt;Sinon&lt;/strong&gt;：将服务于 mocks/stubs/spies.&lt;br&gt;&lt;strong&gt;Enzyme&lt;/strong&gt;：将用于测试我们的 React components。AirBnB 写的一个很漂亮的测试库。&lt;/p&gt;
&lt;p&gt;安装这些包：&lt;/p&gt;
&lt;figure class=&quot;highlight q&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm i mocha chai sinon --&lt;span class=&quot;built_in&quot;&gt;save&lt;/span&gt;-&lt;span class=&quot;built_in&quot;&gt;dev&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果我们希望能够使用 ES6 编写测试，那么我们需要在运行前对代码进行转译。那么我们需要安装 babel-register：&lt;/p&gt;
&lt;figure class=&quot;highlight q&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm i babel-register --&lt;span class=&quot;built_in&quot;&gt;save&lt;/span&gt;-&lt;span class=&quot;built_in&quot;&gt;dev&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;加一些 npm scripts 到 &lt;code&gt;package.json&lt;/code&gt; 中，让测试更简单：&lt;/p&gt;
&lt;figure class=&quot;highlight ada&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# ./&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt;.json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;... rest &lt;span class=&quot;keyword&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt;.json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;scripts&quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;test&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;mocha --compilers js:babel-register --recursive&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;test:watch&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;npm test -- --watch&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;build&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;webpack&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;dev&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;webpack-dev-server --port 3000 --devtool eval --progress --colors --hot --content-base dist&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们的测试脚本要运行 mocha，并使用 &lt;code&gt;babel-register&lt;/code&gt; 进行转译，然后递归地查看 &lt;code&gt;/test&lt;/code&gt; 目录。&lt;/p&gt;
&lt;p&gt;最终，我们需要设置 Karma，因此 npm script 会变得无效，但如果不设置，它将会正常工作。&lt;code&gt;npm run test:watch&lt;/code&gt; 将会监视程序，并在文件发生修改时重新运行。多么高效！&lt;/p&gt;
&lt;p&gt;确认它能工作，创建一个 hello world 测试 &lt;code&gt;/tests/helloWorld.spec.js&lt;/code&gt;：&lt;/p&gt;
&lt;figure class=&quot;highlight moonscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# /test/helloWorld.spec.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &amp;#123; expect &amp;#125; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;chai&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;describe(&lt;span class=&quot;string&quot;&gt;&#39;hello world&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  it(&lt;span class=&quot;string&quot;&gt;&#39;works!&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    expect(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;).to.be.&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;哇…看起来很像 RSpec！&lt;/p&gt;
&lt;p&gt;如果每一个测试都要引入 &lt;code&gt;expect&lt;/code&gt;，这将变得很麻烦，因此让我们新建一个 &lt;code&gt;test_helper&lt;/code&gt; 文件来保存这些东西：&lt;/p&gt;
&lt;figure class=&quot;highlight livescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# /test/test_helper.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &amp;#123; expect &amp;#125; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;chai&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; sinon &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;sinon&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;global&lt;/span&gt;.expect = expect;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;global&lt;/span&gt;.sinon = sinon;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后把它包括到 npm 脚本的运行套件中，并通过 &lt;code&gt;--require ./test/test_helper.js&lt;/code&gt; 来声明：&lt;/p&gt;
&lt;figure class=&quot;highlight vala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;# package.json script section&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;test&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;mocha --compilers js:babel-register --require ./test/test_helper.js --recursive&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我也添加了 sinon，因此它也可以全局可用。现在无论什么时候，我们在写一个新的测试时，都不需要手动引入 &lt;code&gt;expect&lt;/code&gt; 和 &lt;code&gt;sinon&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&quot;Enzyme&quot;&gt;&lt;a href=&quot;#Enzyme&quot; class=&quot;headerlink&quot; title=&quot;Enzyme&quot;&gt;&lt;/a&gt;Enzyme&lt;/h3&gt;&lt;p&gt;现在我们所需的“普通”测试工具都已经设置好了（mocha，chai，sinon），接着让我们安装 Enzyme，并且开始测试 React component！&lt;/p&gt;
&lt;p&gt;安装这个包：&lt;/p&gt;
&lt;figure class=&quot;highlight q&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm i enzyme react-addons-test-utils --&lt;span class=&quot;built_in&quot;&gt;save&lt;/span&gt;-&lt;span class=&quot;built_in&quot;&gt;dev&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Enzyme 的重要文档可以&lt;a href=&quot;http://airbnb.io/enzyme/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在这里找到&lt;/a&gt;。如果有时间，我推荐阅读 Shallow Rendering 部分。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;你会问，什么是 Shallow Rendering？&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;对我们来说是一种组件调用 render 方法，得到我们可以断言的 React 元素，而无需实际安装组件到 DOM 上。更多的 React 元素&lt;a href=&quot;https://facebook.github.io/react/blog/2015/12/18/react-components-elements-and-instances.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;请看这&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;Enzyme 会将 shallow rendered 组件包裹进一个特殊的 &lt;code&gt;wrapper&lt;/code&gt; 中，进而让我们可以测试。如果你用过 Rails，这看起来像是 Capybara 中的 &lt;code&gt;page&lt;/code&gt; 对象。&lt;/p&gt;
&lt;p&gt;让我们为一些合适的 &lt;code&gt;&amp;lt;Root /&amp;gt;&lt;/code&gt; 组件进行 TDD 的驱动开发。&lt;/p&gt;
&lt;p&gt;这个 Root 组件会是一个 &lt;code&gt;container&lt;/code&gt;，意味着在应用中它可以控制 state 的处理。学习 React 中“智能”和“笨拙”组件之间的差异，对于应用程序体系结构是很重要的。&lt;a href=&quot;https://medium.com/@dan_abramov/smart-and-dumb-components-7ca2f9a7c7d0#.8cnl19w8l&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这篇文章很好地解释了它们&lt;/a&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight moonscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# /tests/containers/Root.spec.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; React &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;react&#39;&lt;/span&gt;;                     // required to get test to work.  we can get around this later with more configuration&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &amp;#123; shallow &amp;#125; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;enzyme&#39;&lt;/span&gt;;              // method &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; enzyme which allows us to &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; shallow render&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Root &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;../../src/containers/Root&#39;&lt;/span&gt;;  // &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; our soon to be component&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;describe(&lt;span class=&quot;string&quot;&gt;&#39;(Container) Root&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  it(&lt;span class=&quot;string&quot;&gt;&#39;renders as a &amp;lt;div&amp;gt;&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    const wrapper = shallow(&amp;lt;Root /&amp;gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    expect(wrapper.&lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt;()).to.eql(&lt;span class=&quot;string&quot;&gt;&#39;div&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  it(&lt;span class=&quot;string&quot;&gt;&#39;has style with height 100%&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    const wrapper = shallow(&amp;lt;Root /&amp;gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    const expectedStyles = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;name&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;100%&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;name&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;#333&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    expect(wrapper.prop(&lt;span class=&quot;string&quot;&gt;&#39;style&#39;&lt;/span&gt;)).to.eql(expectedStyles);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  it(&lt;span class=&quot;string&quot;&gt;&#39;contains a header explaining the app&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    const wrapper = shallow(&amp;lt;Root /&amp;gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    expect(wrapper.find(&lt;span class=&quot;string&quot;&gt;&#39;.welcome-header&#39;&lt;/span&gt;)).to.have.length(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果我们用 &lt;code&gt;npm test&lt;/code&gt; 运行测试，这会失败。因为我们没有在适当的位置创建一个根组件。因此我们可以这样做：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果在任何时候你想看到这段代码的源代码，可以在 &lt;a href=&quot;https://github.com/SpencerCDixon/react-testing-starter-kit&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github 仓库&lt;/a&gt; 中找到&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# /src/containers/&lt;span class=&quot;type&quot;&gt;Root&lt;/span&gt;.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;React&lt;/span&gt;, &amp;#123; &lt;span class=&quot;type&quot;&gt;Component&lt;/span&gt; &amp;#125; from &lt;span class=&quot;symbol&quot;&gt;&#39;reac&lt;/span&gt;t&#39;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;const styles = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  height: &lt;span class=&quot;symbol&quot;&gt;&#39;100&lt;/span&gt;%&#39;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  background: &#39;#&lt;span class=&quot;number&quot;&gt;333&lt;/span&gt;&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Root&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Component&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  render() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;div style=&amp;#123;styles&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;h1 className=&lt;span class=&quot;symbol&quot;&gt;&#39;welcome&lt;/span&gt;-header&#39;&amp;gt;&lt;span class=&quot;type&quot;&gt;Welcome&lt;/span&gt; to testing &lt;span class=&quot;type&quot;&gt;React&lt;/span&gt;!&amp;lt;/h1&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Root&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;重新运行测试就可以了。&lt;/p&gt;
&lt;p&gt;在我们的测试中有很多重复的东西，因此我们还需要回去做一些重构。由于我们没有给 &lt;code&gt;Root&lt;/code&gt; 传入任何的 props，那么我们可以 shallow render 它一次，然后就在一个 wrapper 中结束了我们所有的断言。很多时候给定一个特定的 props 后，我发现自己包装的部分测试会在 “sub” describe 块中，然后给一堆断言也有这些 props。如果你用过 RSpec，就类似于使用 “context” 块。&lt;/p&gt;
&lt;figure class=&quot;highlight lisp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;describe(&#39;(Container) Root&#39;, () =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  const wrapper = shallow(&lt;span class=&quot;name&quot;&gt;&amp;lt;Root&lt;/span&gt; /&amp;gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  it(&#39;renders as a &amp;lt;div&amp;gt;&#39;, () =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    expect(&lt;span class=&quot;name&quot;&gt;wrapper&lt;/span&gt;.type()).to.eql(&#39;div&#39;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  it(&#39;has style with height &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;%&#39;, () =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    const expectedStyles = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      height: &#39;&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;%&#39;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      background: &#39;#333&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    expect(&lt;span class=&quot;name&quot;&gt;wrapper&lt;/span&gt;.prop(&#39;style&#39;)).to.eql(&lt;span class=&quot;name&quot;&gt;expectedStyles&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  it(&#39;contains a header explaining the app&#39;, () =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    expect(&lt;span class=&quot;name&quot;&gt;wrapper&lt;/span&gt;.find(&#39;.welcome-header&#39;)).to.have.length(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;尽可能地在你的测试中使用 &lt;code&gt;shallow&lt;/code&gt;，但偶尔也可能不用。例如，如果你要测试 React 生命周期的方法时，就需要真正地将组件安装出来。&lt;/p&gt;
&lt;p&gt;接下来让我们测试一个组件的安装和调用函数，当它安装时，我们可以得到一些暴露在 &lt;code&gt;sinon&lt;/code&gt; 上的信息和正在使用的 spies。&lt;/p&gt;
&lt;p&gt;我们可以假装 &lt;code&gt;Root&lt;/code&gt; 组件有一个子组件叫 &lt;code&gt;CommentList&lt;/code&gt;，在安装后将调用任意的回调。当通过给定 props 组件安装时，函数被调用，因此我们就可以测试这个场景。在组件渲染时给评论列表一些 style，然后我们就可以知道 shallow render 是如何处理这些样式的了。&lt;code&gt;CommentList&lt;/code&gt; 会在一个组件文件夹的 &lt;code&gt;/src/components/CommentList.js&lt;/code&gt; 中。因为它不处理数据，因此完全取决于 props，换句话说它是一个&lt;strong&gt;纯&lt;/strong&gt;（&lt;strong&gt;笨拙&lt;/strong&gt;）组件：&lt;/p&gt;
&lt;figure class=&quot;highlight dart&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; React from &lt;span class=&quot;string&quot;&gt;&#39;react&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Once we set up Karma to run our tests through webpack&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// we will no longer need to have these long relative paths&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; CommentList from &lt;span class=&quot;string&quot;&gt;&#39;../../src/components/CommentList&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  describeWithDOM,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  mount,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  shallow,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  spyLifecycle&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; from &lt;span class=&quot;string&quot;&gt;&#39;enzyme&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;describe(&lt;span class=&quot;string&quot;&gt;&#39;(Component) CommentList&#39;&lt;/span&gt;, () =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// using special describeWithDOM helper that enzyme&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// provides so if other devs on my team don&#39;t have JSDom set up&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// properly or are using old version of node it won&#39;t bork their test suite&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// All of our tests that depend on mounting should go inside one of these&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// special describe blocks&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  describeWithDOM(&lt;span class=&quot;string&quot;&gt;&#39;Lifecycle methods&#39;&lt;/span&gt;, () =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    it(&lt;span class=&quot;string&quot;&gt;&#39;calls componentDidMount&#39;&lt;/span&gt;, () =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      spyLifecyle(CommentList);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; props = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        onMount: () =&amp;gt; &amp;#123;&amp;#125;,  &lt;span class=&quot;comment&quot;&gt;// an anonymous function in ES6 arrow syntax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        isActive: &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// using destructuring to pass props down&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// easily and then mounting the component&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mount(&amp;lt;CommentList &amp;#123;...props&amp;#125; /&amp;gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// CommentList&#39;s componentDidMount should have been&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// called once.  spyLifecyle attaches sinon spys so we can&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// make this assertion&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      expect(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CommentList.prototype.componentDidMount.calledOnce&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ).to.be.&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    it(&lt;span class=&quot;string&quot;&gt;&#39;calls onMount prop once it mounts&#39;&lt;/span&gt;, () =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// create a spy for the onMount function&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; props = &amp;#123; onMount: sinon.spy() &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// mount our component&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mount(&amp;lt;CommentList &amp;#123;...props&amp;#125; /&amp;gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// expect that onMount was called&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      expect(props.onMount.calledOnce).to.be.&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;还有很多，阅读这些注释可以帮助你更好地理解。看看这些实践，让测试可以通过，然后再回头看看这些测试，验证下你所理解的东西。&lt;/p&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# /src/components/&lt;span class=&quot;type&quot;&gt;CommentList&lt;/span&gt;.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;React&lt;/span&gt;, &amp;#123; &lt;span class=&quot;type&quot;&gt;Component&lt;/span&gt;, &lt;span class=&quot;type&quot;&gt;PropTypes&lt;/span&gt; &amp;#125; from &lt;span class=&quot;symbol&quot;&gt;&#39;reac&lt;/span&gt;t&#39;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;const propTypes = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  onMount: &lt;span class=&quot;type&quot;&gt;PropTypes&lt;/span&gt;.func.isRequired,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  isActive: &lt;span class=&quot;type&quot;&gt;PropTypes&lt;/span&gt;.bool&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CommentList&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Component&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  componentDidMount() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.props.onMount();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  render() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;ul&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;li&amp;gt; &lt;span class=&quot;type&quot;&gt;Comment&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;One&lt;/span&gt; &amp;lt;/li&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;/ul&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;CommentList&lt;/span&gt;.propTypes = propTypes;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;CommentList&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行 &lt;code&gt;npm test&lt;/code&gt; ，现在这些套件应该可以通过测试了。&lt;/p&gt;
&lt;p&gt;接下来让我们添加一些 shallow rendered 测试，当给定一个 &lt;code&gt;isActive&lt;/code&gt; 的 props 时，来确保我们的组件使用了适当的 CSS class。&lt;/p&gt;
&lt;figure class=&quot;highlight coffeescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;... previous tests&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  it(&lt;span class=&quot;string&quot;&gt;&#39;should render as a &amp;lt;ul&amp;gt;&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    const props = &amp;#123; onMount: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&amp;#125; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    const wrapper = shallow(&amp;lt;CommentList  &amp;#123;...props&amp;#125; /&amp;gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    expect(wrapper.type()).to.eql(&lt;span class=&quot;string&quot;&gt;&#39;ul&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  describe(&lt;span class=&quot;string&quot;&gt;&#39;when active...&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    const wrapper = shallow(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;regexp&quot;&gt;//&lt;/span&gt; just passing isActive &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; an alias &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;CommentList onMount=&amp;#123;() =&amp;gt; &amp;#123;&amp;#125;&amp;#125; isActive /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    it(&lt;span class=&quot;string&quot;&gt;&#39;should render with className active-list&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      expect(wrapper.prop(&lt;span class=&quot;string&quot;&gt;&#39;className&#39;&lt;/span&gt;)).to.eql(&lt;span class=&quot;string&quot;&gt;&#39;active-list&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  describe(&lt;span class=&quot;string&quot;&gt;&#39;when inactive...&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    const wrapper = shallow(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;CommentList onMount=&amp;#123;() =&amp;gt; &amp;#123;&amp;#125;&amp;#125; isActive=&amp;#123;&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&amp;#125; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    it(&lt;span class=&quot;string&quot;&gt;&#39;should render with className inactive-list&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      expect(wrapper.prop(&lt;span class=&quot;string&quot;&gt;&#39;className&#39;&lt;/span&gt;)).to.eql(&lt;span class=&quot;string&quot;&gt;&#39;inactive-list&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;让它们通过测试：&lt;/p&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CommentList&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Component&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  componentDidMount() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.props.onMount();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  render() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    const &amp;#123; isActive &amp;#125; = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.props;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    const className = isActive ? &lt;span class=&quot;symbol&quot;&gt;&#39;active&lt;/span&gt;-list&#39; : &lt;span class=&quot;symbol&quot;&gt;&#39;inactive&lt;/span&gt;-list&#39;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;ul className=&amp;#123;className&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;li&amp;gt; &lt;span class=&quot;type&quot;&gt;Comment&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;One&lt;/span&gt; &amp;lt;/li&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;/ul&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;此时你应该对如何测试 react 组件已经有了一个很好的理解了。记得去阅读 Enzyme 文档来获得更多的灵感。&lt;/p&gt;
&lt;h2 id=&quot;设置-Karma&quot;&gt;&lt;a href=&quot;#设置-Karma&quot; class=&quot;headerlink&quot; title=&quot;设置 Karma&quot;&gt;&lt;/a&gt;设置 Karma&lt;/h2&gt;&lt;p&gt;设置 Karma 可能会有些困难。坦白讲，这对我而言也是一件痛苦的工作。通常，当我开发 React 应用时，我会选择使用已经构建好的 starter kit，方便省事。&lt;a href=&quot;https://github.com/davezuko/react-redux-starter-kit&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;我非常推荐开发时用的 starter kit&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;使用 Karma 的价值在于快速测试重载，可以多浏览器测试和最重要的是 webpack 预处理。一旦我们将 Karma 设置好了，在我们运行测试程序时，不仅是只有 &lt;code&gt;babel-loader&lt;/code&gt;，而是整个 webpack config。这为我们提供了很多便利，使得我们的测试环境与开发环境相同。&lt;/p&gt;
&lt;p&gt;让我们开始吧…&lt;/p&gt;
&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm i karma karma-chai karma-mocha karma-webpack &lt;span class=&quot;comment&quot;&gt;--save-dev&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm i karma-sourcemap-loader karma-phantomjs-launcher &lt;span class=&quot;comment&quot;&gt;--save-dev&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm i karma-spec-reporter &lt;span class=&quot;comment&quot;&gt;--save-dev&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm i phantomjs &lt;span class=&quot;comment&quot;&gt;--save-dev&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# The polyfills arn&#39;t required but will help with browser support issues&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# and are easy enough to include in our karma config that I figured why not&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm i babel-polyfill phantomjs-polyfill &lt;span class=&quot;comment&quot;&gt;--save-dev&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;很多包，我知道。相信我完成这个是非常值得的。&lt;/p&gt;
&lt;p&gt;对于我们的示例而言，我们将使用 &lt;a href=&quot;http://phantomjs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PhantomJS&lt;/a&gt;。没有别的什么原因，这我在 starter kit 中已经用到了。可以按照自己的喜好使用 Chrome，Firefox 或是 Safari，甚至在 PhantomJS 之上。（这是用 Karma 的一件很酷的事）&lt;/p&gt;
&lt;p&gt;在配置 karma 之前先安装 &lt;code&gt;yargs&lt;/code&gt;，它能让你使用命令行参数来定制 Karma 的配置。&lt;/p&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;selector-tag&quot;&gt;i&lt;/span&gt; yargs -S&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;现在我们可以通过创建一个 Karma config 文件去监视我们的文件，当文件发生修改时重新运行并很快地保存。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Karma Config&lt;/strong&gt;：&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;touch karma&lt;span class=&quot;selector-class&quot;&gt;.config&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ./karma.config.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; argv = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;yargs&#39;&lt;/span&gt;).argv;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; path = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;path&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;config&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  config.set(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// only use PhantomJS for our &#39;test&#39; browser&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    browsers: [&lt;span class=&quot;string&quot;&gt;&#39;PhantomJS&#39;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// just run once by default unless --watch flag is passed&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    singleRun: !argv.watch,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// which karma frameworks do we want integrated&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    frameworks: [&lt;span class=&quot;string&quot;&gt;&#39;mocha&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;chai&#39;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// displays tests in a nice readable format&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reporters: [&lt;span class=&quot;string&quot;&gt;&#39;spec&#39;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// include some polyfills for babel and phantomjs&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    files: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&#39;node_modules/babel-polyfill/dist/polyfill.js&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&#39;./node_modules/phantomjs-polyfill/bind-polyfill.js&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&#39;./test/**/*.js&#39;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// specify files to watch for tests&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    preprocessors: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// these files we want to be precompiled with webpack&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// also run tests throug sourcemap for easier debugging&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      [&lt;span class=&quot;string&quot;&gt;&#39;./test/**/*.js&#39;&lt;/span&gt;]: [&lt;span class=&quot;string&quot;&gt;&#39;webpack&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;sourcemap&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// A lot of people will reuse the same webpack config that they use&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// in development for karma but remove any production plugins like UglifyJS etc.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// I chose to just re-write the config so readers can see what it needs to have&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    webpack: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       devtool: &lt;span class=&quot;string&quot;&gt;&#39;inline-source-map&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       resolve: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// allow us to import components in tests like:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// import Example from &#39;components/Example&#39;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        root: path.resolve(__dirname, &lt;span class=&quot;string&quot;&gt;&#39;./src&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// allow us to avoid including extension name&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        extensions: [&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;.js&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;.jsx&#39;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// required for enzyme to work properly&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        alias: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;string&quot;&gt;&#39;sinon&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;sinon/pkg/sinon&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// don&#39;t run babel-loader through the sinon module&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        noParse: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;regexp&quot;&gt;/node_modules\/sinon\//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// run babel loader for our tests&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        loaders: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#123; test: &lt;span class=&quot;regexp&quot;&gt;/\.js?$/&lt;/span&gt;, exclude: &lt;span class=&quot;regexp&quot;&gt;/node_modules/&lt;/span&gt;, loader: &lt;span class=&quot;string&quot;&gt;&#39;babel&#39;&lt;/span&gt; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// required for enzyme to work properly&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      externals: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;jsdom&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;window&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;cheerio&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;window&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;react/lib/ExecutionEnvironment&#39;&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;react/lib/ReactContext&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;window&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    webpackMiddleware: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      noInfo: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// tell karma all the plugins we&#39;re going to be using to prevent warnings&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    plugins: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&#39;karma-mocha&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&#39;karma-chai&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&#39;karma-webpack&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&#39;karma-phantomjs-launcher&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&#39;karma-spec-reporter&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&#39;karma-sourcemap-loader&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;阅读所有的注释一次或两次有助于理解这个 config 是做什么的。使用 Webpack 的一大好处是全部都是普通的 JavaScript 代码，并且我们可以“重构”配置文件。事实上，这正是绝大多数 starter kit 所做的！&lt;/p&gt;
&lt;p&gt;随着 Karma 设置完成，为运行测试，最后一件事就是要去更新我们的 package.json：&lt;/p&gt;
&lt;figure class=&quot;highlight vala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;# package.json&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;scripts&quot;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;test&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;node_modules/.bin/karma start karma.config.js&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;test:dev&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;npm run test -- --watch&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;old_test&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;mocha --compilers js:babel-register --require ./test/test_helper.js --recursive&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;old_test:watch&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;npm test -- --watch&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我建议重命名旧的测试 scripts 的前缀，用 ‘old_’ 表示。&lt;/p&gt;
&lt;p&gt;最终的 &lt;code&gt;package.json&lt;/code&gt; 是这样的：&lt;/p&gt;
&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;react-testing-starter-kit&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;version&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;0.1.0&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;description&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;React starter kit with nice testing environment set up.&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;main&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;src/main.js&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;directories&quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;test&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;tests&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;src&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;src&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;dist&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;dist&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;dependencies&quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;react&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;^0.14.6&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;react-dom&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;^0.14.6&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;yargs&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;^3.31.0&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;devDependencies&quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;babel-core&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;^6.4.0&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;babel-loader&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;^6.2.1&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;babel-polyfill&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;^6.3.14&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;babel-preset-es2015&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;^6.3.13&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;babel-preset-react&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;^6.3.13&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;babel-register&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;^6.3.13&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;chai&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;^3.4.1&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;enzyme&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;^1.2.0&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;json-loader&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;^0.5.4&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;karma&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;^0.13.19&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;karma-chai&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;^0.1.0&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;karma-mocha&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;^0.2.1&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;karma-phantomjs-launcher&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;^0.2.3&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;karma-sourcemap-loader&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;^0.3.6&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;karma-spec-reporter&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;0.0.23&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;karma-webpack&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;^1.7.0&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;mocha&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;^2.3.4&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;phantomjs&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;^1.9.19&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;phantomjs-polyfill&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;0.0.1&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;react-addons-test-utils&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;^0.14.6&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;sinon&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;^1.17.2&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;webpack&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;^1.12.11&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;webpack-dev-server&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;^1.14.1&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;scripts&quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;test&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;node_modules/.bin/karma start karma.config.js&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;test:dev&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;npm run test -- --watch&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;build&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;webpack&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;dev&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;webpack-dev-server --port 3000 --devtool eval --progress --colors --hot --content-base dist&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;old_test&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;mocha --compilers js:babel-register --require ./test/test_helper.js --recursive&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;old_test:watch&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;npm test -- --watch&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;repository&quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;git&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;url&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;tbd&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;author&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Spencer Dixon&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;license&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;ISC&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在测试套件中外加 webpack 预处理，我们现在可以删除那些在测试内烦人的相对路径声明：&lt;/p&gt;
&lt;figure class=&quot;highlight moonscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// test/containers/Root.spec.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; React &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;react&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &amp;#123; shallow &amp;#125; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;enzyme&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Root &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;containers/Root&#39;&lt;/span&gt;;               // new &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; statement&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Root &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;../../src/containers/Root&#39;&lt;/span&gt;;  // old &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; statement&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// test/components/CommentList.spec.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; React &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;react&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; CommentList &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;components/CommentList&#39;&lt;/span&gt;;               // new &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; statement&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; CommentList &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;../../src/components/CommentList&#39;&lt;/span&gt;;  // old &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; statement&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  describeWithDOM,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  mount,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  shallow,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  spyLifecycle&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;enzyme&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;现在使用这个 starter kit 开发，你需要输入以下这些命令去运行程序：&lt;/p&gt;
&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;run&lt;/span&gt; dev         # &lt;span class=&quot;keyword&quot;&gt;note&lt;/span&gt; the addition of &lt;span class=&quot;keyword&quot;&gt;run&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;run&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;test&lt;/span&gt;:dev    # &lt;span class=&quot;keyword&quot;&gt;note&lt;/span&gt; the addition of &lt;span class=&quot;keyword&quot;&gt;run&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/SpencerCDixon/react-testing-starter-kit&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如果还有什么不清楚的地方，可以在 github 上查看该源码&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&quot;结论&quot;&gt;&lt;a href=&quot;#结论&quot; class=&quot;headerlink&quot; title=&quot;结论&quot;&gt;&lt;/a&gt;结论&lt;/h3&gt;&lt;p&gt;我们已经建立了一个坚实的测试环境，可以根据你的项目具体需求去改变和发展。在下一次的文章中，我将花更多的时间在特殊场景的测试，还有如何测试 Redux，我更喜欢 flux 的实现。&lt;/p&gt;
&lt;p&gt;虽然我只使用 React 开发了数月，但我已经爱上它了。我希望本教程可以帮助你更深入地理解一些 React 测试的最佳实践。有任何问题或评论随时联系我。测试是我们的好朋友！&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://spencerdixon.com/blog/test-driven-react-tutorial.html?utm_campaign=Front%2BEnd%2BNewsletter&amp;amp;utm_medium=email&amp;amp;utm_source=Front_End_Newsletter_2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;原文链接&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;测试是开发周期中的一个重要组成部分。没有测试的代码被称为：遗留代码。对于我而言，第一次学习 React 和 JavaScript 的时候，感到很有压力。如果你也是刚开始学习 JS/React，并加入他们的社区，那么也可能会有相同的感觉。想到的会是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;我应该用哪一个构建工具？&lt;/li&gt;
&lt;li&gt;哪一个测试框架比较好？&lt;/li&gt;
&lt;li&gt;我应该学习哪种流模式？&lt;/li&gt;
&lt;li&gt;我需要用到流吗？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为了解决这些烦恼，我决定写这篇文章。经过几个小时的博客文章阅读，查阅 JS 开发者的源码，还有参加 Florida 的 JSConf，终于让我找到了自己的测试“槽”。开始让我觉得没有经过测试的 React 程序代码是如此的不标准和凌乱。我想活在一个没有这种感觉的世界，但后来想想，这是不对的。&lt;/p&gt;
&lt;p&gt;本教程所有的代码都可以在我的 &lt;a href=&quot;https://github.com/SpencerCDixon/react-testing-starter-kit&quot;&gt;github 仓库&lt;/a&gt;中找到。&lt;/p&gt;
&lt;p&gt;让我们开始吧！&lt;/p&gt;
    
    </summary>
    
      <category term="好文分享" scheme="http://HankCoder.github.io/blog/categories/%E5%A5%BD%E6%96%87%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="译文" scheme="http://HankCoder.github.io/blog/tags/%E8%AF%91%E6%96%87/"/>
    
      <category term="React" scheme="http://HankCoder.github.io/blog/tags/React/"/>
    
      <category term="JavaScript" scheme="http://HankCoder.github.io/blog/tags/JavaScript/"/>
    
      <category term="Tutorial" scheme="http://HankCoder.github.io/blog/tags/Tutorial/"/>
    
      <category term="Testing" scheme="http://HankCoder.github.io/blog/tags/Testing/"/>
    
  </entry>
  
  <entry>
    <title>20 个交互非常棒的按钮代码</title>
    <link href="http://HankCoder.github.io/blog/2015/12/24/article-16/"/>
    <id>http://HankCoder.github.io/blog/2015/12/24/article-16/</id>
    <published>2015-12-24T01:57:22.000Z</published>
    <updated>2016-05-22T14:56:40.000Z</updated>
    
    <content type="html">&lt;p&gt;你能想象网页中没有按钮吗？我打赌你不会。在网页中，拥有按钮并不奇怪，这些看似很小、主要以矩形表现（如导航栏，版权信息）的东西，其实是网页 UI 中基础之一。它们不仅使链接看起来更有分量、吸引人和鲜明，而且他们还能提高跳转率和用户体验，使之更方便和直观。这些 CTA （Call-to-action：行为召唤）能帮你获得更多的潜在客户和促进业务的扩展。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.noupe.com/wp-content/uploads/2015/10/codesnippets-buttons-teaser_EN.jpg&quot; alt=&quot;HOST&quot;&gt;&lt;/p&gt;
&lt;p&gt;按钮的开发需要注意它的形状、颜色、空间、排版和前景，这些都很重要。前四个主要是依赖于网页的主题，而最后一个则是取决于你需要达成的目标。例如，你可以在用户点击后，等待的时间里在按钮上加入转轮点亮的动画；又或是，加入一些更吸引眼球的动画效果。如此一来，添加动画效果可以使按钮产生的效果最大化。那么，接下来为你介绍这 20 个很棒的按钮代码，它们能使按钮更加丰富，且用户体验超好。&lt;/p&gt;
&lt;h1 id=&quot;波浪形按钮&quot;&gt;&lt;a href=&quot;#波浪形按钮&quot; class=&quot;headerlink&quot; title=&quot;波浪形按钮&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://codepen.io/suez/pen/aOgMxy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;波浪形按钮&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://codepen.io/suez/pen/aOgMxy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;br&gt;  &lt;img src=&quot;http://www.noupe.com/wp-content/uploads/2015/10/blobs-button.png&quot;&gt;&lt;br&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;作者&lt;/strong&gt;：Nikolay Talanov&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;用-Canvas-和-HTML5-制作的粒子状按钮&quot;&gt;&lt;a href=&quot;#用-Canvas-和-HTML5-制作的粒子状按钮&quot; class=&quot;headerlink&quot; title=&quot;用 Canvas 和 HTML5 制作的粒子状按钮&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://codepen.io/igcorreia/pen/vEzmyV&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;用 Canvas 和 HTML5 制作的粒子状按钮&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://codepen.io/igcorreia/pen/vEzmyV&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;br&gt;  &lt;img src=&quot;http://www.noupe.com/wp-content/uploads/2015/10/particle-button.png&quot;&gt;&lt;br&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;作者&lt;/strong&gt;：Ignacio Correia&lt;/p&gt;
&lt;h1 id=&quot;用-Sass-制作的胶状按钮&quot;&gt;&lt;a href=&quot;#用-Sass-制作的胶状按钮&quot; class=&quot;headerlink&quot; title=&quot;用 Sass 制作的胶状按钮&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://codepen.io/macreart/pen/mdCHA&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;用 Sass 制作的胶状按钮&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://codepen.io/macreart/pen/mdCHA&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;br&gt;  &lt;img src=&quot;http://www.noupe.com/wp-content/uploads/2015/10/gelatin-over-button-effect.png&quot;&gt;&lt;br&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;作者&lt;/strong&gt;：François Lesenne&lt;/p&gt;
&lt;h1 id=&quot;3D-弹出效果的按钮&quot;&gt;&lt;a href=&quot;#3D-弹出效果的按钮&quot; class=&quot;headerlink&quot; title=&quot;3D 弹出效果的按钮&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://codepen.io/ashleynolan/pen/djpCG&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;3D 弹出效果的按钮&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://codepen.io/ashleynolan/pen/djpCG&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;br&gt;  &lt;img src=&quot;http://www.noupe.com/wp-content/uploads/2015/10/3d-paper-button.png&quot;&gt;&lt;br&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;作者&lt;/strong&gt;：Ashley Nolan&lt;/p&gt;
&lt;h1 id=&quot;“Material-Design”-CSS-动画效果的按钮&quot;&gt;&lt;a href=&quot;#“Material-Design”-CSS-动画效果的按钮&quot; class=&quot;headerlink&quot; title=&quot;“Material Design” CSS 动画效果的按钮&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://codepen.io/jonbrennecke/pen/xbojLg&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;“Material Design” CSS 动画效果的按钮&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://codepen.io/jonbrennecke/pen/xbojLg&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;br&gt;  &lt;img src=&quot;http://www.noupe.com/wp-content/uploads/2015/10/material-design-button-effect.png&quot;&gt;&lt;br&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;作者&lt;/strong&gt;：Jon Brennecke&lt;/p&gt;
&lt;h1 id=&quot;具有-3D-效果的按钮&quot;&gt;&lt;a href=&quot;#具有-3D-效果的按钮&quot; class=&quot;headerlink&quot; title=&quot;具有 3D 效果的按钮&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://codepen.io/drus/pen/IKzqG&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;具有 3D 效果的按钮&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://codepen.io/drus/pen/IKzqG&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;br&gt;  &lt;img src=&quot;http://www.noupe.com/wp-content/uploads/2015/10/3d-button.png&quot;&gt;&lt;br&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;作者&lt;/strong&gt;：drus unlimited&lt;/p&gt;
&lt;h1 id=&quot;关闭按钮效果&quot;&gt;&lt;a href=&quot;#关闭按钮效果&quot; class=&quot;headerlink&quot; title=&quot;关闭按钮效果&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://codepen.io/JonasB/pen/MYaMBz&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;关闭按钮效果&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://codepen.io/JonasB/pen/MYaMBz&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;br&gt;  &lt;img src=&quot;http://www.noupe.com/wp-content/uploads/2015/10/close-button-ui.png&quot;&gt;&lt;br&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;作者&lt;/strong&gt;：Jonas Badalic&lt;/p&gt;
&lt;h1 id=&quot;一些时尚的切换效果按钮&quot;&gt;&lt;a href=&quot;#一些时尚的切换效果按钮&quot; class=&quot;headerlink&quot; title=&quot;一些时尚的切换效果按钮&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://codepen.io/ashleynolan/pen/wBppKz&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;一些时尚的切换效果按钮&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://codepen.io/ashleynolan/pen/wBppKz&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;br&gt;  &lt;img src=&quot;http://www.noupe.com/wp-content/uploads/2015/10/funky-toggle-buttons.png&quot;&gt;&lt;br&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;作者&lt;/strong&gt;：Ashley Nolan&lt;/p&gt;
&lt;h1 id=&quot;纯-CSS3-效果的按钮&quot;&gt;&lt;a href=&quot;#纯-CSS3-效果的按钮&quot; class=&quot;headerlink&quot; title=&quot;纯 CSS3 效果的按钮&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://codepen.io/overlyenginnered/pen/myZVYv&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;纯 CSS3 效果的按钮&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://codepen.io/overlyenginnered/pen/myZVYv&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;br&gt;  &lt;img src=&quot;http://www.noupe.com/wp-content/uploads/2015/10/pure-css-button-effects.png&quot;&gt;&lt;br&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;作者&lt;/strong&gt;：Overly Engineered&lt;/p&gt;
&lt;h1 id=&quot;Hover-效果&quot;&gt;&lt;a href=&quot;#Hover-效果&quot; class=&quot;headerlink&quot; title=&quot;Hover 效果&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://codepen.io/deep1808/pen/aOQqqa&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hover 效果&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://codepen.io/deep1808/pen/aOQqqa&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;br&gt;  &lt;img src=&quot;http://www.noupe.com/wp-content/uploads/2015/10/elegant-hover-effect.png&quot;&gt;&lt;br&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;作者&lt;/strong&gt;：Deep&lt;/p&gt;
&lt;h1 id=&quot;Jelly-按钮&quot;&gt;&lt;a href=&quot;#Jelly-按钮&quot; class=&quot;headerlink&quot; title=&quot;Jelly 按钮&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://codepen.io/ayamflow/pen/Dufxr&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Jelly 按钮&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://codepen.io/ayamflow/pen/Dufxr&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;br&gt;  &lt;img src=&quot;http://www.noupe.com/wp-content/uploads/2015/10/jelly-button.png&quot;&gt;&lt;br&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;作者&lt;/strong&gt;：ayamflow&lt;/p&gt;
&lt;h1 id=&quot;Hover-效果的按钮&quot;&gt;&lt;a href=&quot;#Hover-效果的按钮&quot; class=&quot;headerlink&quot; title=&quot;Hover 效果的按钮&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://codepen.io/thejamespower/pen/OVNYLL&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hover 效果的按钮&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://codepen.io/thejamespower/pen/OVNYLL&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;br&gt;  &lt;img src=&quot;http://www.noupe.com/wp-content/uploads/2015/10/button-hover-effects.png&quot;&gt;&lt;br&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;作者&lt;/strong&gt;：James Power&lt;/p&gt;
&lt;h1 id=&quot;Gaming-Button-With-Hover-Effect&quot;&gt;&lt;a href=&quot;#Gaming-Button-With-Hover-Effect&quot; class=&quot;headerlink&quot; title=&quot;Gaming Button With Hover Effect&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://codepen.io/kaigth/pen/qiDJL&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Gaming Button With Hover Effect&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://codepen.io/kaigth/pen/qiDJL&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;br&gt;  &lt;img src=&quot;http://www.noupe.com/wp-content/uploads/2015/10/hover-over-effect.png&quot;&gt;&lt;br&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;作者&lt;/strong&gt;：kaigth&lt;/p&gt;
&lt;h1 id=&quot;分享按钮&quot;&gt;&lt;a href=&quot;#分享按钮&quot; class=&quot;headerlink&quot; title=&quot;分享按钮&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://codepen.io/onediv/pen/dkFco&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;分享按钮&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://codepen.io/onediv/pen/dkFco&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;br&gt;  &lt;img src=&quot;http://www.noupe.com/wp-content/uploads/2015/10/share-button.png&quot;&gt;&lt;br&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;作者&lt;/strong&gt;：Vincent Durand&lt;/p&gt;
&lt;h1 id=&quot;Flipside&quot;&gt;&lt;a href=&quot;#Flipside&quot; class=&quot;headerlink&quot; title=&quot;Flipside&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://codepen.io/hakimel/pen/ZYRgwB&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Flipside&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://codepen.io/hakimel/pen/ZYRgwB&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;br&gt;  &lt;img src=&quot;http://www.noupe.com/wp-content/uploads/2015/10/flipside.png&quot;&gt;&lt;br&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;作者&lt;/strong&gt;：Hakim El Hattab&lt;/p&gt;
&lt;h1 id=&quot;粒子按钮效果&quot;&gt;&lt;a href=&quot;#粒子按钮效果&quot; class=&quot;headerlink&quot; title=&quot;粒子按钮效果&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://codepen.io/timohausmann/pen/icCer&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;粒子按钮效果&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://codepen.io/timohausmann/pen/icCer&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;br&gt;  &lt;img src=&quot;http://www.noupe.com/wp-content/uploads/2015/10/button-with-particle-animation.png&quot;&gt;&lt;br&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;作者&lt;/strong&gt;：Timo Hausmann&lt;/p&gt;
&lt;h1 id=&quot;CSS3-按钮示例&quot;&gt;&lt;a href=&quot;#CSS3-按钮示例&quot; class=&quot;headerlink&quot; title=&quot;CSS3 按钮示例&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://codepen.io/volusion/pen/AgqBf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS3 按钮示例&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://codepen.io/volusion/pen/AgqBf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;br&gt;  &lt;img src=&quot;http://www.noupe.com/wp-content/uploads/2015/10/ecommerce-buttons.png&quot;&gt;&lt;br&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;作者&lt;/strong&gt;：Volusion Services&lt;/p&gt;
&lt;h1 id=&quot;很棒的按钮样式和效果&quot;&gt;&lt;a href=&quot;#很棒的按钮样式和效果&quot; class=&quot;headerlink&quot; title=&quot;很棒的按钮样式和效果&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://tympanus.net/codrops/2015/02/26/inspiration-button-styles-effects/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;很棒的按钮样式和效果&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://tympanus.net/codrops/2015/02/26/inspiration-button-styles-effects/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;br&gt;  &lt;img src=&quot;http://www.noupe.com/wp-content/uploads/2015/10/series-of-button-effects.png&quot;&gt;&lt;br&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;作者&lt;/strong&gt;：Mary Lou&lt;/p&gt;
&lt;h1 id=&quot;创意按钮样式&quot;&gt;&lt;a href=&quot;#创意按钮样式&quot; class=&quot;headerlink&quot; title=&quot;创意按钮样式&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://tympanus.net/codrops/2013/06/13/creative-button-styles/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;创意按钮样式&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://tympanus.net/codrops/2013/06/13/creative-button-styles/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;br&gt;  &lt;img src=&quot;http://www.noupe.com/wp-content/uploads/2015/10/creative-buttons.png&quot;&gt;&lt;br&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;作者&lt;/strong&gt;：Mary Lou&lt;/p&gt;
&lt;h1 id=&quot;3D-动画效果的按钮&quot;&gt;&lt;a href=&quot;#3D-动画效果的按钮&quot; class=&quot;headerlink&quot; title=&quot;3D 动画效果的按钮&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://codepen.io/1forhlol/pen/VYrxOP&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;3D 动画效果的按钮&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://codepen.io/1forhlol/pen/VYrxOP&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;br&gt;  &lt;img src=&quot;http://www.noupe.com/wp-content/uploads/2015/10/creative-3d-buttons.png&quot;&gt;&lt;br&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;作者&lt;/strong&gt;：Zachary Minner&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.noupe.com/design/20-code-snippets-for-interactive-buttons-93374.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;原文链接&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;你能想象网页中没有按钮吗？我打赌你不会。在网页中，拥有按钮并不奇怪，这些看似很小、主要以矩形表现（如导航栏，版权信息）的东西，其实是网页 UI 中基础之一。它们不仅使链接看起来更有分量、吸引人和鲜明，而且他们还能提高跳转率和用户体验，使之更方便和直观。这些 CTA （Call-to-action：行为召唤）能帮你获得更多的潜在客户和促进业务的扩展。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.noupe.com/wp-content/uploads/2015/10/codesnippets-buttons-teaser_EN.jpg&quot; alt=&quot;HOST&quot;&gt;&lt;/p&gt;
&lt;p&gt;按钮的开发需要注意它的形状、颜色、空间、排版和前景，这些都很重要。前四个主要是依赖于网页的主题，而最后一个则是取决于你需要达成的目标。例如，你可以在用户点击后，等待的时间里在按钮上加入转轮点亮的动画；又或是，加入一些更吸引眼球的动画效果。如此一来，添加动画效果可以使按钮产生的效果最大化。那么，接下来为你介绍这 20 个很棒的按钮代码，它们能使按钮更加丰富，且用户体验超好。&lt;/p&gt;
&lt;h1 id=&quot;波浪形按钮&quot;&gt;&lt;a href=&quot;#波浪形按钮&quot; class=&quot;headerlink&quot; title=&quot;波浪形按钮&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://codepen.io/suez/pen/aOgMxy&quot;&gt;波浪形按钮&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://codepen.io/suez/pen/aOgMxy&quot;&gt;&lt;br&gt;  &lt;img src=&quot;http://www.noupe.com/wp-content/uploads/2015/10/blobs-button.png&quot;&gt;&lt;br&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;作者&lt;/strong&gt;：Nikolay Talanov&lt;/p&gt;
    
    </summary>
    
      <category term="好文分享" scheme="http://HankCoder.github.io/blog/categories/%E5%A5%BD%E6%96%87%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="译文" scheme="http://HankCoder.github.io/blog/tags/%E8%AF%91%E6%96%87/"/>
    
      <category term="button" scheme="http://HankCoder.github.io/blog/tags/button/"/>
    
      <category term="interactive" scheme="http://HankCoder.github.io/blog/tags/interactive/"/>
    
      <category term="web" scheme="http://HankCoder.github.io/blog/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>CSS 的使用中你可能不知道的 7 件事</title>
    <link href="http://HankCoder.github.io/blog/2015/12/22/article-15/"/>
    <id>http://HankCoder.github.io/blog/2015/12/22/article-15/</id>
    <published>2015-12-22T07:50:56.000Z</published>
    <updated>2016-05-22T14:56:40.000Z</updated>
    
    <content type="html">&lt;p&gt;无论你信不信，JavaScript 和 CSS 已经开始重叠，并为 CSS 增加了更多的功能。当我在写 &lt;a href=&quot;https://davidwalsh.name/ways-css-javascript-interact&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS 与 JavaScript 交互中你可能不知道的 5 种方式&lt;/a&gt;的时候，读者对于 CSS 与 JavaScript 已经重叠的事感到很惊讶。那么今天，我会着重为你介绍 7 个可以通过 CSS 完成的任务 —— 不使用 JavaScript 或图像处理！&lt;/p&gt;
&lt;h1 id=&quot;CSS-supports&quot;&gt;&lt;a href=&quot;#CSS-supports&quot; class=&quot;headerlink&quot; title=&quot;CSS @supports&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://davidwalsh.name/css-supports&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS @supports&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;每个优秀的前端工程师都会在使用某个特性前测试一下，确保是否在浏览器中可以使用。而这类测试通常是由 JavaScript 完成的，当然，也有很多人用 Modernizr（拥有很多很好功能的测试工具）来测试特性。那么现在有一个 CSS 新的 API 可以让你去做特性测试：&lt;a href=&quot;https://davidwalsh.name/css-supports&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;@supports&lt;/a&gt;，下面的例子将简单地教你如何使用：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/* basic usage */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@supports(prop:value) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  /* more styles */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/* real usage */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@supports (display: flex) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  div &amp;#123; display: flex; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/* testing prefixes too */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@supports (display: -webkit-flex) or&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          (display: -moz-flex) or&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          (display: flex) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    section &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      display: -webkit-flex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      display: -moz-flex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      display: flex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      float: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;@supports 这个新的特性也有一个相对应的 JavaScript 方式，但这个特性还在实验阶段，希望我们可以很快用到！&lt;/p&gt;
&lt;h1 id=&quot;CSS-Filters&quot;&gt;&lt;a href=&quot;#CSS-Filters&quot; class=&quot;headerlink&quot; title=&quot;CSS Filters&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://davidwalsh.name/css-filters&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS Filters&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;你可以写一个服务去修改图片的颜色，同时还可以把它卖给 Facebook 获得大量的钱！当然，写一个图片过滤器功能只是一个简单化的实现，并非一门科学。在 Mozilla 的第一周，我写了一个&lt;a href=&quot;https://github.com/darkwing/fotofilter&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;小的应用&lt;/a&gt;（这让我赢了比赛，BTW…就说说而已），这个应用使用了一些 JS-base 的数学方法并使用 canvas 去做图片过滤器。这很麻烦，但是现在我们可以&lt;a href=&quot;https://davidwalsh.name/css-filters&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;用 CSS 的特性去完成这一功能&lt;/a&gt;！&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* simple filter */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.myElement&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;-webkit-filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;blur&lt;/span&gt;(2px);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* advanced filter */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.myElement&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;-webkit-filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;blur&lt;/span&gt;(2px) grayscale (.&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;opacity&lt;/span&gt;(0.8) &lt;span class=&quot;built_in&quot;&gt;hue-rotate&lt;/span&gt;(120deg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这类的过滤功能只是创建一个图片的原型，并且不会保存和导出来完成过滤器的功能。这对于图片管理或想处理任何一张图片来说很方便！&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://davidwalsh.name/demo/css-filters.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Demo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Pointer-Events-和点击事件&quot;&gt;&lt;a href=&quot;#Pointer-Events-和点击事件&quot; class=&quot;headerlink&quot; title=&quot;Pointer Events 和点击事件&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://davidwalsh.name/pointer-events&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Pointer Events 和点击事件&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://davidwalsh.name/pointer-events&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS 特性中的 &lt;code&gt;pointer-events&lt;/code&gt;&lt;/a&gt; 提供了一个方法，能使一个元素 disable，即在用户点击某个元素时，不触发它在 JavaScript 中写的点击事件：&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* do nothing when clicked or activated */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.disabled&lt;/span&gt; &amp;#123; &lt;span class=&quot;attribute&quot;&gt;pointer-events&lt;/span&gt;: none; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* this will _not_ fire because of the pointer-events: none application */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&quot;disabled-element&quot;&lt;/span&gt;).addEventListener(&lt;span class=&quot;string&quot;&gt;&quot;click&quot;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  alert(&lt;span class=&quot;string&quot;&gt;&quot;Clicked!&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在上述的例子中，由于 &lt;code&gt;pointer-events&lt;/code&gt; 的值是 &lt;code&gt;none&lt;/code&gt;，而使点击事件不被触发。大有用处的是，让你不必到处去检查类名或属性，来确认哪一个是 disabled 的了。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://davidwalsh.name/demo/pointer-events.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Demo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Slide-Down-amp-Slide-Up&quot;&gt;&lt;a href=&quot;#Slide-Down-amp-Slide-Up&quot; class=&quot;headerlink&quot; title=&quot;Slide Down &amp;amp; Slide Up&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://davidwalsh.name/css-slide&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Slide Down &amp;amp; Slide Up&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;CSS 使我们能够创建转换和动画，但通常我们需要一个 JavaScript 库帮助我们实现。例如一个比较流行的动画效果&lt;a href=&quot;https://davidwalsh.name/css-slide&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; slide up 和 silde down&lt;/a&gt;，大概很多人都不知道这个可以只用 CSS 实现吧！&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* slider in open state */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.slider&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;overflow-y&lt;/span&gt;: hidden;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;max-height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;500px&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;/* approximate max height */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;transition-property&lt;/span&gt;: all;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;transition-duration&lt;/span&gt;: .&lt;span class=&quot;number&quot;&gt;5s&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;transition-timing-function&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;cubic-bezier&lt;/span&gt;(0, 1, 0.5, 1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* close it with the &quot;closed&quot; class */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.slider&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.closed&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;max-height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;很聪明地使用了 &lt;code&gt;max-height&lt;/code&gt; 来控制元素的展开和收缩。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://davidwalsh.name/demo/css-slide.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Demo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;CSS-Counters&quot;&gt;&lt;a href=&quot;#CSS-Counters&quot; class=&quot;headerlink&quot; title=&quot;CSS Counters&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://davidwalsh.name/css-counters&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS Counters&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;我们不禁地问，“counter” 在网上意味着什么呢？但是 &lt;code&gt;CSS Counters&lt;/code&gt; 就是另外一回事了。这个特性可以把一个 counter 加到元素中，通过 &lt;code&gt;:before&lt;/code&gt; 或 &lt;code&gt;:after&lt;/code&gt; ：&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* initialize the counter */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;ol&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.slides&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;counter-reset&lt;/span&gt;: slideNum;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* increment the counter */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;ol&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.slides&lt;/span&gt; &amp;gt; &lt;span class=&quot;selector-tag&quot;&gt;li&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;counter-increment&lt;/span&gt;: slideNum;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* display the counter value */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;ol&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.slides&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:after&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;[&quot;&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;counter&lt;/span&gt;(slideNum) &lt;span class=&quot;string&quot;&gt;&quot;]&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;通常这个会在一些模块或是列表中用到。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://davidwalsh.name/demo/css-counters.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Demo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Unicode-CSS-Classes&quot;&gt;&lt;a href=&quot;#Unicode-CSS-Classes&quot; class=&quot;headerlink&quot; title=&quot;Unicode CSS Classes&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://davidwalsh.name/unicode-css-classes&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Unicode CSS Classes&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;有大量的文章说明，去教你如何对 CSS 的类命名。但你应该不知道会有这样的文档，去教你&lt;a href=&quot;https://davidwalsh.name/unicode-css-classes&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;用特殊字符命名你的 css 类&lt;/a&gt;：&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;.ಠ_ಠ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1px&lt;/span&gt; solid &lt;span class=&quot;number&quot;&gt;#f00&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;background&lt;/span&gt;: pink;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.❤ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;background&lt;/span&gt;: lightgreen;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1px&lt;/span&gt; solid green;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;但请不要这么使用。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://davidwalsh.name/demo/unicode-css-classes.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Demo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;CSS-Circles&quot;&gt;&lt;a href=&quot;#CSS-Circles&quot; class=&quot;headerlink&quot; title=&quot;CSS Circles&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://davidwalsh.name/css-circles&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS Circles&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://davidwalsh.name/css-circles&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS 中的圆形&lt;/a&gt; 与 &lt;a href=&quot;https://davidwalsh.name/css-triangles&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS 中的三角形&lt;/a&gt;一样。通过使用 &lt;code&gt;border-radius&lt;/code&gt; 就能创建一个完美的圆形！&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.circle&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;50%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;200px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;200px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/* width and height can be anything, as long as they&#39;re equal */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;你也可以给圆形添加一些渐变效果，甚至可以添加动画。CSS 拥有更多&lt;a href=&quot;http://alistapart.com/article/css-shapes-101&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;对于图形统一的 API&lt;/a&gt;，当然现在你可以使用 hack 创建一个圆形。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://davidwalsh.name/demo/css-circles.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Demo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;就是这些：你可能不知道的 7 个关于 CSS 的事，一部分是临界的情况，其他一部分还是非常实用的。那么就大胆地去用它们吧！&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://davidwalsh.name/css-facts&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;原文链接&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;无论你信不信，JavaScript 和 CSS 已经开始重叠，并为 CSS 增加了更多的功能。当我在写 &lt;a href=&quot;https://davidwalsh.name/ways-css-javascript-interact&quot;&gt;CSS 与 JavaScript 交互中你可能不知道的 5 种方式&lt;/a&gt;的时候，读者对于 CSS 与 JavaScript 已经重叠的事感到很惊讶。那么今天，我会着重为你介绍 7 个可以通过 CSS 完成的任务 —— 不使用 JavaScript 或图像处理！&lt;/p&gt;
&lt;h1 id=&quot;CSS-supports&quot;&gt;&lt;a href=&quot;#CSS-supports&quot; class=&quot;headerlink&quot; title=&quot;CSS @supports&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://davidwalsh.name/css-supports&quot;&gt;CSS @supports&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;每个优秀的前端工程师都会在使用某个特性前测试一下，确保是否在浏览器中可以使用。而这类测试通常是由 JavaScript 完成的，当然，也有很多人用 Modernizr（拥有很多很好功能的测试工具）来测试特性。那么现在有一个 CSS 新的 API 可以让你去做特性测试：&lt;a href=&quot;https://davidwalsh.name/css-supports&quot;&gt;@supports&lt;/a&gt;，下面的例子将简单地教你如何使用：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/* basic usage */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@supports(prop:value) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  /* more styles */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/* real usage */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@supports (display: flex) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  div &amp;#123; display: flex; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/* testing prefixes too */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@supports (display: -webkit-flex) or&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          (display: -moz-flex) or&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          (display: flex) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    section &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      display: -webkit-flex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      display: -moz-flex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      display: flex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      float: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="好文分享" scheme="http://HankCoder.github.io/blog/categories/%E5%A5%BD%E6%96%87%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="译文" scheme="http://HankCoder.github.io/blog/tags/%E8%AF%91%E6%96%87/"/>
    
      <category term="css" scheme="http://HankCoder.github.io/blog/tags/css/"/>
    
      <category term="features" scheme="http://HankCoder.github.io/blog/tags/features/"/>
    
      <category term="front-end" scheme="http://HankCoder.github.io/blog/tags/front-end/"/>
    
  </entry>
  
  <entry>
    <title>使用 React 是业务需求，而不是技术需求</title>
    <link href="http://HankCoder.github.io/blog/2015/12/15/article-14/"/>
    <id>http://HankCoder.github.io/blog/2015/12/15/article-14/</id>
    <published>2015-12-15T04:23:23.000Z</published>
    <updated>2016-05-22T14:56:40.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;React 已经在开发者圈越来越流行了，并且有很多说明其技术优势的资源。然而，迁移（或是选择）一个新的框架最终归结为向所有人推销 —— 包括非开发者。这里会有一小部分工程经理或项目经理会因为它的新颖，而选择使用它来重构，更糟的是，很多团队被 JavaScript 的高生产工具搞得焦头烂额了，可悲的是向后移动项目是向前移动 web 的一部分。这篇文章并不是试图教你关于 React 的新东西，只是试着去总结以下，起点是为了向所有人说明 React 的疑惑，不仅是开发者。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;总结&lt;/strong&gt;：React 是一个为创建可组合的用户界面的库。同比其他类似的库如  Angular、Backbone、Knockout 和 Ember，React 的出现是为了解决业务问题而非技术的。接下来会为你解释 React 的重要性和对开发团队的益处。&lt;/p&gt;
&lt;h1 id=&quot;降低风险&quot;&gt;&lt;a href=&quot;#降低风险&quot; class=&quot;headerlink&quot; title=&quot;降低风险&quot;&gt;&lt;/a&gt;降低风险&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;稳定性&lt;/strong&gt; —— Facebook 花了很大的精力在 React 上（Newsfeed，Instagram，Messenger，Ads Marketplace 等），并且拥有专职的技术团队来维护这个项目。它的 dog-food 测试和投资都不是现有的任何一个项目能比的。除了 Facebook 内部的工程师，还有一大批 React 的爱好者。随着版本的更迭，目前在 github 上拥有 571 个贡献者（截止到 2015 年 12 月）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;正在使用 React&lt;/strong&gt;：AirBnB，Asana，Atlassian，BBC，Chegg，CloudFlare，CNN.com，Codecademy，Coursera，Craftsy，Dailymotion，Dropbox，Expedia，Facebook，Feedly，Flipboard，HipChat，IMDb，Imgur，Instagram，Khan Academy，KISSmetrics，Mattermark，Minerva Project，Netflix，OkCupid，Rackspace，Rally Software，Ralph Lauren，Reddit，Redfin，Salesforce，Squarespace，The New York Times，Trunk Club，Twitter，Uber，University of Cincinnati，Venmo，WhatsApp，Wired，Wix，WordPress，Yahoo，Zendesk&lt;/p&gt;
&lt;h1 id=&quot;开发效率&quot;&gt;&lt;a href=&quot;#开发效率&quot; class=&quot;headerlink&quot; title=&quot;开发效率&quot;&gt;&lt;/a&gt;开发效率&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;强大的路径迁移&lt;/strong&gt; —— React 允许开发者可以根据自己的需求将其放到任何一个已经存在的页面上。值得注意的是，React 是需要加载一个运行时的库（React 0.14.0 的大小是 39.4 kb），因此零碎的迁移会导致页面重量的增加，直到旧版本的库被移除才会减少。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;默认情况下的性能&lt;/strong&gt; —— React 的使用模式，让它很难写出低性能的代码。此外，自从它减少了与 DOM 的直接交互，使得它不仅可以代替现有的一些库（Angular/Backbone/Ember），也不再需要大量像 jQuery 一样的依赖，从而减少整体部署代码大小。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SEO&lt;/strong&gt; —— SEO 是从服务器发送一个已经渲染好的页面到浏览器上。React 在设计时就考虑到了 SEO，它用 Node 可以在客户端或服务端进行渲染。其他工具允许在服务端进行渲染，但需要引入一些不稳定的 hack，同时还需要大量的人员去维护。而 React 有可能简化构建工具和减少维护成本。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;提高了代码的重用&lt;/strong&gt; —— React 在提供良好的性能同时还可以管理组件的渲染生命周期，如此一来可以显著地提高开发人员的开发效率。通过可重用组件的创造、分配和使用，使之更简单，这样开发人员就能更好地节省使用和开发通用组件的时间。就如按钮一样的低阶元素和可折叠元素一样的高阶元素。&lt;/p&gt;
&lt;h1 id=&quot;提高开发效率&quot;&gt;&lt;a href=&quot;#提高开发效率&quot; class=&quot;headerlink&quot; title=&quot;提高开发效率&quot;&gt;&lt;/a&gt;提高开发效率&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;从混合资源中降低复杂度&lt;/strong&gt; —— React 混合了 HTML 和 JavaScript，在此原则下，它们被紧紧地捆在一起，而分离它们是分离技术，这不是关注点。这个概念可以进一步扩展到 CSS，删除 CSS 开发过程中的一连串问题，包括全局命名、作用域/变量的隔离。详细请看：&lt;a href=&quot;http://projects.formidablelabs.com/radium/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Radium&lt;/a&gt; 和 &lt;a href=&quot;https://speakerdeck.com/vjeux/react-css-in-js&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React: CSS in js&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;错误的快速隔离&lt;/strong&gt; —— Facebook 提供了一个浏览器的&lt;a href=&quot;https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi?hl=en&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;扩展应用&lt;/a&gt;，帮助开发者更好地查看某一 UI 是由哪些 component 和数据组合生成的。详细请看&lt;a href=&quot;https://www.youtube.com/watch?v=D-ioDiacTm8&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;简洁明了的代码&lt;/strong&gt; —— 当前绝大多数的工具，都是以&lt;strong&gt;模型&lt;/strong&gt;表示数据和&lt;strong&gt;视图&lt;/strong&gt;显示数据结合在一起，从而生成丰富的 UI 交互。通常修改一个模型或视图（例如购物车）就可能在其他视图中触发“级联变化”，同时它依赖的是相同的数据。在一个大型应用中，依赖视图会变得很复杂，而且很难修复那些意想不到的 BUG。但是在 React 中，数据的流向是单向的，因此使得视图更容易理解。下面的图是展示信息的流动。&lt;br&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*pHvDgaslF8EClCehi6AiMA.png&quot; alt=&quot;stream&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;提高了易测性&lt;/strong&gt; —— 一个组件，React 的通常做法是抽象数据参数和输出一个没有其他副作用的 DOM。通过移除依赖使用和在 DOM 中创建 state 的 store，使得这些组件拥有更多的原子和可测试性。&lt;/p&gt;
&lt;h1 id=&quot;开发团队的效益&quot;&gt;&lt;a href=&quot;#开发团队的效益&quot; class=&quot;headerlink&quot; title=&quot;开发团队的效益&quot;&gt;&lt;/a&gt;开发团队的效益&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;快捷的管理&lt;/strong&gt; —— React 的 API 非常小，结合声明性语法和组件化的 UI 元素使新的开发人员能更快地上手 —— 特别是刚毕业的大学生或是不熟悉前端坏境的开发者。&lt;/p&gt;
&lt;h1 id=&quot;案例&quot;&gt;&lt;a href=&quot;#案例&quot; class=&quot;headerlink&quot; title=&quot;案例&quot;&gt;&lt;/a&gt;案例&lt;/h1&gt;&lt;h2 id=&quot;Facebook-Ads&quot;&gt;&lt;a href=&quot;#Facebook-Ads&quot; class=&quot;headerlink&quot; title=&quot;Facebook Ads&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://5by5.tv/changelog/149&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Facebook Ads&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;“It was extremely difficult to change without causing some side effect or bug somewhere else in the application … When the team rebuilt it in React they found that their rate of new bugs being introduced had gone through the floor”&lt;/p&gt;
&lt;p&gt;-Spencer Ahrens&lt;/p&gt;
&lt;p&gt;“When a bug did come in it was much easier to figure out what was going wrong and make a targeted fix”&lt;/p&gt;
&lt;p&gt;-Spencer Ahrens&lt;/p&gt;
&lt;h2 id=&quot;Netflix&quot;&gt;&lt;a href=&quot;#Netflix&quot; class=&quot;headerlink&quot; title=&quot;Netflix&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://techblog.netflix.com/2015/01/netflix-likes-react.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Netflix&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;“React has exceeded our requirements and enabled us to build a tremendous foundation on which to innovate the Netflix experience”&lt;/p&gt;
&lt;h2 id=&quot;Hit-Chat&quot;&gt;&lt;a href=&quot;#Hit-Chat&quot; class=&quot;headerlink&quot; title=&quot;Hit Chat&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://developer.atlassian.com/blog/2015/02/rebuilding-hipchat-with-react/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hit Chat&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;“The dev speed we’ve gained…proves that we can release new client features faster and with more confidence on this platform than on any native client.”&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.formidable.com/using-react-is-a-business-decision-not-a-technology-choice-63c4641c5f7#.o7fu0q9m6&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;原文链接&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;React 已经在开发者圈越来越流行了，并且有很多说明其技术优势的资源。然而，迁移（或是选择）一个新的框架最终归结为向所有人推销 —— 包括非开发者。这里会有一小部分工程经理或项目经理会因为它的新颖，而选择使用它来重构，更糟的是，很多团队被 JavaScript 的高生产工具搞得焦头烂额了，可悲的是向后移动项目是向前移动 web 的一部分。这篇文章并不是试图教你关于 React 的新东西，只是试着去总结以下，起点是为了向所有人说明 React 的疑惑，不仅是开发者。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;总结&lt;/strong&gt;：React 是一个为创建可组合的用户界面的库。同比其他类似的库如  Angular、Backbone、Knockout 和 Ember，React 的出现是为了解决业务问题而非技术的。接下来会为你解释 React 的重要性和对开发团队的益处。&lt;/p&gt;
&lt;h1 id=&quot;降低风险&quot;&gt;&lt;a href=&quot;#降低风险&quot; class=&quot;headerlink&quot; title=&quot;降低风险&quot;&gt;&lt;/a&gt;降低风险&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;稳定性&lt;/strong&gt; —— Facebook 花了很大的精力在 React 上（Newsfeed，Instagram，Messenger，Ads Marketplace 等），并且拥有专职的技术团队来维护这个项目。它的 dog-food 测试和投资都不是现有的任何一个项目能比的。除了 Facebook 内部的工程师，还有一大批 React 的爱好者。随着版本的更迭，目前在 github 上拥有 571 个贡献者（截止到 2015 年 12 月）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;正在使用 React&lt;/strong&gt;：AirBnB，Asana，Atlassian，BBC，Chegg，CloudFlare，CNN.com，Codecademy，Coursera，Craftsy，Dailymotion，Dropbox，Expedia，Facebook，Feedly，Flipboard，HipChat，IMDb，Imgur，Instagram，Khan Academy，KISSmetrics，Mattermark，Minerva Project，Netflix，OkCupid，Rackspace，Rally Software，Ralph Lauren，Reddit，Redfin，Salesforce，Squarespace，The New York Times，Trunk Club，Twitter，Uber，University of Cincinnati，Venmo，WhatsApp，Wired，Wix，WordPress，Yahoo，Zendesk&lt;/p&gt;
&lt;h1 id=&quot;开发效率&quot;&gt;&lt;a href=&quot;#开发效率&quot; class=&quot;headerlink&quot; title=&quot;开发效率&quot;&gt;&lt;/a&gt;开发效率&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;强大的路径迁移&lt;/strong&gt; —— React 允许开发者可以根据自己的需求将其放到任何一个已经存在的页面上。值得注意的是，React 是需要加载一个运行时的库（React 0.14.0 的大小是 39.4 kb），因此零碎的迁移会导致页面重量的增加，直到旧版本的库被移除才会减少。&lt;/p&gt;
    
    </summary>
    
      <category term="好文分享" scheme="http://HankCoder.github.io/blog/categories/%E5%A5%BD%E6%96%87%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="译文" scheme="http://HankCoder.github.io/blog/tags/%E8%AF%91%E6%96%87/"/>
    
      <category term="React" scheme="http://HankCoder.github.io/blog/tags/React/"/>
    
      <category term="JavaScript" scheme="http://HankCoder.github.io/blog/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>ReactJS 的学习教程</title>
    <link href="http://HankCoder.github.io/blog/2015/12/07/article-13/"/>
    <id>http://HankCoder.github.io/blog/2015/12/07/article-13/</id>
    <published>2015-12-07T01:48:17.000Z</published>
    <updated>2016-05-22T14:56:40.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://www.logopearl.com/blog/wp-content/uploads/2015/12/reactjs-tutorials.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;当提到为某个应用或网站构建 UI 时，ReactJS 往往是首先列出的最好的 JavaScript 库。首先它是开源的，并且已经在 Instagram 和 Facebook 上得到实践。还有一些著名的网站也使用 ReactJS 去构建他们的 UI，例如 Airbnb，Khan Academy，BBC，Netflix &lt;a href=&quot;https://github.com/facebook/react/wiki/Sites-Using-React&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;等等&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;如果你仍然在学习 ReactJS 的路上，并用它构建动态的用户界面，这里有一些教程能帮助你加速学习进程。&lt;/p&gt;
&lt;p&gt;下面列出的是一些开发者和作者所写的一部分教程，他们能帮你从新手提升到专家。&lt;/p&gt;
&lt;h1 id=&quot;ReactJs-net-的教程&quot;&gt;&lt;a href=&quot;#ReactJs-net-的教程&quot; class=&quot;headerlink&quot; title=&quot;ReactJs.net 的教程&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://reactjs.net/getting-started/tutorial.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ReactJs.net 的教程&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://www.logopearl.com/blog/wp-content/uploads/2015/12/1-reactjs-website.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;这是众多版本的 React 教程之一。这个专门为设计师和开发者去“入门” React 和探索其功能而写的。本教程涵盖了利用 ReactJS 库去创建一个全新的 asp.net MVC 网站的完整流程，并且保证了学习的深入浅出。开始一个新项目的基本流程是，安装 React，构建 component，优化等等。&lt;/p&gt;
&lt;h1 id=&quot;Ken-Wheeler-学习-ReactJS&quot;&gt;&lt;a href=&quot;#Ken-Wheeler-学习-ReactJS&quot; class=&quot;headerlink&quot; title=&quot;Ken Wheeler - 学习 ReactJS&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://scotch.io/tutorials/learning-react-getting-started-and-concepts&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Ken Wheeler - 学习 ReactJS&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://www.logopearl.com/blog/wp-content/uploads/2015/12/2-scothio-reactjs.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;这是 Ken Wheeler 在 Scotch.io 上发表的一篇很棒的教程。在去年发表的时候至今，已经有超过 200 条的分享，当然这些也只有在开发者社区圈里才会对此感兴趣。可以说这是目前找到的 ReactJS 最好的教程之一。此教程主要分为五个部分，从基础开始，涵盖了&lt;strong&gt;什么是 React&lt;/strong&gt;，&lt;strong&gt;虚拟 DOM 是如何工作的&lt;/strong&gt;，&lt;strong&gt;如何构建页面&lt;/strong&gt;，&lt;strong&gt;生命周期的说明&lt;/strong&gt;和 &lt;strong&gt;state&lt;/strong&gt; 等。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;第二部分则介绍了一些高级的概念，例如 Flux，dispatcher，视图控制器的依赖等等。第三，第四和第五部分主要是用 30 分钟去教你如何开发一个具有购物车的 ReactJS 应用，构建一个实时的 Twitter 流，以及开发一个移动应用。&lt;/p&gt;
&lt;h1 id=&quot;Jack-Callister-React-的快速入门&quot;&gt;&lt;a href=&quot;#Jack-Callister-React-的快速入门&quot; class=&quot;headerlink&quot; title=&quot;Jack Callister - React 的快速入门&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.jackcallister.com/2015/01/05/the-react-quick-start-guide.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Jack Callister - React 的快速入门&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://www.logopearl.com/blog/wp-content/uploads/2015/12/3-codementor-tutorial.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;如果你正在寻找一个如何使用 React 库的快速指南，这会是一个很好的地方。这篇文章发布在 Jack Callister 的个人博客中。这篇文章并是不是很出名，但它对于学习基础知识已经足够了。作者写时主要描述 react element，component，JSX 和虚拟 DOM 的基础概念。当你理解了这些概念，就可以很轻松地构建一系列的用户界面。作者首先解释了渲染，然后是 component，props，state 和合成。&lt;/p&gt;
&lt;p&gt;本文的另一个观点是，它充满了有用的工具链接，ReactJS 资源和信息。ReactJs 的初学者绝对值得一读!&lt;/p&gt;
&lt;h1 id=&quot;Leveluptuts-React-for-Everyone&quot;&gt;&lt;a href=&quot;#Leveluptuts-React-for-Everyone&quot; class=&quot;headerlink&quot; title=&quot;Leveluptuts - React for Everyone&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://leveluptuts.com/tutorials/react-for-everyone&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leveluptuts - React for Everyone&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://www.logopearl.com/blog/wp-content/uploads/2015/12/4-levelup-tutorials.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;此教程的本质是提供给任何一个学习 ReactJS 的人，无论是初学者还是高手。这里面有一系列的视频来做介绍，并且涵盖了入门和理解这个库的基础知识。&lt;/p&gt;
&lt;p&gt;在第二章中我们会得到很有趣的部分，教你如何构建你的第一个 react 组件。其余章节包含了 &lt;strong&gt;react component properties&lt;/strong&gt;，JSX 的条件语句，父子组件的关系和使用 state。这些都是必看的视频。&lt;/p&gt;
&lt;h1 id=&quot;ReactJS-入门级教程&quot;&gt;&lt;a href=&quot;#ReactJS-入门级教程&quot; class=&quot;headerlink&quot; title=&quot;ReactJS 入门级教程&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://blog.risingstack.com/the-react-way-getting-started-tutorial/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ReactJS 入门级教程&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://www.logopearl.com/blog/wp-content/uploads/2015/12/5-risingstack-reactjs.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;这是入门 ReactJS 的另一个很好的教程。这是只是三部分的第一部分。对于新人学习基础知识而言这是很棒的一部分。开始介绍了什么是 React，虚拟 DOM 的概念，然后就是如何在服务端做渲染，组件驱动的开发，还有一点关于 JSX 和有用的链接等。&lt;/p&gt;
&lt;p&gt;这其实是一个“入门级”课程的详细教程。在开发 ReactJS 的过程中确保你都看了这些非常有用的资源！&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.logopearl.com/blog/best-tutorials-to-learn-reactjs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;原文链接&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://www.logopearl.com/blog/wp-content/uploads/2015/12/reactjs-tutorials.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;当提到为某个应用或网站构建 UI 时，ReactJS 往往是首先列出的最好的 JavaScript 库。首先它是开源的，并且已经在 Instagram 和 Facebook 上得到实践。还有一些著名的网站也使用 ReactJS 去构建他们的 UI，例如 Airbnb，Khan Academy，BBC，Netflix &lt;a href=&quot;https://github.com/facebook/react/wiki/Sites-Using-React&quot;&gt;等等&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;如果你仍然在学习 ReactJS 的路上，并用它构建动态的用户界面，这里有一些教程能帮助你加速学习进程。&lt;/p&gt;
&lt;p&gt;下面列出的是一些开发者和作者所写的一部分教程，他们能帮你从新手提升到专家。&lt;/p&gt;
&lt;h1 id=&quot;ReactJs-net-的教程&quot;&gt;&lt;a href=&quot;#ReactJs-net-的教程&quot; class=&quot;headerlink&quot; title=&quot;ReactJs.net 的教程&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://reactjs.net/getting-started/tutorial.html&quot;&gt;ReactJs.net 的教程&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://www.logopearl.com/blog/wp-content/uploads/2015/12/1-reactjs-website.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;这是众多版本的 React 教程之一。这个专门为设计师和开发者去“入门” React 和探索其功能而写的。本教程涵盖了利用 ReactJS 库去创建一个全新的 asp.net MVC 网站的完整流程，并且保证了学习的深入浅出。开始一个新项目的基本流程是，安装 React，构建 component，优化等等。&lt;/p&gt;
&lt;h1 id=&quot;Ken-Wheeler-学习-ReactJS&quot;&gt;&lt;a href=&quot;#Ken-Wheeler-学习-ReactJS&quot; class=&quot;headerlink&quot; title=&quot;Ken Wheeler - 学习 ReactJS&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://scotch.io/tutorials/learning-react-getting-started-and-concepts&quot;&gt;Ken Wheeler - 学习 ReactJS&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://www.logopearl.com/blog/wp-content/uploads/2015/12/2-scothio-reactjs.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;这是 Ken Wheeler 在 Scotch.io 上发表的一篇很棒的教程。在去年发表的时候至今，已经有超过 200 条的分享，当然这些也只有在开发者社区圈里才会对此感兴趣。可以说这是目前找到的 ReactJS 最好的教程之一。此教程主要分为五个部分，从基础开始，涵盖了&lt;strong&gt;什么是 React&lt;/strong&gt;，&lt;strong&gt;虚拟 DOM 是如何工作的&lt;/strong&gt;，&lt;strong&gt;如何构建页面&lt;/strong&gt;，&lt;strong&gt;生命周期的说明&lt;/strong&gt;和 &lt;strong&gt;state&lt;/strong&gt; 等。&lt;/p&gt;
    
    </summary>
    
      <category term="好文分享" scheme="http://HankCoder.github.io/blog/categories/%E5%A5%BD%E6%96%87%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="译文" scheme="http://HankCoder.github.io/blog/tags/%E8%AF%91%E6%96%87/"/>
    
      <category term="ReactJS" scheme="http://HankCoder.github.io/blog/tags/ReactJS/"/>
    
      <category term="教程" scheme="http://HankCoder.github.io/blog/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Tutorials" scheme="http://HankCoder.github.io/blog/tags/Tutorials/"/>
    
      <category term="getting started lesson" scheme="http://HankCoder.github.io/blog/tags/getting-started-lesson/"/>
    
  </entry>
  
  <entry>
    <title>对于 Web 设计师和开发者非常有用的 25 个 Chrome 扩展应用</title>
    <link href="http://HankCoder.github.io/blog/2015/12/04/article-12/"/>
    <id>http://HankCoder.github.io/blog/2015/12/04/article-12/</id>
    <published>2015-12-04T02:10:33.000Z</published>
    <updated>2016-05-22T14:56:40.000Z</updated>
    
    <content type="html">&lt;p&gt;尽管 Chrome 的开发者工具给你足够多的实用工具来覆盖你的设计和开发需求，但也可以通过添加免费的扩展应用去进一步扩展浏览器的功能。根据你的需要，并选择完美的扩展，你可以轻松地创建一个个性化的开发环境，这会大大提高你的开发效率。&lt;/p&gt;
&lt;p&gt;要介绍的 25 个 Chrome 扩展应该我们为你选择分为以下几类：&lt;a href=&quot;#前端扩展&quot;&gt;前端扩展&lt;/a&gt;，&lt;a href=&quot;#在线编辑&quot;&gt;在线编辑&lt;/a&gt;，&lt;a href=&quot;#验证器与性能相关&quot;&gt;验证器与性能相关&lt;/a&gt;，&lt;a href=&quot;#测量扩展应用&quot;&gt;测量扩展应用&lt;/a&gt;，&lt;a href=&quot;#颜色工具&quot;&gt;颜色工具&lt;/a&gt;，&lt;a href=&quot;#字体测试工具&quot;&gt;字体测试工具&lt;/a&gt;和 &lt;a href=&quot;#很有用的实用性扩展应用&quot;&gt;很有用的实用性扩展应用&lt;/a&gt;。&lt;/p&gt;
&lt;h1 id=&quot;前端扩展&quot;&gt;&lt;a href=&quot;#前端扩展&quot; class=&quot;headerlink&quot; title=&quot;前端扩展&quot;&gt;&lt;/a&gt;前端扩展&lt;/h1&gt;&lt;h2 id=&quot;SnappySnippet&quot;&gt;&lt;a href=&quot;#SnappySnippet&quot; class=&quot;headerlink&quot; title=&quot;SnappySnippet&quot;&gt;&lt;/a&gt;SnappySnippet&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/snappysnippet/blfngdefapoapkcdibbdkigpeaffgcil?hl=en&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SnappySnippet&lt;/a&gt;&lt;/strong&gt; 把 CSS 和 HTML 从 DOM 树里提取出来，然后发送到 CodePen，jsFiddle 或 JS Bin 上。&lt;br&gt;&lt;img src=&quot;http://i1.wp.com/p2html.com/blog/wp-content/uploads/2015/12/chrome-extension-web-design-01.png?w=520&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;MagiCSS&quot;&gt;&lt;a href=&quot;#MagiCSS&quot; class=&quot;headerlink&quot; title=&quot;MagiCSS&quot;&gt;&lt;/a&gt;MagiCSS&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/magicss-live-css-editor/ifhikkcafabcgolfjegfcgloomalapol?hl=en&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MagiCSS&lt;/a&gt;&lt;/strong&gt; 一个拥有内置编辑器的在线 CSS 编辑扩展应用，具有美化和减小 CSS 的功能。同时还允许创建 Github Gist。&lt;br&gt;&lt;img src=&quot;http://i2.wp.com/p2html.com/blog/wp-content/uploads/2015/12/chrome-extension-web-design-02.png?w=520&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;CSS-Dig&quot;&gt;&lt;a href=&quot;#CSS-Dig&quot; class=&quot;headerlink&quot; title=&quot;CSS Dig&quot;&gt;&lt;/a&gt;CSS Dig&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/css-dig/lpnhmlhomomelfkcjnkcacofhmggjmco&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS Dig&lt;/a&gt;&lt;/strong&gt; 能够在大多数的网站上找到和组织样式表和样式块，给你一个简单的方法来分析和计划重构的代码。&lt;br&gt;&lt;img src=&quot;http://i1.wp.com/p2html.com/blog/wp-content/uploads/2015/12/chrome-extension-web-design-03.png?w=520&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;CSSViewer&quot;&gt;&lt;a href=&quot;#CSSViewer&quot; class=&quot;headerlink&quot; title=&quot;CSSViewer&quot;&gt;&lt;/a&gt;CSSViewer&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/cssviewer/ggfgijbpiheegefliciemofobhmofgce?hl=en&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSSViewer&lt;/a&gt;&lt;/strong&gt; 能集成很多工具和扩展程序去执行一个简单的任务。这使得它们更好地发挥功能。但没有 Chrome 扩展应用集合能在不集成的情况下可以完成这种功能。用法很简单，你只需点击工具栏的图标，然后将鼠标移到你想审查的元素上就可以了。&lt;br&gt;&lt;img src=&quot;http://i2.wp.com/p2html.com/blog/wp-content/uploads/2015/12/chrome-extension-web-design-04.png?w=520&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;CSS-Shack&quot;&gt;&lt;a href=&quot;#CSS-Shack&quot; class=&quot;headerlink&quot; title=&quot;CSS-Shack&quot;&gt;&lt;/a&gt;CSS-Shack&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/css-shack/geiccgjkigajaicecnhdokggninehdlp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS-Shack&lt;/a&gt;&lt;/strong&gt; 帮助你创建图层样式（就像你用如 PS 一样），并能生成一个 CSS 文件。&lt;br&gt;&lt;img src=&quot;http://i1.wp.com/p2html.com/blog/wp-content/uploads/2015/12/chrome-extension-web-design-05.png?w=520&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;CSS3-Generator&quot;&gt;&lt;a href=&quot;#CSS3-Generator&quot; class=&quot;headerlink&quot; title=&quot;CSS3 Generator&quot;&gt;&lt;/a&gt;CSS3 Generator&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/css3-generator/dmlgmehijaodgkkooghkknjjkddahmej?hl=en-GB&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS3 Generator&lt;/a&gt;&lt;/strong&gt; 如名，可以帮助你生成 CSS3 代码。&lt;br&gt;&lt;img src=&quot;http://i2.wp.com/p2html.com/blog/wp-content/uploads/2015/12/chrome-extension-web-design-06.png?w=520&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;CSS-Shapes-Editor&quot;&gt;&lt;a href=&quot;#CSS-Shapes-Editor&quot; class=&quot;headerlink&quot; title=&quot;CSS Shapes Editor&quot;&gt;&lt;/a&gt;CSS Shapes Editor&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/css-shapes-editor/nenndldnbcncjmeacmnondmkkfedmgmp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS Shapes Editor&lt;/a&gt;&lt;/strong&gt; 在线编辑 CSS 形状的值。&lt;br&gt;&lt;img src=&quot;http://i2.wp.com/p2html.com/blog/wp-content/uploads/2015/12/chrome-extension-web-design-07.png?w=520&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;在线编辑&quot;&gt;&lt;a href=&quot;#在线编辑&quot; class=&quot;headerlink&quot; title=&quot;在线编辑&quot;&gt;&lt;/a&gt;在线编辑&lt;/h1&gt;&lt;h2 id=&quot;WordPress-Style-Editor&quot;&gt;&lt;a href=&quot;#WordPress-Style-Editor&quot; class=&quot;headerlink&quot; title=&quot;WordPress Style Editor&quot;&gt;&lt;/a&gt;WordPress Style Editor&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/wordpress-style-editor/bgdpllcnhcmpfcheafdhimpklhjoommn?hl=en&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;WordPress Style Editor&lt;/a&gt;&lt;/strong&gt; 支持在线审查和编辑你的 WordPress 的样式。&lt;br&gt;&lt;img src=&quot;http://i0.wp.com/p2html.com/blog/wp-content/uploads/2015/12/chrome-extension-web-design-08.png?w=520&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;PageEdit&quot;&gt;&lt;a href=&quot;#PageEdit&quot; class=&quot;headerlink&quot; title=&quot;PageEdit&quot;&gt;&lt;/a&gt;PageEdit&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/pageedit/ebkclgoaabaibghklgknnjdemknjaeic&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PageEdit&lt;/a&gt;&lt;/strong&gt; 能把 Chrome 变成所见即所得的编辑器，你可以用它编辑任何网页。&lt;/p&gt;
&lt;iframe width=&quot;640&quot; height=&quot;400&quot; src=&quot;https://www.youtube.com/embed/Ts4bSR1hpxg&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;

&lt;h1 id=&quot;验证器与性能相关&quot;&gt;&lt;a href=&quot;#验证器与性能相关&quot; class=&quot;headerlink&quot; title=&quot;验证器与性能相关&quot;&gt;&lt;/a&gt;验证器与性能相关&lt;/h1&gt;&lt;h2 id=&quot;Perfmap&quot;&gt;&lt;a href=&quot;#Perfmap&quot; class=&quot;headerlink&quot; title=&quot;Perfmap&quot;&gt;&lt;/a&gt;Perfmap&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/perfmap/hgpnhiajcdppfbogcpfdgcceepgkhdmk?hl=en&amp;amp;gl=GB&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Perfmap&lt;/a&gt;&lt;/strong&gt; 它用 Resource Timing API 来创建一个网站的前端的性能的热图检查的定时器，使得可以在浏览器中查看加载的资源。&lt;br&gt;&lt;img src=&quot;http://i0.wp.com/p2html.com/blog/wp-content/uploads/2015/12/chrome-extension-web-design-12.png?w=520&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Validity&quot;&gt;&lt;a href=&quot;#Validity&quot; class=&quot;headerlink&quot; title=&quot;Validity&quot;&gt;&lt;/a&gt;Validity&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/validity/bbicmjjbohdfglopkidebfccilipgeif?hl=en-GB&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Validity&lt;/a&gt;&lt;/strong&gt; 帮助你验证任何一个网页。可以在 console 页查看错误的数量和详情。&lt;br&gt;&lt;img src=&quot;http://i2.wp.com/p2html.com/blog/wp-content/uploads/2015/12/chrome-extension-web-design-13.png?w=520&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Web-Developer-Checklist&quot;&gt;&lt;a href=&quot;#Web-Developer-Checklist&quot; class=&quot;headerlink&quot; title=&quot;Web Developer Checklist&quot;&gt;&lt;/a&gt;Web Developer Checklist&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/web-developer-checklist/iahamcpedabephpcgkeikbclmaljebjp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Web Developer Checklist&lt;/a&gt;&lt;/strong&gt; 必备的扩展应用，可以查看任何一个网页的报错和反常的问题。&lt;br&gt;&lt;img src=&quot;http://i1.wp.com/p2html.com/blog/wp-content/uploads/2015/12/chrome-extension-web-design-10.png?w=520&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Bootlint-This-Page&quot;&gt;&lt;a href=&quot;#Bootlint-This-Page&quot; class=&quot;headerlink&quot; title=&quot;Bootlint This Page&quot;&gt;&lt;/a&gt;Bootlint This Page&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/bootlint-this-page/cnamjhcdoadndjpjodeclalnmfhkoepb?hl=en&amp;amp;gl=GB&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Bootlint This Page&lt;/a&gt;&lt;/strong&gt; 在 Chrome 浏览器上显示一个按钮，帮助你查看任何一个基于 BootStrap 的网页的报错。可以在 console 页查看。&lt;br&gt;&lt;img src=&quot;http://i0.wp.com/p2html.com/blog/wp-content/uploads/2015/12/chrome-extension-web-design-11.png?w=520&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Check-My-Links&quot;&gt;&lt;a href=&quot;#Check-My-Links&quot; class=&quot;headerlink&quot; title=&quot;Check My Links&quot;&gt;&lt;/a&gt;Check My Links&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/check-my-links/ojkcdipcgfaekbeaelaapakgnjflfglf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Check My Links&lt;/a&gt;&lt;/strong&gt; 扫描网页，并把链接以高亮显示，有效为绿色，无效为红色。没人会喜欢无效的链接！&lt;br&gt;&lt;img src=&quot;http://i2.wp.com/p2html.com/blog/wp-content/uploads/2015/12/chrome-extension-web-design-27.png?w=520&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;测量扩展应用&quot;&gt;&lt;a href=&quot;#测量扩展应用&quot; class=&quot;headerlink&quot; title=&quot;测量扩展应用&quot;&gt;&lt;/a&gt;测量扩展应用&lt;/h1&gt;&lt;h2 id=&quot;Page-Ruler&quot;&gt;&lt;a href=&quot;#Page-Ruler&quot; class=&quot;headerlink&quot; title=&quot;Page Ruler&quot;&gt;&lt;/a&gt;Page Ruler&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/page-ruler/jlpkojjdgbllmedoapgfodplfhcbnbpn?hl=en&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Page Ruler&lt;/a&gt;&lt;/strong&gt; 能够在任何网上形成一个画尺，并显示元素的 width，height 和 position。&lt;br&gt;&lt;img src=&quot;http://i1.wp.com/p2html.com/blog/wp-content/uploads/2015/12/chrome-extension-web-design-14.png?w=520&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Dimensions&quot;&gt;&lt;a href=&quot;#Dimensions&quot; class=&quot;headerlink&quot; title=&quot;Dimensions&quot;&gt;&lt;/a&gt;Dimensions&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/dimensions/baocaagndhipibgklemoalmkljaimfdj&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Dimensions&lt;/a&gt;&lt;/strong&gt; 简单且使用的工具，为你测量屏幕宽度和高度。&lt;br&gt;&lt;img src=&quot;http://i1.wp.com/p2html.com/blog/wp-content/uploads/2015/12/chrome-extension-web-design-15.png?w=520&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;颜色工具&quot;&gt;&lt;a href=&quot;#颜色工具&quot; class=&quot;headerlink&quot; title=&quot;颜色工具&quot;&gt;&lt;/a&gt;颜色工具&lt;/h1&gt;&lt;h2 id=&quot;ColorZilla&quot;&gt;&lt;a href=&quot;#ColorZilla&quot; class=&quot;headerlink&quot; title=&quot;ColorZilla&quot;&gt;&lt;/a&gt;ColorZilla&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/colorzilla/bhlhnicpbhignbdhedgjhgdocnmhomnp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ColorZilla&lt;/a&gt;&lt;/strong&gt; 起源于 Firefox，但它为 Chrome 增加了多种颜色工具，像吸管，颜色选择器，调色板查看器和梯度生成器。&lt;br&gt;&lt;img src=&quot;http://i2.wp.com/p2html.com/blog/wp-content/uploads/2015/12/chrome-extension-web-design-17.png?w=520&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Color-Tab&quot;&gt;&lt;a href=&quot;#Color-Tab&quot; class=&quot;headerlink&quot; title=&quot;Color Tab&quot;&gt;&lt;/a&gt;Color Tab&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://colorhunt.co/tab/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Color Tab&lt;/a&gt;&lt;/strong&gt; 在你每次打开一个新标签时，会给你一个美丽的新配色方案。&lt;br&gt;&lt;img src=&quot;http://i2.wp.com/p2html.com/blog/wp-content/uploads/2015/12/chrome-extension-web-design-18.png?w=520&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;字体测试工具&quot;&gt;&lt;a href=&quot;#字体测试工具&quot; class=&quot;headerlink&quot; title=&quot;字体测试工具&quot;&gt;&lt;/a&gt;字体测试工具&lt;/h1&gt;&lt;h2 id=&quot;Fontface-Ninja&quot;&gt;&lt;a href=&quot;#Fontface-Ninja&quot; class=&quot;headerlink&quot; title=&quot;Fontface Ninja&quot;&gt;&lt;/a&gt;Fontface Ninja&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/fontface-ninja/eljapbgkmlngdpckoiiibecpemleclhh&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Fontface Ninja&lt;/a&gt;&lt;/strong&gt; 可以识别任何网页的字体，同时给出它的 size 和 line-spacing。帮助你测试和探索新的字体。&lt;br&gt;&lt;img src=&quot;http://i2.wp.com/p2html.com/blog/wp-content/uploads/2015/12/chrome-extension-web-design-19.png?w=520&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Font-Playground&quot;&gt;&lt;a href=&quot;#Font-Playground&quot; class=&quot;headerlink&quot; title=&quot;Font Playground&quot;&gt;&lt;/a&gt;Font Playground&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/font-playground/hdpmpnhaoddjelneingmbnhaibbmjgno?hl=en&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Font Playground&lt;/a&gt;&lt;/strong&gt; 在任何网页上预览 Google 成千上万的字体。&lt;br&gt;&lt;img src=&quot;http://i0.wp.com/p2html.com/blog/wp-content/uploads/2015/12/chrome-extension-web-design-20.png?w=520&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;TypeWonder&quot;&gt;&lt;a href=&quot;#TypeWonder&quot; class=&quot;headerlink&quot; title=&quot;TypeWonder&quot;&gt;&lt;/a&gt;TypeWonder&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/typewonder/ohgmapelghofmbacalgamfbejaghdilh&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;TypeWonder&lt;/a&gt;&lt;/strong&gt; 允许你在任何网站测试 web 字体。输入站点 URL 就可以立马预览字体。&lt;br&gt;&lt;img src=&quot;http://i0.wp.com/p2html.com/blog/wp-content/uploads/2015/12/chrome-extension-web-design-21.png?w=520&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;很有用的实用性扩展应用&quot;&gt;&lt;a href=&quot;#很有用的实用性扩展应用&quot; class=&quot;headerlink&quot; title=&quot;很有用的实用性扩展应用&quot;&gt;&lt;/a&gt;很有用的实用性扩展应用&lt;/h1&gt;&lt;h2 id=&quot;Responsive-Web-Design-Tester&quot;&gt;&lt;a href=&quot;#Responsive-Web-Design-Tester&quot; class=&quot;headerlink&quot; title=&quot;Responsive Web Design Tester&quot;&gt;&lt;/a&gt;Responsive Web Design Tester&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/responsive-web-design-tes/objclahbaimlfnbjdeobicmmlnbhamkg?hl=en&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Responsive Web Design Tester&lt;/a&gt;&lt;/strong&gt; 是一个简单的工具，来帮助快速、轻松地测试网站在大多数流行的移动设备上的响应。&lt;br&gt;&lt;img src=&quot;http://i1.wp.com/p2html.com/blog/wp-content/uploads/2015/12/chrome-extension-web-design-22.png?w=520&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;45to75&quot;&gt;&lt;a href=&quot;#45to75&quot; class=&quot;headerlink&quot; title=&quot;45to75&quot;&gt;&lt;/a&gt;45to75&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/45to75/efmppndinjbljeellfdkpghgblenbcdd&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;45to75&lt;/a&gt;&lt;/strong&gt; 为保证在所有大小设备上，你的文字是可读的。它可以帮你把句子规定在 45 到 75 个字符之间，从而优化句子长度。&lt;br&gt;&lt;img src=&quot;http://i1.wp.com/p2html.com/blog/wp-content/uploads/2015/12/chrome-extension-web-design-16.png?w=520&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;PerfectPixel&quot;&gt;&lt;a href=&quot;#PerfectPixel&quot; class=&quot;headerlink&quot; title=&quot;PerfectPixel&quot;&gt;&lt;/a&gt;PerfectPixel&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/perfectpixel-by-welldonec/dkaagdgjmgdmbnecmcefdhjekcoceebi&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PerfectPixel&lt;/a&gt;&lt;/strong&gt; 在开发 HTML 时，它会把半透明图像叠加在顶部，允许你在每个像素间进行比较。&lt;br&gt;&lt;img src=&quot;http://i2.wp.com/p2html.com/blog/wp-content/uploads/2015/12/chrome-extension-web-design-23.png?w=520&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;ZenHub&quot;&gt;&lt;a href=&quot;#ZenHub&quot; class=&quot;headerlink&quot; title=&quot;ZenHub&quot;&gt;&lt;/a&gt;ZenHub&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/zenhub-for-github/ogcgkffhplmphkaahpmffcafajaocjbd&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ZenHub&lt;/a&gt;&lt;/strong&gt; 为 Github 项目管理应用。有节省时间的特性，如 drap-drop 任务板和 to-do 列表，帮助你提升 Github 的生产效率。&lt;br&gt;&lt;img src=&quot;http://i0.wp.com/p2html.com/blog/wp-content/uploads/2015/12/chrome-extension-web-design-24.png?w=520&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Instant-Wireframe&quot;&gt;&lt;a href=&quot;#Instant-Wireframe&quot; class=&quot;headerlink&quot; title=&quot;Instant Wireframe&quot;&gt;&lt;/a&gt;Instant Wireframe&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/instant-wireframe/pmpmnmbgidlnoamkpmcikaejhmeldnha&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Instant Wireframe&lt;/a&gt;&lt;/strong&gt; 谁不喜欢漂亮的线框呢？它给为任何一个网页添加线框，同时本地的也可以。&lt;br&gt;&lt;img src=&quot;http://i2.wp.com/p2html.com/blog/wp-content/uploads/2015/12/chrome-extension-web-design-25.png?w=520&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Minimalist-Markdown-Editor&quot;&gt;&lt;a href=&quot;#Minimalist-Markdown-Editor&quot; class=&quot;headerlink&quot; title=&quot;Minimalist Markdown Editor&quot;&gt;&lt;/a&gt;Minimalist Markdown Editor&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/minimalist-markdown-edito/pghodfjepegmciihfhdipmimghiakcjf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Minimalist Markdown Editor&lt;/a&gt;&lt;/strong&gt; 同步预览 Markdown。可以快速地帮 Markdown 转化成 HTML。&lt;br&gt;&lt;img src=&quot;http://i2.wp.com/p2html.com/blog/wp-content/uploads/2015/12/chrome-extension-web-design-26.png?w=520&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;fb-flo&quot;&gt;&lt;a href=&quot;#fb-flo&quot; class=&quot;headerlink&quot; title=&quot;fb-flo&quot;&gt;&lt;/a&gt;fb-flo&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://facebook.github.io/fb-flo/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;fb-flo&lt;/a&gt;&lt;/strong&gt; 由 Facebook 开发，同时也是 Chrome 的扩展应用。使你能够在线编辑 JS，CSS，images 或任何静态资源。&lt;/p&gt;
&lt;h2 id=&quot;Web-Developer&quot;&gt;&lt;a href=&quot;#Web-Developer&quot; class=&quot;headerlink&quot; title=&quot;Web Developer&quot;&gt;&lt;/a&gt;Web Developer&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/web-developer/bfbameneiokkgbdmiekhjnmfkcnldhhm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Web Developer&lt;/a&gt;&lt;/strong&gt; 如果你现在还没用这个应用，赶紧吧。这是迄今为止最受欢迎的 Chrome 和 Firefox 开发人员扩展应用。它添加了一个超级有用工具到浏览器，每个网页设计师和开发人员，还有你可能甚至不知道你需要的都会需要。&lt;/p&gt;
&lt;h2 id=&quot;MySQL-Admin&quot;&gt;&lt;a href=&quot;#MySQL-Admin&quot; class=&quot;headerlink&quot; title=&quot;MySQL Admin&quot;&gt;&lt;/a&gt;MySQL Admin&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/chrome-mysql-admin/ndgnpnpakfcdjmpgmcaknimfgcldechn&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MySQL Admin&lt;/a&gt;&lt;/strong&gt; 为你更好地，更简单地管理 MySQL 数据库。&lt;br&gt;&lt;img src=&quot;http://i1.wp.com/p2html.com/blog/wp-content/uploads/2015/12/chrome-extension-web-design-29.png?w=520&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;完毕！&quot;&gt;&lt;a href=&quot;#完毕！&quot; class=&quot;headerlink&quot; title=&quot;完毕！&quot;&gt;&lt;/a&gt;完毕！&lt;/h1&gt;&lt;p&gt;想要获取更多的 Chrome 扩展应用，请看 &lt;a href=&quot;http://devtoolstips.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DevTools Tips&lt;/a&gt;，这里收集了 Chrome 的开发工具集和基本使用方法。如果你是一个设计师或开发人员，想获取更新最新的设计和开发资讯，请访问 Chrome 的扩展应用 &lt;a href=&quot;https://chrome.google.com/webstore/detail/muzli-design-breakfast/glcipcfhmopcgidicgdociohdoicpdfc&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Muzli&lt;/a&gt; 或 &lt;a href=&quot;https://chrome.google.com/webstore/detail/panda-4-news-inspiration/haafibkemckmbknhfkiiniobjpgkebko&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Panda&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;如果你正在寻找 Firefox 的扩展应用，请看：&lt;a href=&quot;http://speckyboy.com/2011/05/03/20-essential-firefox-4-addonsextensions-for-web-developers/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;对于 Web 开发非常有用的 20 个 Firefox 扩展应用&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;之前还有一篇发布在 &lt;a href=&quot;http://speckyboy.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Speckyboy Design Magazine&lt;/a&gt; 上的文章是&lt;a href=&quot;http://speckyboy.com/2015/12/03/chrome-extensions-web-designers-developers/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;对于 Web 设计师和开发者非常有用的 20 个 Chrome 扩展应用&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://p2html.com/blog/25-chrome-extensions-for-web-designers-developers/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;原文链接&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;尽管 Chrome 的开发者工具给你足够多的实用工具来覆盖你的设计和开发需求，但也可以通过添加免费的扩展应用去进一步扩展浏览器的功能。根据你的需要，并选择完美的扩展，你可以轻松地创建一个个性化的开发环境，这会大大提高你的开发效率。&lt;/p&gt;
&lt;p&gt;要介绍的 25 个 Chrome 扩展应该我们为你选择分为以下几类：&lt;a href=&quot;#前端扩展&quot;&gt;前端扩展&lt;/a&gt;，&lt;a href=&quot;#在线编辑&quot;&gt;在线编辑&lt;/a&gt;，&lt;a href=&quot;#验证器与性能相关&quot;&gt;验证器与性能相关&lt;/a&gt;，&lt;a href=&quot;#测量扩展应用&quot;&gt;测量扩展应用&lt;/a&gt;，&lt;a href=&quot;#颜色工具&quot;&gt;颜色工具&lt;/a&gt;，&lt;a href=&quot;#字体测试工具&quot;&gt;字体测试工具&lt;/a&gt;和 &lt;a href=&quot;#很有用的实用性扩展应用&quot;&gt;很有用的实用性扩展应用&lt;/a&gt;。&lt;/p&gt;
&lt;h1 id=&quot;前端扩展&quot;&gt;&lt;a href=&quot;#前端扩展&quot; class=&quot;headerlink&quot; title=&quot;前端扩展&quot;&gt;&lt;/a&gt;前端扩展&lt;/h1&gt;&lt;h2 id=&quot;SnappySnippet&quot;&gt;&lt;a href=&quot;#SnappySnippet&quot; class=&quot;headerlink&quot; title=&quot;SnappySnippet&quot;&gt;&lt;/a&gt;SnappySnippet&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/snappysnippet/blfngdefapoapkcdibbdkigpeaffgcil?hl=en&quot;&gt;SnappySnippet&lt;/a&gt;&lt;/strong&gt; 把 CSS 和 HTML 从 DOM 树里提取出来，然后发送到 CodePen，jsFiddle 或 JS Bin 上。&lt;br&gt;&lt;img src=&quot;http://i1.wp.com/p2html.com/blog/wp-content/uploads/2015/12/chrome-extension-web-design-01.png?w=520&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;MagiCSS&quot;&gt;&lt;a href=&quot;#MagiCSS&quot; class=&quot;headerlink&quot; title=&quot;MagiCSS&quot;&gt;&lt;/a&gt;MagiCSS&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/magicss-live-css-editor/ifhikkcafabcgolfjegfcgloomalapol?hl=en&quot;&gt;MagiCSS&lt;/a&gt;&lt;/strong&gt; 一个拥有内置编辑器的在线 CSS 编辑扩展应用，具有美化和减小 CSS 的功能。同时还允许创建 Github Gist。&lt;br&gt;&lt;img src=&quot;http://i2.wp.com/p2html.com/blog/wp-content/uploads/2015/12/chrome-extension-web-design-02.png?w=520&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;CSS-Dig&quot;&gt;&lt;a href=&quot;#CSS-Dig&quot; class=&quot;headerlink&quot; title=&quot;CSS Dig&quot;&gt;&lt;/a&gt;CSS Dig&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/css-dig/lpnhmlhomomelfkcjnkcacofhmggjmco&quot;&gt;CSS Dig&lt;/a&gt;&lt;/strong&gt; 能够在大多数的网站上找到和组织样式表和样式块，给你一个简单的方法来分析和计划重构的代码。&lt;br&gt;&lt;img src=&quot;http://i1.wp.com/p2html.com/blog/wp-content/uploads/2015/12/chrome-extension-web-design-03.png?w=520&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;CSSViewer&quot;&gt;&lt;a href=&quot;#CSSViewer&quot; class=&quot;headerlink&quot; title=&quot;CSSViewer&quot;&gt;&lt;/a&gt;CSSViewer&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/cssviewer/ggfgijbpiheegefliciemofobhmofgce?hl=en&quot;&gt;CSSViewer&lt;/a&gt;&lt;/strong&gt; 能集成很多工具和扩展程序去执行一个简单的任务。这使得它们更好地发挥功能。但没有 Chrome 扩展应用集合能在不集成的情况下可以完成这种功能。用法很简单，你只需点击工具栏的图标，然后将鼠标移到你想审查的元素上就可以了。&lt;br&gt;&lt;img src=&quot;http://i2.wp.com/p2html.com/blog/wp-content/uploads/2015/12/chrome-extension-web-design-04.png?w=520&quot; /&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="好文分享" scheme="http://HankCoder.github.io/blog/categories/%E5%A5%BD%E6%96%87%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="译文" scheme="http://HankCoder.github.io/blog/tags/%E8%AF%91%E6%96%87/"/>
    
      <category term="Web Development" scheme="http://HankCoder.github.io/blog/tags/Web-Development/"/>
    
      <category term="Chrome Extensions" scheme="http://HankCoder.github.io/blog/tags/Chrome-Extensions/"/>
    
      <category term="Web Designers" scheme="http://HankCoder.github.io/blog/tags/Web-Designers/"/>
    
      <category term="Developers" scheme="http://HankCoder.github.io/blog/tags/Developers/"/>
    
  </entry>
  
  <entry>
    <title>博客的新版布局</title>
    <link href="http://HankCoder.github.io/blog/2015/12/01/article-11/"/>
    <id>http://HankCoder.github.io/blog/2015/12/01/article-11/</id>
    <published>2015-12-01T06:12:53.000Z</published>
    <updated>2016-05-22T14:56:40.000Z</updated>
    
    <content type="html">&lt;p&gt;今天兴致勃勃去查看了下 Next 主题的更新，发现已经有了新的版本，而且布局也更新了。所以马上就试了试，先来看看变化：&lt;/p&gt;
&lt;h4 id=&quot;旧版&quot;&gt;&lt;a href=&quot;#旧版&quot; class=&quot;headerlink&quot; title=&quot;旧版&quot;&gt;&lt;/a&gt;旧版&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;/blog/images/article_img/old-1.png&quot; alt=&quot;old-main&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;img src=&quot;/blog/images/article_img/old-2.png&quot; alt=&quot;old-detail&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;新版&quot;&gt;&lt;a href=&quot;#新版&quot; class=&quot;headerlink&quot; title=&quot;新版&quot;&gt;&lt;/a&gt;新版&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;/blog/images/article_img/new-1.png&quot; alt=&quot;new-main&quot;&gt;&lt;br&gt;&lt;img src=&quot;/blog/images/article_img/new-2.png&quot; alt=&quot;new-detail&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;主要改动&quot;&gt;&lt;a href=&quot;#主要改动&quot; class=&quot;headerlink&quot; title=&quot;主要改动&quot;&gt;&lt;/a&gt;主要改动&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;修改了 &lt;code&gt;header&lt;/code&gt; 的位置和布局&lt;/li&gt;
&lt;li&gt;添加了 FontAwsome 的图标&lt;/li&gt;
&lt;li&gt;将一部分站点配置，转到 theme 下的 &lt;code&gt;_config.yml&lt;/code&gt; 中，如：第三方服务等&lt;/li&gt;
&lt;li&gt;添加了&lt;code&gt;阅读次数&lt;/code&gt;字段：&lt;code&gt;leancloud_visitors&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;FaceBook SDK 支持：&lt;code&gt;facebook_sdk&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;很有很多有趣的变化可以自己去发现，有任何疑问或建议可以在下面评论！&lt;br&gt;同时你也可以去&lt;a href=&quot;http://notes.iissnan.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; NexT 作者的博客&lt;/a&gt;提问。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;今天兴致勃勃去查看了下 Next 主题的更新，发现已经有了新的版本，而且布局也更新了。所以马上就试了试，先来看看变化：&lt;/p&gt;
&lt;h4 id=&quot;旧版&quot;&gt;&lt;a href=&quot;#旧版&quot; class=&quot;headerlink&quot; title=&quot;旧版&quot;&gt;&lt;/a&gt;旧版&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;/blog/images/article_img/old-1.png&quot; alt=&quot;old-main&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="杂谈" scheme="http://HankCoder.github.io/blog/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="blog" scheme="http://HankCoder.github.io/blog/tags/blog/"/>
    
      <category term="next" scheme="http://HankCoder.github.io/blog/tags/next/"/>
    
      <category term="hexo" scheme="http://HankCoder.github.io/blog/tags/hexo/"/>
    
      <category term="pisces" scheme="http://HankCoder.github.io/blog/tags/pisces/"/>
    
  </entry>
  
  <entry>
    <title>5 大 Web 开发与设计网站</title>
    <link href="http://HankCoder.github.io/blog/2015/11/17/article-10/"/>
    <id>http://HankCoder.github.io/blog/2015/11/17/article-10/</id>
    <published>2015-11-17T02:23:56.000Z</published>
    <updated>2016-05-22T14:56:40.000Z</updated>
    
    <content type="html">&lt;p&gt;Web 缺点之一是任何东西都是临时的。&lt;br&gt;技术的发展快如闪电，当你想设计一个新的网站，或是让别人为你设计一个，当前的技术将变得不足以应付。本文将为你介绍很多很好的网站。&lt;br&gt;你需要设计一个让读者难忘的，同时能发表一个声明，并且不会像其它网站一样会让你的读者“尖叫”的网站。&lt;br&gt;你要为你的目标读者提供一个独特而不同于其它的体验，否则你会失去这里读者。&lt;/p&gt;
&lt;p&gt;如果你是一个 Web 开发人员或是设计师，那么你会喜欢上这 5 个网站，同时你也会拥有一个志同道合的社区，从中受益并且重新概念化你的品牌和业务价值。&lt;/p&gt;
&lt;h1 id=&quot;WebDesigner-News&quot;&gt;&lt;a href=&quot;#WebDesigner-News&quot; class=&quot;headerlink&quot; title=&quot;WebDesigner News&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.webdesignernews.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;WebDesigner News&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;这里将列出设计师们的经验，他们会将自己的经验总结成一些“入门级”的文章。&lt;br&gt;其中有些是高技术含量的文章，但也是与 web-friendly 相关的内容。&lt;/p&gt;
&lt;h1 id=&quot;Smashing-Magazine&quot;&gt;&lt;a href=&quot;#Smashing-Magazine&quot; class=&quot;headerlink&quot; title=&quot;Smashing Magazine&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.smashingmagazine.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Smashing Magazine&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;一个不仅关注编码和设计的全类型网站，但也可以在这里用设计好设计和编码去触动某人。&lt;br&gt;重点是提供可编辑的内容，从设计的角度而言，它可以作用于在两个主要平台——站点和电子书发布。&lt;/p&gt;
&lt;h1 id=&quot;Dribble&quot;&gt;&lt;a href=&quot;#Dribble&quot; class=&quot;headerlink&quot; title=&quot;Dribble&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://dribbble.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Dribble&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;一个设计师社区，用于展示和分享他们最新的 Web 设计项目。&lt;br&gt;这为你提供了很多与全球的设计师面对面合作的机会，也可以在此获得设计师工作的机会。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;A-List-Apart&quot;&gt;&lt;a href=&quot;#A-List-Apart&quot; class=&quot;headerlink&quot; title=&quot;A List Apart&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://alistapart.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;A List Apart&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;专注于 Web 相关的设计，开发及意义。&lt;br&gt;你会在这找到你特别关注的 Web 标准和最佳的实践。&lt;br&gt;这个网站附加的价值是，它会为那些及时书写与主题相关的 Web 设计和开发的自由作家支付一笔钱。&lt;br&gt;鲜明的特点是，所有的专家都是来自世界各地。&lt;/p&gt;
&lt;h1 id=&quot;Awwwards&quot;&gt;&lt;a href=&quot;#Awwwards&quot; class=&quot;headerlink&quot; title=&quot;Awwwards&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.awwwards.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Awwwards&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;一个 Web 设计师和开发人员展示它们工作成果的网站，同时也希望自己能被发现，识别和获得升职机会。&lt;br&gt;每年，顶级设计师和开发人员选择在一个标志性的城市举行特殊的颁奖典礼。&lt;br&gt;对于 Awwwards 而言，他们正在寻找有用的，创新的，直观的，美丽的而且独特的数字体验。&lt;br&gt;Awwwards 是一个全球性对于知识和灵感“很好”的网站。&lt;/p&gt;
&lt;p&gt;现在你明白了吧——这五大网站，不仅仅是展示人才，同时了解 Web 设计人员和开发人员通过这些网站的功能去概念化品牌的知识。这些网站的许多贡献者最大化他们的在线帮助你去建立品牌和让你成为一个志趣相投的社区的一部分。你听说过或与这些网站吗？你有任何其他人分享吗？加入谈话，在下面的评论栏中分享你的想法。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.huffingtonpost.com/dorit-sasson/5-top-websites-on-web-des_b_8481976.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;原文链接&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Web 缺点之一是任何东西都是临时的。&lt;br&gt;技术的发展快如闪电，当你想设计一个新的网站，或是让别人为你设计一个，当前的技术将变得不足以应付。本文将为你介绍很多很好的网站。&lt;br&gt;你需要设计一个让读者难忘的，同时能发表一个声明，并且不会像其它网站一样会让你的读者“尖叫”的网站。&lt;br&gt;你要为你的目标读者提供一个独特而不同于其它的体验，否则你会失去这里读者。&lt;/p&gt;
&lt;p&gt;如果你是一个 Web 开发人员或是设计师，那么你会喜欢上这 5 个网站，同时你也会拥有一个志同道合的社区，从中受益并且重新概念化你的品牌和业务价值。&lt;/p&gt;
&lt;h1 id=&quot;WebDesigner-News&quot;&gt;&lt;a href=&quot;#WebDesigner-News&quot; class=&quot;headerlink&quot; title=&quot;WebDesigner News&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.webdesignernews.com/&quot;&gt;WebDesigner News&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;这里将列出设计师们的经验，他们会将自己的经验总结成一些“入门级”的文章。&lt;br&gt;其中有些是高技术含量的文章，但也是与 web-friendly 相关的内容。&lt;/p&gt;
&lt;h1 id=&quot;Smashing-Magazine&quot;&gt;&lt;a href=&quot;#Smashing-Magazine&quot; class=&quot;headerlink&quot; title=&quot;Smashing Magazine&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.smashingmagazine.com/&quot;&gt;Smashing Magazine&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;一个不仅关注编码和设计的全类型网站，但也可以在这里用设计好设计和编码去触动某人。&lt;br&gt;重点是提供可编辑的内容，从设计的角度而言，它可以作用于在两个主要平台——站点和电子书发布。&lt;/p&gt;
&lt;h1 id=&quot;Dribble&quot;&gt;&lt;a href=&quot;#Dribble&quot; class=&quot;headerlink&quot; title=&quot;Dribble&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://dribbble.com/&quot;&gt;Dribble&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;一个设计师社区，用于展示和分享他们最新的 Web 设计项目。&lt;br&gt;这为你提供了很多与全球的设计师面对面合作的机会，也可以在此获得设计师工作的机会。&lt;/p&gt;
    
    </summary>
    
      <category term="好文分享" scheme="http://HankCoder.github.io/blog/categories/%E5%A5%BD%E6%96%87%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="译文" scheme="http://HankCoder.github.io/blog/tags/%E8%AF%91%E6%96%87/"/>
    
      <category term="Web Dedign" scheme="http://HankCoder.github.io/blog/tags/Web-Dedign/"/>
    
      <category term="Web Development" scheme="http://HankCoder.github.io/blog/tags/Web-Development/"/>
    
      <category term="Websites" scheme="http://HankCoder.github.io/blog/tags/Websites/"/>
    
  </entry>
  
  <entry>
    <title>使用 Git 管理项目 - reset 与 rebase</title>
    <link href="http://HankCoder.github.io/blog/2015/11/04/article-9/"/>
    <id>http://HankCoder.github.io/blog/2015/11/04/article-9/</id>
    <published>2015-11-04T09:49:09.000Z</published>
    <updated>2016-05-22T14:56:40.000Z</updated>
    
    <content type="html">&lt;p&gt;在日常管理项目的过程中，可能会遇到提交的 commit/merge 并不是想要的，或是操作失误提交了，那么此时我们需要把不想要的 commit/merge 取消掉，如果做到呢？Git 为我们提供了一个 &lt;code&gt;reset&lt;/code&gt; command，很好地解决了这个问题。&lt;/p&gt;
&lt;h1 id=&quot;reset&quot;&gt;&lt;a href=&quot;#reset&quot; class=&quot;headerlink&quot; title=&quot;reset&quot;&gt;&lt;/a&gt;reset&lt;/h1&gt;&lt;h2 id=&quot;1-命令说明&quot;&gt;&lt;a href=&quot;#1-命令说明&quot; class=&quot;headerlink&quot; title=&quot;1. 命令说明&quot;&gt;&lt;/a&gt;1. 命令说明&lt;/h2&gt;&lt;figure class=&quot;highlight fsharp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git reset [--hard|soft|mixed|merge|keep] &lt;span class=&quot;meta&quot;&gt;[&amp;lt;commit&amp;gt;|&amp;lt;HEAD&amp;gt;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;常用的是&lt;code&gt;[--hard|soft|mixed]&lt;/code&gt;，本文主要使用&lt;code&gt;--hard&lt;/code&gt;作为例子进行说明。&lt;/p&gt;
&lt;h2 id=&quot;2-本地仓库&quot;&gt;&lt;a href=&quot;#2-本地仓库&quot; class=&quot;headerlink&quot; title=&quot;2. 本地仓库&quot;&gt;&lt;/a&gt;2. 本地仓库&lt;/h2&gt;&lt;p&gt;在本地仓库执行 &lt;code&gt;$ git reset --hard HEAD^&lt;/code&gt; 可以将本地的仓库回滚到上一次提交时的状态，&lt;code&gt;HEAD^&lt;/code&gt;指的是上一次提交。&lt;/p&gt;
&lt;p&gt;同时你也可以执行 &lt;code&gt;$ git reset --hard fc232ae&lt;/code&gt; 将其回滚到 &lt;code&gt;fc232ae&lt;/code&gt; commit 时的状态。&lt;/p&gt;
&lt;h2 id=&quot;3-远程仓库&quot;&gt;&lt;a href=&quot;#3-远程仓库&quot; class=&quot;headerlink&quot; title=&quot;3. 远程仓库&quot;&gt;&lt;/a&gt;3. 远程仓库&lt;/h2&gt;&lt;p&gt;以上操作只会对本地仓库造成影响，而远程仓库的源码和 commit 信息并不会因此改变。那么此时我们需要另外一个 command 来改变远程仓库的状态。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意，此时不要在上一步的操作之后执行&lt;code&gt;$ git pull&lt;/code&gt; ，因为这个操作会使本地仓库的状态与远程同步。&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git &lt;span class=&quot;keyword&quot;&gt;push &lt;/span&gt;origin [&lt;span class=&quot;keyword&quot;&gt;branch] &lt;/span&gt;-f&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;执行此命令后，Git 会将远程仓库的状态与本地仓库的保持一致，即回滚状态。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;在更新代码时，难免一次到位，此时就会生成许许多多的 commit 。比如同一个文件，反复地修改代码，反复地提交，此时会有5，6个 commit 甚至更多，那么你会在提交 list 中看到一大串的 commit 记录，会觉得很是头疼，杂乱。此时我们需要把这些 commit 整合以下，合并到一个 commit 中，其他的 commit 都 squash 到第一 commit 中，那么就需要用到 &lt;code&gt;rebase&lt;/code&gt;。&lt;/p&gt;
&lt;h1 id=&quot;rebase&quot;&gt;&lt;a href=&quot;#rebase&quot; class=&quot;headerlink&quot; title=&quot;rebase&quot;&gt;&lt;/a&gt;rebase&lt;/h1&gt;&lt;h2 id=&quot;1-说明&quot;&gt;&lt;a href=&quot;#1-说明&quot; class=&quot;headerlink&quot; title=&quot;1. 说明&quot;&gt;&lt;/a&gt;1. 说明&lt;/h2&gt;&lt;figure class=&quot;highlight 1c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git rebase -i [branch&lt;span class=&quot;string&quot;&gt;|&amp;lt;commit&amp;gt;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;你可以直接进入某个分支的 rebase 也可以进入某次 commit 的 rebase，如果你是项将某些 commit 合并，那么建议使用 &lt;code&gt;$ git rebase -i &amp;lt;commit&amp;gt;&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;此外 rebase 还提供三个操作命令，分别是 &lt;code&gt;--continue&lt;/code&gt;、&lt;code&gt;--absort&lt;/code&gt; 和 &lt;code&gt;--skip&lt;/code&gt;，这三个命令的意思分别是“继续”、“退出”和“跳过”。&lt;/p&gt;
&lt;h2 id=&quot;2-查看记录&quot;&gt;&lt;a href=&quot;#2-查看记录&quot; class=&quot;headerlink&quot; title=&quot;2. 查看记录&quot;&gt;&lt;/a&gt;2. 查看记录&lt;/h2&gt;&lt;figure class=&quot;highlight gams&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;$&lt;/span&gt; git &lt;span class=&quot;built-in&quot;&gt;log&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;执行此命令即可看到当前分支下所有的提交记录，然后根据个人需要复制其中的 commit 的 SHA 进行 rebase 操作。&lt;/p&gt;
&lt;h2 id=&quot;3-rebase&quot;&gt;&lt;a href=&quot;#3-rebase&quot; class=&quot;headerlink&quot; title=&quot;3. rebase&quot;&gt;&lt;/a&gt;3. rebase&lt;/h2&gt;&lt;p&gt;执行：&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git rebase -&lt;span class=&quot;selector-tag&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;cbc329&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后就会看到：&lt;br&gt;&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pick fb554f5 This &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; commit &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pick &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;bd1903 This &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; commit &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pick d987ebf This &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; commit &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Rebase 9cbc329..d987ebf onto 9cbc329&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Commands:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# p, pick = use commit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# r, reword = use commit, but edit the commit message&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# e, edit = use commit, but stop for amending&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# s, squash = use commit, but meld into previous commit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# f, fixup = like &quot;squash&quot;, but discard this commit&#39;s log message&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# x, exec = run command (the rest of the line) using shell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# If you remove a line here THAT COMMIT WILL BE LOST.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# However, if you remove everything, the rebase will be aborted.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;那么其中 &lt;code&gt;pick fb554f5 This is commit 1&lt;/code&gt;我们可以把它分成三部分去解释：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pick&lt;/code&gt;:：操作，即 rebase command&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fb554f5&lt;/code&gt;：commit shortID，提交的简写ID&lt;/li&gt;
&lt;li&gt;&lt;code&gt;This is commit 1&lt;/code&gt;： commit message，提交时填写的提交信息&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此时我们可以看到输出结果中所提供的一些操作方法，比如 &lt;code&gt;pick&lt;/code&gt;、&lt;code&gt;squash&lt;/code&gt;、&lt;code&gt;edit&lt;/code&gt; 等。那么重要的是 &lt;code&gt;pick&lt;/code&gt; 和 &lt;code&gt;squash&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;接着我们需要把 &lt;code&gt;2bd1903&lt;/code&gt; 和 &lt;code&gt;d987ebf&lt;/code&gt; 合并到 &lt;code&gt;fb554f5&lt;/code&gt; 中，做如下操作（&lt;strong&gt;注意：此时是 VIM 的操作界面，熟悉 Linux 的同学可以无视，不熟悉的可以&lt;a href=&quot;#简略的指导&quot;&gt;简略的指导&lt;/a&gt;&lt;/strong&gt;）：&lt;br&gt;&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pick fb554f5 This &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; commit &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;squash &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;bd1903 This &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; commit &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;squash d987ebf This &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; commit &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Rebase 9cbc329..d987ebf onto 9cbc329&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Commands:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# p, pick = use commit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# r, reword = use commit, but edit the commit message&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# e, edit = use commit, but stop for amending&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# s, squash = use commit, but meld into previous commit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# f, fixup = like &quot;squash&quot;, but discard this commit&#39;s log message&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# x, exec = run command (the rest of the line) using shell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# If you remove a line here THAT COMMIT WILL BE LOST.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# However, if you remove everything, the rebase will be aborted.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在做完以上修改操作后输入 &lt;code&gt;:x&lt;/code&gt; 保存文件并退出界面，然后就会看到：&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git rebase -i 9cbc329&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rebase in progress; onto 9cbc329&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;You are currently rebasing branch &#39;master&#39; on &#39;9cbc329&#39;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nothing to &lt;span class=&quot;keyword&quot;&gt;commit&lt;/span&gt;, working &lt;span class=&quot;keyword&quot;&gt;directory&lt;/span&gt; clean&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;The previous cherry-pick &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;now&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;empty&lt;/span&gt;, possibly due &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; conflict resolution.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;If&lt;/span&gt; you wish &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;commit&lt;/span&gt; it anyway, &lt;span class=&quot;keyword&quot;&gt;use&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    git &lt;span class=&quot;keyword&quot;&gt;commit&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;--allow-empty&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Otherwise, please &lt;span class=&quot;keyword&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;git reset&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Could &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;apply&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;cbc329f722f8e531496da70ee3857b031574b6d... squash &lt;span class=&quot;keyword&quot;&gt;commit&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt; rebase&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;此时用 &lt;code&gt;$ git status&lt;/code&gt;  查看会看到：&lt;br&gt;&lt;figure class=&quot;highlight livecodeserver&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git status&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rebase &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; progress; onto &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;cbc329&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;You are currently rebasing branch &lt;span class=&quot;string&quot;&gt;&#39;master&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;9cbc329&#39;&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (all conflicts fixed: run &lt;span class=&quot;string&quot;&gt;&quot;git rebase --continue&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nothing &lt;span class=&quot;built_in&quot;&gt;to&lt;/span&gt; commit, working &lt;span class=&quot;built_in&quot;&gt;directory&lt;/span&gt; clean&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;紧接着我们需要执行 &lt;code&gt;$ git rebase --continue&lt;/code&gt; 操作：&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git rebase &lt;span class=&quot;comment&quot;&gt;--continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[detached HEAD 2bd1903...d987ebf] squash &lt;span class=&quot;keyword&quot;&gt;commit&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt; rebase&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;: Tue Nov &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;09&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;43&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2015&lt;/span&gt; +&lt;span class=&quot;number&quot;&gt;0800&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;changed&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;149&lt;/span&gt; insertions(+), &lt;span class=&quot;number&quot;&gt;154&lt;/span&gt; deletions(-)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; rewrite test.js (&lt;span class=&quot;number&quot;&gt;72&lt;/span&gt;%)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Successfully rebased &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;updated&lt;/span&gt; refs/heads/master.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;最后我们需要把修改合并好的 commit push 到远程仓库上：&lt;br&gt;&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git &lt;span class=&quot;keyword&quot;&gt;push &lt;/span&gt;origin [&lt;span class=&quot;keyword&quot;&gt;branch] &lt;/span&gt;-f&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;到此为止，整个 rebase 操作都已完成。&lt;br&gt;你会看到类似：&lt;br&gt;&lt;img src=&quot;/blog/images/article_img/4.png&quot; alt=&quot;before&quot;&gt;&lt;br&gt;变成类似：&lt;br&gt;&lt;img src=&quot;/blog/images/article_img/5.png&quot; alt=&quot;after&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;简略的指导&quot;&gt;&lt;a href=&quot;#简略的指导&quot; class=&quot;headerlink&quot; title=&quot;简略的指导&quot;&gt;&lt;/a&gt;简略的指导&lt;/h1&gt;&lt;p&gt;在 VIM 的操作界面下，需要按 &lt;code&gt;I/Insert&lt;/code&gt; 键进行插入修改文本操作，修改完文本之后需要按 &lt;code&gt;Esc&lt;/code&gt; 键退出编辑状态，然后输入 &lt;code&gt;:q&lt;/code&gt; 是离开，输入 &lt;code&gt;:!q&lt;/code&gt; 是强制离开，输入 &lt;code&gt;:x&lt;/code&gt; 是保存修改并离开。&lt;br&gt;在 rebase 修改文本结束后需要输入 &lt;code&gt;:x&lt;/code&gt; 进行保存。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在日常管理项目的过程中，可能会遇到提交的 commit/merge 并不是想要的，或是操作失误提交了，那么此时我们需要把不想要的 commit/merge 取消掉，如果做到呢？Git 为我们提供了一个 &lt;code&gt;reset&lt;/code&gt; command，很好地解决了这个问题。&lt;/p&gt;
&lt;h1 id=&quot;reset&quot;&gt;&lt;a href=&quot;#reset&quot; class=&quot;headerlink&quot; title=&quot;reset&quot;&gt;&lt;/a&gt;reset&lt;/h1&gt;&lt;h2 id=&quot;1-命令说明&quot;&gt;&lt;a href=&quot;#1-命令说明&quot; class=&quot;headerlink&quot; title=&quot;1. 命令说明&quot;&gt;&lt;/a&gt;1. 命令说明&lt;/h2&gt;&lt;figure class=&quot;highlight fsharp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git reset [--hard|soft|mixed|merge|keep] &lt;span class=&quot;meta&quot;&gt;[&amp;lt;commit&amp;gt;|&amp;lt;HEAD&amp;gt;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;常用的是&lt;code&gt;[--hard|soft|mixed]&lt;/code&gt;，本文主要使用&lt;code&gt;--hard&lt;/code&gt;作为例子进行说明。&lt;/p&gt;
&lt;h2 id=&quot;2-本地仓库&quot;&gt;&lt;a href=&quot;#2-本地仓库&quot; class=&quot;headerlink&quot; title=&quot;2. 本地仓库&quot;&gt;&lt;/a&gt;2. 本地仓库&lt;/h2&gt;&lt;p&gt;在本地仓库执行 &lt;code&gt;$ git reset --hard HEAD^&lt;/code&gt; 可以将本地的仓库回滚到上一次提交时的状态，&lt;code&gt;HEAD^&lt;/code&gt;指的是上一次提交。&lt;/p&gt;
&lt;p&gt;同时你也可以执行 &lt;code&gt;$ git reset --hard fc232ae&lt;/code&gt; 将其回滚到 &lt;code&gt;fc232ae&lt;/code&gt; commit 时的状态。&lt;/p&gt;
&lt;h2 id=&quot;3-远程仓库&quot;&gt;&lt;a href=&quot;#3-远程仓库&quot; class=&quot;headerlink&quot; title=&quot;3. 远程仓库&quot;&gt;&lt;/a&gt;3. 远程仓库&lt;/h2&gt;&lt;p&gt;以上操作只会对本地仓库造成影响，而远程仓库的源码和 commit 信息并不会因此改变。那么此时我们需要另外一个 command 来改变远程仓库的状态。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意，此时不要在上一步的操作之后执行&lt;code&gt;$ git pull&lt;/code&gt; ，因为这个操作会使本地仓库的状态与远程同步。&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git &lt;span class=&quot;keyword&quot;&gt;push &lt;/span&gt;origin [&lt;span class=&quot;keyword&quot;&gt;branch] &lt;/span&gt;-f&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;执行此命令后，Git 会将远程仓库的状态与本地仓库的保持一致，即回滚状态。&lt;/p&gt;
    
    </summary>
    
      <category term="Git" scheme="http://HankCoder.github.io/blog/categories/Git/"/>
    
    
      <category term="git" scheme="http://HankCoder.github.io/blog/tags/git/"/>
    
      <category term="项目管理" scheme="http://HankCoder.github.io/blog/tags/%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/"/>
    
      <category term="reset" scheme="http://HankCoder.github.io/blog/tags/reset/"/>
    
      <category term="rebase" scheme="http://HankCoder.github.io/blog/tags/rebase/"/>
    
  </entry>
  
  <entry>
    <title>ECharts - 数据图表的使用</title>
    <link href="http://HankCoder.github.io/blog/2015/10/16/article-8/"/>
    <id>http://HankCoder.github.io/blog/2015/10/16/article-8/</id>
    <published>2015-10-16T10:14:23.000Z</published>
    <updated>2016-05-22T14:56:40.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;/blog/images/article_img/3.png&quot; alt=&quot;ECharts&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;关于ECharts（ECharts）&quot;&gt;&lt;a href=&quot;#关于ECharts（ECharts）&quot; class=&quot;headerlink&quot; title=&quot;关于ECharts（ECharts）&quot;&gt;&lt;/a&gt;关于ECharts（&lt;a href=&quot;http://echarts.baidu.com/doc/about.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ECharts&lt;/a&gt;）&lt;/h1&gt;&lt;p&gt;ECharts 是百度提供的一款开源、功能强大的数据可视化产品。&lt;br&gt;主要提供折线图、柱状图、散点图、K线图、饼图、雷达图、地图、和弦图、力导向布局图、仪表盘以及漏斗图。&lt;/p&gt;
&lt;h1 id=&quot;特性&quot;&gt;&lt;a href=&quot;#特性&quot; class=&quot;headerlink&quot; title=&quot;特性&quot;&gt;&lt;/a&gt;特性&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;拖拽重计算&lt;/li&gt;
&lt;li&gt;数据视图&lt;/li&gt;
&lt;li&gt;多图联动&lt;/li&gt;
&lt;li&gt;值域漫游&lt;/li&gt;
&lt;li&gt;炫光特效&lt;br&gt;……&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h1&gt;&lt;p&gt;下载 ECharts 静态包&lt;a href=&quot;http://echarts.baidu.com/build/echarts-2.2.7.zip&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【echarts-2.2.7】&lt;/a&gt;，也可以直接使用链接进行加载。建议下载静态包，避免官方 &lt;strong&gt;更新新特性&lt;/strong&gt; 时造成图表无法正常呈现的问题。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;使用&quot;&gt;&lt;a href=&quot;#使用&quot; class=&quot;headerlink&quot; title=&quot;使用&quot;&gt;&lt;/a&gt;使用&lt;/h1&gt;&lt;p&gt;ECharts的使用很简单，以官方提供的为例分为下面几步：&lt;/p&gt;
&lt;h4 id=&quot;1-新建一个-test-html-并放置一个-div-来承载图表：&quot;&gt;&lt;a href=&quot;#1-新建一个-test-html-并放置一个-div-来承载图表：&quot; class=&quot;headerlink&quot; title=&quot;1. 新建一个 test.html 并放置一个 div 来承载图表：&quot;&gt;&lt;/a&gt;1. 新建一个 &lt;code&gt;test.html&lt;/code&gt; 并放置一个 &lt;code&gt;div&lt;/code&gt; 来承载图表：&lt;/h4&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;lang&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;en&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Document&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;main&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;height: 400px;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;2-引入-echarts-js-：&quot;&gt;&lt;a href=&quot;#2-引入-echarts-js-：&quot; class=&quot;headerlink&quot; title=&quot;2. 引入 echarts.js ：&quot;&gt;&lt;/a&gt;2. 引入 &lt;code&gt;echarts.js&lt;/code&gt; ：&lt;/h4&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://echarts.baidu.com/build/dist/echarts.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;3-添加模块加载器配置-echarts-和所需图表的路径（相对路径为从当前页面链接到echarts-js），引入图表文件见引入-ECharts2：&quot;&gt;&lt;a href=&quot;#3-添加模块加载器配置-echarts-和所需图表的路径（相对路径为从当前页面链接到echarts-js），引入图表文件见引入-ECharts2：&quot; class=&quot;headerlink&quot; title=&quot;3. 添加模块加载器配置 echarts 和所需图表的路径（相对路径为从当前页面链接到echarts.js），引入图表文件见引入 ECharts2：&quot;&gt;&lt;/a&gt;3. 添加模块加载器配置 echarts 和所需图表的路径（相对路径为从当前页面链接到echarts.js），引入图表文件见&lt;a href=&quot;http://echarts.baidu.com/doc/doc.html#引入ECharts2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;引入 ECharts2&lt;/a&gt;：&lt;/h4&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 路径配置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;.config(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        paths: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          echarts: &lt;span class=&quot;string&quot;&gt;&#39;http://echarts.baidu.com/build/dist&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;4-动态加载echarts和所需图表，回调函数中可以初始化图表并驱动图表的生成，option见API-amp-Doc：&quot;&gt;&lt;a href=&quot;#4-动态加载echarts和所需图表，回调函数中可以初始化图表并驱动图表的生成，option见API-amp-Doc：&quot; class=&quot;headerlink&quot; title=&quot;4. 动态加载echarts和所需图表，回调函数中可以初始化图表并驱动图表的生成，option见API &amp;amp; Doc：&quot;&gt;&lt;/a&gt;4. 动态加载echarts和所需图表，回调函数中可以初始化图表并驱动图表的生成，option见&lt;a href=&quot;http://echarts.baidu.com/doc/doc.html#Option&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;API &amp;amp; Doc&lt;/a&gt;：&lt;/h4&gt;&lt;figure class=&quot;highlight typescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;echarts&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;echarts/chart/bar&#39;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// 使用柱状图就加载bar模块，按需加载&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;ec&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 基于准备好的dom，初始化echarts图表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; myChart = ec.init(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;main&#39;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; option = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            tooltip: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                show: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            legend: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                data:[&lt;span class=&quot;string&quot;&gt;&#39;销量&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            xAxis : [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&#39;category&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    data : [&lt;span class=&quot;string&quot;&gt;&quot;衬衫&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;羊毛衫&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;雪纺衫&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;裤子&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;高跟鞋&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;袜子&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            yAxis : [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&#39;value&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            series : [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;销量&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;bar&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&quot;data&quot;&lt;/span&gt;:[&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 为echarts对象加载数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        myChart.setOption(option);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;5-最后的样子：&quot;&gt;&lt;a href=&quot;#5-最后的样子：&quot; class=&quot;headerlink&quot; title=&quot;5. 最后的样子：&quot;&gt;&lt;/a&gt;5. 最后的样子：&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;/blog/images/article_img/3-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;重点-option-部分相关配置说明&quot;&gt;&lt;a href=&quot;#重点-option-部分相关配置说明&quot; class=&quot;headerlink&quot; title=&quot;重点- option 部分相关配置说明&quot;&gt;&lt;/a&gt;重点- option 部分相关配置说明&lt;/h1&gt;&lt;p&gt;用户可以在 option 配置里自定义图标的样式。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;title 标题：&lt;br&gt;&lt;img src=&quot;/blog/images/article_img/3-2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;title&lt;/span&gt; : &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;text&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;某地区蒸发量和降水量&#39;&lt;/span&gt;,  //文本&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    subtext: &lt;span class=&quot;string&quot;&gt;&#39;纯属虚构&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;toolbox 便捷的工具：&lt;br&gt;&lt;img src=&quot;/blog/images/article_img/3-3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;toolbox:&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;show :&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,  &lt;span class=&quot;comment&quot;&gt;//是否显示工具栏&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;feature :&lt;/span&gt; &amp;#123;  &lt;span class=&quot;comment&quot;&gt;//特性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;mark :&lt;/span&gt; &amp;#123;&lt;span class=&quot;string&quot;&gt;show:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&amp;#125;,  &lt;span class=&quot;comment&quot;&gt;//辅助线&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;dataView :&lt;/span&gt; &amp;#123;&lt;span class=&quot;string&quot;&gt;show:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;readOnly:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&amp;#125;,  &lt;span class=&quot;comment&quot;&gt;//数据视图&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;magicType :&lt;/span&gt; &amp;#123;&lt;span class=&quot;string&quot;&gt;show:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;type:&lt;/span&gt; [&lt;span class=&quot;string&quot;&gt;&#39;line&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;bar&#39;&lt;/span&gt;]&amp;#125;,  &lt;span class=&quot;comment&quot;&gt;//切换视图（折线/柱状）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;restore :&lt;/span&gt; &amp;#123;&lt;span class=&quot;string&quot;&gt;show:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&amp;#125;,  &lt;span class=&quot;comment&quot;&gt;//重新加载视图&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;saveAsImage :&lt;/span&gt; &amp;#123;&lt;span class=&quot;string&quot;&gt;show:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&amp;#125;  &lt;span class=&quot;comment&quot;&gt;//保存该视图为图片&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;series 数据列表：&lt;/p&gt;
&lt;figure class=&quot;highlight less&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;series &lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;蒸发量&#39;&lt;/span&gt;,  &lt;span class=&quot;comment&quot;&gt;//名称&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;bar&#39;&lt;/span&gt;,  &lt;span class=&quot;comment&quot;&gt;//视图类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;data&lt;/span&gt;:[&lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4.9&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;7.0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;23.2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;25.6&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;76.7&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;135.6&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;162.2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;32.6&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;20.0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6.4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3.3&lt;/span&gt;],  &lt;span class=&quot;comment&quot;&gt;//数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;markPoint &lt;/span&gt;: &amp;#123;  &lt;span class=&quot;comment&quot;&gt;//标记&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;data &lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#123;&lt;span class=&quot;attribute&quot;&gt;type &lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;max&#39;&lt;/span&gt;, &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;最大值&#39;&lt;/span&gt;&amp;#125;,  &lt;span class=&quot;comment&quot;&gt;//最大值，name为显示文本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#123;&lt;span class=&quot;attribute&quot;&gt;type &lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;min&#39;&lt;/span&gt;, &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;最小值&#39;&lt;/span&gt;&amp;#125;  &lt;span class=&quot;comment&quot;&gt;//最小值，name为显示文本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;markLine &lt;/span&gt;: &amp;#123;  &lt;span class=&quot;comment&quot;&gt;//标线&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;data &lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#123;&lt;span class=&quot;attribute&quot;&gt;type &lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;average&#39;&lt;/span&gt;, &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;平均值&#39;&lt;/span&gt;&amp;#125;  &lt;span class=&quot;comment&quot;&gt;//平均值，name为显示文本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;xAxis ： X 轴&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;yAxis ： Y 轴&lt;/li&gt;
&lt;li&gt;legend ：&lt;br&gt;&lt;img src=&quot;/blog/images/article_img/3-4.png&quot; alt=&quot;&quot;&gt;&lt;figure class=&quot;highlight less&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;legend&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;orient &lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;vertical&#39;&lt;/span&gt;,  &lt;span class=&quot;comment&quot;&gt;//方向“垂直”，默认从左向右横向排列&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;x &lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;left&#39;&lt;/span&gt;,  &lt;span class=&quot;comment&quot;&gt;//位于 X 轴左侧，默认顶部居中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;data&lt;/span&gt;:[&lt;span class=&quot;string&quot;&gt;&#39;直接访问&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;邮件营销&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;联盟广告&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;视频广告&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;搜索引擎&#39;&lt;/span&gt;]  &lt;span class=&quot;comment&quot;&gt;//显示文本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;更多配置可在&lt;a href=&quot;http://echarts.baidu.com/doc/example.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【实例】&lt;/a&gt;中点开测试。&lt;/p&gt;
&lt;h1 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://echarts.baidu.com/doc/start.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;入门教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://echarts.baidu.com/doc/example.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;实例&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ecomfe/echarts&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Fork on github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/blog/images/article_img/3.png&quot; alt=&quot;ECharts&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;关于ECharts（ECharts）&quot;&gt;&lt;a href=&quot;#关于ECharts（ECharts）&quot; class=&quot;headerlink&quot; title=&quot;关于ECharts（ECharts）&quot;&gt;&lt;/a&gt;关于ECharts（&lt;a href=&quot;http://echarts.baidu.com/doc/about.html&quot;&gt;ECharts&lt;/a&gt;）&lt;/h1&gt;&lt;p&gt;ECharts 是百度提供的一款开源、功能强大的数据可视化产品。&lt;br&gt;主要提供折线图、柱状图、散点图、K线图、饼图、雷达图、地图、和弦图、力导向布局图、仪表盘以及漏斗图。&lt;/p&gt;
&lt;h1 id=&quot;特性&quot;&gt;&lt;a href=&quot;#特性&quot; class=&quot;headerlink&quot; title=&quot;特性&quot;&gt;&lt;/a&gt;特性&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;拖拽重计算&lt;/li&gt;
&lt;li&gt;数据视图&lt;/li&gt;
&lt;li&gt;多图联动&lt;/li&gt;
&lt;li&gt;值域漫游&lt;/li&gt;
&lt;li&gt;炫光特效&lt;br&gt;……&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h1&gt;&lt;p&gt;下载 ECharts 静态包&lt;a href=&quot;http://echarts.baidu.com/build/echarts-2.2.7.zip&quot;&gt;【echarts-2.2.7】&lt;/a&gt;，也可以直接使用链接进行加载。建议下载静态包，避免官方 &lt;strong&gt;更新新特性&lt;/strong&gt; 时造成图表无法正常呈现的问题。&lt;/p&gt;
    
    </summary>
    
      <category term="笔记随笔" scheme="http://HankCoder.github.io/blog/categories/%E7%AC%94%E8%AE%B0%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="ECharts" scheme="http://HankCoder.github.io/blog/tags/ECharts/"/>
    
      <category term="js" scheme="http://HankCoder.github.io/blog/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>更新Github的Fork代码</title>
    <link href="http://HankCoder.github.io/blog/2015/10/06/article-7/"/>
    <id>http://HankCoder.github.io/blog/2015/10/06/article-7/</id>
    <published>2015-10-06T08:46:12.000Z</published>
    <updated>2016-05-22T14:56:40.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://github.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github&lt;/a&gt; 提供了一个非常便捷的功能叫 &lt;strong&gt;Fork&lt;/strong&gt;，即用户可以很方便的从别的仓库中复制一份代码到自己的名下。但是有一个不足是 &lt;a href=&quot;https://github.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github&lt;/a&gt; 并不提供自动更新功能，那么此时就需要我们自己手动更新这个 &lt;strong&gt;Fork&lt;/strong&gt; 仓库代码。&lt;/p&gt;
&lt;h1 id=&quot;基本方法&quot;&gt;&lt;a href=&quot;#基本方法&quot; class=&quot;headerlink&quot; title=&quot;基本方法&quot;&gt;&lt;/a&gt;基本方法&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;安装 &lt;a href=&quot;https://desktop.github.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github客户端&lt;/a&gt; 或者 &lt;a href=&quot;http://www.git-scm.com/download/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Git&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;clone&lt;/strong&gt; 需要更新的 &lt;strong&gt;Fork&lt;/strong&gt; 分支到本地：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;github客户端：直接打开客户端，添加 &lt;strong&gt;Fork&lt;/strong&gt; 分支，然后&lt;strong&gt; clone&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;Git命令：&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git clone git@github&lt;span class=&quot;selector-class&quot;&gt;.com&lt;/span&gt;:yourname/repos&lt;span class=&quot;selector-class&quot;&gt;.git&lt;/span&gt; &amp;lt;yourfolder&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;注&lt;/strong&gt;：github客户端 &lt;strong&gt;clone&lt;/strong&gt; 成功后，可以使用 &lt;strong&gt;git bash&lt;/strong&gt; 进行命令行输入。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;将源分支添加到该仓库的远程分支中：&lt;/p&gt;
&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;git remote add author git&lt;span class=&quot;variable&quot;&gt;@github&lt;/span&gt;.&lt;span class=&quot;symbol&quot;&gt;com:&lt;/span&gt;author/repos.git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;此时可以使用 &lt;code&gt;$ git remote -v&lt;/code&gt; 查看远程分支列表，结果如下：&lt;/p&gt;
&lt;figure class=&quot;highlight less&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;author git&lt;span class=&quot;variable&quot;&gt;@github&lt;/span&gt;.&lt;span class=&quot;attribute&quot;&gt;com&lt;/span&gt;:author/repos.git (fetch)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;author git&lt;span class=&quot;variable&quot;&gt;@github&lt;/span&gt;.&lt;span class=&quot;attribute&quot;&gt;com&lt;/span&gt;:author/repos.git (push)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;origin  git&lt;span class=&quot;variable&quot;&gt;@github&lt;/span&gt;.&lt;span class=&quot;attribute&quot;&gt;com&lt;/span&gt;:yourname/repos.git (fetch)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;origin  git&lt;span class=&quot;variable&quot;&gt;@github&lt;/span&gt;.&lt;span class=&quot;attribute&quot;&gt;com&lt;/span&gt;:yourname/repos.git (push)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;fetch&lt;/strong&gt; 源仓库代码的最新版本到本地：&lt;/p&gt;
&lt;figure class=&quot;highlight autohotkey&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git fetch author   //这里的`author`是上面从源分支添加到远程分支的分支名&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;合并两个版本的代码：&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git &lt;span class=&quot;keyword&quot;&gt;merge&lt;/span&gt; author/&lt;span class=&quot;keyword&quot;&gt;master&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;将本地代码更新到 &lt;strong&gt;Fork&lt;/strong&gt; 仓库：&lt;/p&gt;
&lt;figure class=&quot;highlight maxima&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git &lt;span class=&quot;built_in&quot;&gt;push&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;origin&lt;/span&gt; master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;其他方法&quot;&gt;&lt;a href=&quot;#其他方法&quot; class=&quot;headerlink&quot; title=&quot;其他方法&quot;&gt;&lt;/a&gt;其他方法&lt;/h1&gt;&lt;p&gt;重复上述的1-3，然后使用 &lt;code&gt;git pull author master&lt;/code&gt; 把源仓库的最新代码拉下来，然后使用第6步的方法，将代码推到自己的 fork 的仓库中。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github&lt;/a&gt; 提供了一个非常便捷的功能叫 &lt;strong&gt;Fork&lt;/strong&gt;，即用户可以很方便的从别的仓库中复制一份代码到自己的名下。但
    
    </summary>
    
      <category term="笔记随笔" scheme="http://HankCoder.github.io/blog/categories/%E7%AC%94%E8%AE%B0%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="项目管理" scheme="http://HankCoder.github.io/blog/tags/%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/"/>
    
      <category term="Git" scheme="http://HankCoder.github.io/blog/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>使用Hexo + NexT搭建静态博客</title>
    <link href="http://HankCoder.github.io/blog/2015/09/18/article-6/"/>
    <id>http://HankCoder.github.io/blog/2015/09/18/article-6/</id>
    <published>2015-09-18T07:06:37.000Z</published>
    <updated>2016-05-22T14:56:40.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github &lt;/a&gt;为广大开发者提供了一个非常好的平台，不仅是代码的开源，同时&lt;a href=&quot;https://github.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; Github &lt;/a&gt;还提供了开发者可以在&lt;a href=&quot;https://github.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; Github &lt;/a&gt;上建立自己的站点（GithubPage）的一个非常有意思的功能。这个功能的局限是只能创建静态的网站，那么我们可以使用一些工具来快速创建这一网站。&lt;br&gt;本文旨在帮助刚接触&lt;a href=&quot;https://github.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; Github &lt;/a&gt;新手，想利用&lt;a href=&quot;https://github.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; Github &lt;/a&gt;来创建自己的站点、个人博客等。大神可以忽视&lt;strong&gt;(:з」∠)&lt;/strong&gt;。&lt;/p&gt;
&lt;h1 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h1&gt;&lt;p&gt;你需要在&lt;a href=&quot;https://github.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; Github &lt;/a&gt;上创建一个属于自己的账户，然后新建一个仓库（&lt;code&gt;new repository&lt;/code&gt;），并命名为 &lt;code&gt;YourSiteName.github.io/com&lt;/code&gt;，此时&lt;a href=&quot;https://github.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; Github &lt;/a&gt;会帮助你初始化一个静态网页，你可以根据自己的喜好选择一些模版（&lt;del&gt;这都不是重点&lt;/del&gt;），接着尝试访问下你所建的站点，成功后就可以开始动工了。&lt;/p&gt;
&lt;h1 id=&quot;关于-Hexo&quot;&gt;&lt;a href=&quot;#关于-Hexo&quot; class=&quot;headerlink&quot; title=&quot;关于 Hexo&quot;&gt;&lt;/a&gt;关于 Hexo&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;A fast, simple &amp;amp; powerful blog framework&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;快速，简单而高效的静态博客框架&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;超快速度：&lt;/strong&gt; Node.js 所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;支持 Markdown：&lt;/strong&gt; Hexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;一键部署：&lt;/strong&gt; 只需一条指令即可部署到 GitHub Pages, Heroku 或其他网站。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;丰富的插件：&lt;/strong&gt; Hexo 拥有强大的插件系统，安装插件可以让 Hexo 支持 Jade, CoffeeScript。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;关于NexT&quot;&gt;&lt;a href=&quot;#关于NexT&quot; class=&quot;headerlink&quot; title=&quot;关于NexT&quot;&gt;&lt;/a&gt;关于NexT&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/blog/images/article_img/hexo-next.jpg&quot; alt=&quot;Theme-NexT&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;NexT is built for easily use with elegant appearance. First things first, always keep things simple&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;NexT 主旨在于简洁优雅且易于使用，所以首先要尽量确保 NexT 的简洁易用性。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这是一个扩展主题，由&lt;a href=&quot;https://github.com/iissnan&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; iissnan &lt;/a&gt;开发，&lt;code&gt;精于心，简于形&lt;/code&gt;的理念。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;正题&quot;&gt;&lt;a href=&quot;#正题&quot; class=&quot;headerlink&quot; title=&quot;正题&quot;&gt;&lt;/a&gt;正题&lt;/h1&gt;&lt;p&gt;上面是对搭建博客的一些技术了解，接下来进入正题。&lt;/p&gt;
&lt;h2 id=&quot;Hexo-初始化博客框架&quot;&gt;&lt;a href=&quot;#Hexo-初始化博客框架&quot; class=&quot;headerlink&quot; title=&quot;Hexo 初始化博客框架&quot;&gt;&lt;/a&gt;Hexo 初始化博客框架&lt;/h2&gt;&lt;h3 id=&quot;1-安装-Hexo&quot;&gt;&lt;a href=&quot;#1-安装-Hexo&quot; class=&quot;headerlink&quot; title=&quot;1. 安装 Hexo&quot;&gt;&lt;/a&gt;1. 安装 Hexo&lt;/h3&gt;&lt;p&gt;Hexo 安装和搭建依赖&lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; Nodejs &lt;/a&gt;和&lt;a href=&quot;http://git-scm.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; Git &lt;/a&gt;，可自行下载。&lt;br&gt;&lt;figure class=&quot;highlight avrasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install -g hexo-&lt;span class=&quot;keyword&quot;&gt;cli&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;2-初始化框架&quot;&gt;&lt;a href=&quot;#2-初始化框架&quot; class=&quot;headerlink&quot; title=&quot;2. 初始化框架&quot;&gt;&lt;/a&gt;2. 初始化框架&lt;/h3&gt;&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;hexo init &amp;lt;yourFolder&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;cd &amp;lt;yourFolder&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;npm install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 初始化完成大概的目录：&lt;br&gt;&lt;figure class=&quot;highlight 1c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── _config.yml &lt;span class=&quot;comment&quot;&gt;//网站的 配置 信息，您可以在此配置大部分的参数。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── package.json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── scaffolds 	&lt;span class=&quot;comment&quot;&gt;//模版 文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── source 	&lt;span class=&quot;comment&quot;&gt;//资源文件夹是存放用户资源的地方。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;|   ├── _drafts&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;|   └── _posts&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└── themes 	&lt;span class=&quot;comment&quot;&gt;//主题 文件夹。Hexo 会根据主题来生成静态页面。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;3-新建文章（创建一个-Hello-World）&quot;&gt;&lt;a href=&quot;#3-新建文章（创建一个-Hello-World）&quot; class=&quot;headerlink&quot; title=&quot;3. 新建文章（创建一个 Hello World）&quot;&gt;&lt;/a&gt;3. 新建文章（创建一个 Hello World）&lt;/h3&gt;&lt;figure class=&quot;highlight actionscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Hello World&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 在 &lt;code&gt;/source/_post&lt;/code&gt; 里添加 &lt;code&gt;hello-world.md&lt;/code&gt; 文件，之后新建的文章都将存放在此目录下。&lt;/p&gt;
&lt;h3 id=&quot;4-生成网站&quot;&gt;&lt;a href=&quot;#4-生成网站&quot; class=&quot;headerlink&quot; title=&quot;4. 生成网站&quot;&gt;&lt;/a&gt;4. 生成网站&lt;/h3&gt;&lt;figure class=&quot;highlight verilog&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo &lt;span class=&quot;keyword&quot;&gt;generate&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 此时会将 &lt;code&gt;/source&lt;/code&gt; 的 &lt;code&gt;.md&lt;/code&gt; 文件生成到 &lt;code&gt;/public&lt;/code&gt; 中，形成网站的静态文件。&lt;/p&gt;
&lt;h3 id=&quot;5-服务器&quot;&gt;&lt;a href=&quot;#5-服务器&quot; class=&quot;headerlink&quot; title=&quot;5. 服务器&quot;&gt;&lt;/a&gt;5. 服务器&lt;/h3&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server -&lt;span class=&quot;selector-tag&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 输入 &lt;code&gt;http://localhost:3000&lt;/code&gt; 即可查看网站。&lt;/p&gt;
&lt;h3 id=&quot;6-部署网站&quot;&gt;&lt;a href=&quot;#6-部署网站&quot; class=&quot;headerlink&quot; title=&quot;6. 部署网站&quot;&gt;&lt;/a&gt;6. 部署网站&lt;/h3&gt;&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 部署网站之前需要生成静态文件，即可以用 &lt;code&gt;$ hexo generate -d&lt;/code&gt; 直接生成并部署。此时需要在 &lt;code&gt;_config.yml&lt;/code&gt; 中配置你所要部署的站点：&lt;br&gt; &lt;figure class=&quot;highlight dts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;## Docs: http:&lt;span class=&quot;comment&quot;&gt;//hexo.io/docs/deployment.html&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;deploy:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;  type:&lt;/span&gt; git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;  repo:&lt;/span&gt; git@github.com:YourRepository.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;  branch:&lt;/span&gt; master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;7-更多&quot;&gt;&lt;a href=&quot;#7-更多&quot; class=&quot;headerlink&quot; title=&quot;7. 更多&quot;&gt;&lt;/a&gt;7. 更多&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;官网 - &lt;a href=&quot;https://hexo.io/zh-cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[Hexo]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;配置相关 - &lt;a href=&quot;https://hexo.io/zh-cn/docs/configuration.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[Hexo | 配置]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;更多的命令 - &lt;a href=&quot;https://hexo.io/zh-cn/docs/commands.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[Hexo | 指令]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;那么到此为止网站的雏形算是完成了，接下来你就要自己去管理和完善个人网站了。&lt;/p&gt;
&lt;h2 id=&quot;使用-NexT-主题让站点更酷炫&quot;&gt;&lt;a href=&quot;#使用-NexT-主题让站点更酷炫&quot; class=&quot;headerlink&quot; title=&quot;使用 NexT 主题让站点更酷炫&quot;&gt;&lt;/a&gt;使用 NexT 主题让站点更酷炫&lt;/h2&gt;&lt;h3 id=&quot;1-使用&quot;&gt;&lt;a href=&quot;#1-使用&quot; class=&quot;headerlink&quot; title=&quot;1. 使用&quot;&gt;&lt;/a&gt;1. 使用&lt;/h3&gt;&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;keyword&quot;&gt;cd&lt;/span&gt; your-hexo-site&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ git clone http&lt;span class=&quot;variable&quot;&gt;s:&lt;/span&gt;//github.&lt;span class=&quot;keyword&quot;&gt;com&lt;/span&gt;/iissnan/hexo-theme-&lt;span class=&quot;keyword&quot;&gt;next&lt;/span&gt; themes/&lt;span class=&quot;keyword&quot;&gt;next&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 从Next的 &lt;code&gt;Gihub&lt;/code&gt; 仓库中获取最新版本。&lt;/p&gt;
&lt;h3 id=&quot;2-启用&quot;&gt;&lt;a href=&quot;#2-启用&quot; class=&quot;headerlink&quot; title=&quot;2. 启用&quot;&gt;&lt;/a&gt;2. 启用&lt;/h3&gt;&lt;p&gt;需要修改 &lt;code&gt;/root/_config.yml&lt;/code&gt; 配置项 &lt;code&gt;theme&lt;/code&gt;：&lt;br&gt;&lt;figure class=&quot;highlight dts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;# Extensions&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;## Plugins: http:&lt;span class=&quot;comment&quot;&gt;//hexo.io/plugins/&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;## Themes: http:&lt;span class=&quot;comment&quot;&gt;//hexo.io/themes/&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;theme:&lt;/span&gt; next&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;3-验证是否启用&quot;&gt;&lt;a href=&quot;#3-验证是否启用&quot; class=&quot;headerlink&quot; title=&quot;3. 验证是否启用&quot;&gt;&lt;/a&gt;3. 验证是否启用&lt;/h3&gt;&lt;figure class=&quot;highlight ada&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo s &lt;span class=&quot;comment&quot;&gt;--debug&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 访问 &lt;code&gt;http://localhost:4000&lt;/code&gt;，确保站点正确运行。（&lt;del&gt;此命令可以做平时预览用&lt;/del&gt;）&lt;/p&gt;
&lt;h3 id=&quot;4-更多&quot;&gt;&lt;a href=&quot;#4-更多&quot; class=&quot;headerlink&quot; title=&quot;4. 更多&quot;&gt;&lt;/a&gt;4. 更多&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Next官网 - &lt;a href=&quot;http://theme-next.iissnan.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[NexT]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;主题设定 - &lt;a href=&quot;http://theme-next.iissnan.com/theme-settings.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[NexT | 主题设定]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第三方服务 - &lt;a href=&quot;http://theme-next.iissnan.com/third-party-services.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[NexT | 第三方服务]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;启用 &lt;code&gt;NexT&lt;/code&gt; 主题成功，那么你的网站变得酷炫（简约）。&lt;/p&gt;
&lt;h1 id=&quot;最后&quot;&gt;&lt;a href=&quot;#最后&quot; class=&quot;headerlink&quot; title=&quot;最后&quot;&gt;&lt;/a&gt;最后&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://jovey-zheng.github.io/blog&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;我的博客&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://notes.iissnan.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NexT 官方实例&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; 有任何疑问和建议可以留言，将在第一时间为你解答 &lt;/strong&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/&quot;&gt;Github &lt;/a&gt;为广大开发者提供了一个非常好的平台，不仅是代码的开源，同时&lt;a href=&quot;https://github.com/&quot;&gt; Github &lt;/a&gt;还提供了开发者可以在&lt;a href=&quot;https://github.com/&quot;&gt; Github &lt;/a&gt;上建立自己的站点（GithubPage）的一个非常有意思的功能。这个功能的局限是只能创建静态的网站，那么我们可以使用一些工具来快速创建这一网站。&lt;br&gt;本文旨在帮助刚接触&lt;a href=&quot;https://github.com/&quot;&gt; Github &lt;/a&gt;新手，想利用&lt;a href=&quot;https://github.com/&quot;&gt; Github &lt;/a&gt;来创建自己的站点、个人博客等。大神可以忽视&lt;strong&gt;(:з」∠)&lt;/strong&gt;。&lt;/p&gt;
&lt;h1 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h1&gt;&lt;p&gt;你需要在&lt;a href=&quot;https://github.com/&quot;&gt; Github &lt;/a&gt;上创建一个属于自己的账户，然后新建一个仓库（&lt;code&gt;new repository&lt;/code&gt;），并命名为 &lt;code&gt;YourSiteName.github.io/com&lt;/code&gt;，此时&lt;a href=&quot;https://github.com/&quot;&gt; Github &lt;/a&gt;会帮助你初始化一个静态网页，你可以根据自己的喜好选择一些模版（&lt;del&gt;这都不是重点&lt;/del&gt;），接着尝试访问下你所建的站点，成功后就可以开始动工了。&lt;/p&gt;
&lt;h1 id=&quot;关于-Hexo&quot;&gt;&lt;a href=&quot;#关于-Hexo&quot; class=&quot;headerlink&quot; title=&quot;关于 Hexo&quot;&gt;&lt;/a&gt;关于 Hexo&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;A fast, simple &amp;amp; powerful blog framework&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;快速，简单而高效的静态博客框架&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;超快速度：&lt;/strong&gt; Node.js 所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;支持 Markdown：&lt;/strong&gt; Hexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;一键部署：&lt;/strong&gt; 只需一条指令即可部署到 GitHub Pages, Heroku 或其他网站。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;丰富的插件：&lt;/strong&gt; Hexo 拥有强大的插件系统，安装插件可以让 Hexo 支持 Jade, CoffeeScript。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;关于NexT&quot;&gt;&lt;a href=&quot;#关于NexT&quot; class=&quot;headerlink&quot; title=&quot;关于NexT&quot;&gt;&lt;/a&gt;关于NexT&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/blog/images/article_img/hexo-next.jpg&quot; alt=&quot;Theme-NexT&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;NexT is built for easily use with elegant appearance. First things first, always keep things simple&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;NexT 主旨在于简洁优雅且易于使用，所以首先要尽量确保 NexT 的简洁易用性。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这是一个扩展主题，由&lt;a href=&quot;https://github.com/iissnan&quot;&gt; iissnan &lt;/a&gt;开发，&lt;code&gt;精于心，简于形&lt;/code&gt;的理念。&lt;/p&gt;
    
    </summary>
    
      <category term="笔记随笔" scheme="http://HankCoder.github.io/blog/categories/%E7%AC%94%E8%AE%B0%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="Hexo" scheme="http://HankCoder.github.io/blog/tags/Hexo/"/>
    
      <category term="NexT" scheme="http://HankCoder.github.io/blog/tags/NexT/"/>
    
      <category term="github" scheme="http://HankCoder.github.io/blog/tags/github/"/>
    
      <category term="博客" scheme="http://HankCoder.github.io/blog/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>NPM一些常用命令</title>
    <link href="http://HankCoder.github.io/blog/2015/09/17/article-5/"/>
    <id>http://HankCoder.github.io/blog/2015/09/17/article-5/</id>
    <published>2015-09-17T07:57:11.000Z</published>
    <updated>2016-05-22T14:56:40.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;关于NPM&quot;&gt;&lt;a href=&quot;#关于NPM&quot; class=&quot;headerlink&quot; title=&quot;关于NPM&quot;&gt;&lt;/a&gt;关于NPM&lt;/h1&gt;&lt;p&gt;NPM的全称是Node Package Manager，是一个NodeJS包管理和分发工具，已经成为了非官方的发布Node模块（包）的标准。&lt;br&gt;就目前而言，NPM的官网&lt;a href=&quot;https://www.npmjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[1]&lt;/a&gt;拥有18万的packages。国内的镜像是淘宝所提供的CNPM&lt;a href=&quot;http://npm.taobao.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[2]&lt;/a&gt;，与NPM相同，它会每隔10分钟就同步一次。&lt;/p&gt;
&lt;h1 id=&quot;一些常用命令&quot;&gt;&lt;a href=&quot;#一些常用命令&quot; class=&quot;headerlink&quot; title=&quot;一些常用命令&quot;&gt;&lt;/a&gt;一些常用命令&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;npm -v&lt;/code&gt;: 查看npm安装的版本&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm init&lt;/code&gt;: 引导你创建一个package.json文件，包括名称、版本、作者这些信息等&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm install &amp;lt;modulename&amp;gt;&lt;/code&gt;: 安装模块&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm install &amp;lt;modulename&amp;gt; -g&lt;/code&gt;: 安装全局模块&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm install &amp;lt;modulename&amp;gt;@1.0.0&lt;/code&gt;: 安装指定版本的模块&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;npm install &amp;lt;modulename&amp;gt; -save&lt;/code&gt;: 安装模块并添加到package.json依赖中&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;npm uninstall &amp;lt;modulename&amp;gt;&lt;/code&gt;: 卸载模块&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;npm cache clean&lt;/code&gt;: 清除缓存&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;npm help&lt;/code&gt;: 查看帮助命令&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm ls&lt;/code&gt;: 查看当前目录安装的依赖&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm ls -g&lt;/code&gt;: 查看全局目录安装的依赖&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;npm view &amp;lt;modulename&amp;gt;&lt;/code&gt;: 查看包的package.json&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm view &amp;lt;modulename&amp;gt; dependencies&lt;/code&gt;: 查看包的依赖关系&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;npm view &amp;lt;modulename&amp;gt; repository.url&lt;/code&gt;: 查看包的源文件地址&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;npm update &amp;lt;modulename&amp;gt;&lt;/code&gt;: 更新模块&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm remove &amp;lt;modulename&amp;gt;&lt;/code&gt;: 移除模块&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;题外话CNPM&quot;&gt;&lt;a href=&quot;#题外话CNPM&quot; class=&quot;headerlink&quot; title=&quot;题外话CNPM&quot;&gt;&lt;/a&gt;题外话CNPM&lt;/h1&gt;&lt;p&gt;有时候会出现NPM无法使用的情况，此时可以尝试使用CNPM解决此问题。&lt;/p&gt;
&lt;h2 id=&quot;淘宝NPM镜像&quot;&gt;&lt;a href=&quot;#淘宝NPM镜像&quot; class=&quot;headerlink&quot; title=&quot;淘宝NPM镜像&quot;&gt;&lt;/a&gt;淘宝NPM镜像&lt;/h2&gt;&lt;p&gt;这是一个完整 &lt;code&gt;npmjs.org&lt;/code&gt; 镜像，你可以用此代替官方版本(只读)，同步频率目前为 10分钟 一次以保证尽量与官方服务同步。&lt;/p&gt;
&lt;h2 id=&quot;使用&quot;&gt;&lt;a href=&quot;#使用&quot; class=&quot;headerlink&quot; title=&quot;使用&quot;&gt;&lt;/a&gt;使用&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install -g cnpm --registry=https://registry.npm.taobao.org&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;安装模块&quot;&gt;&lt;a href=&quot;#安装模块&quot; class=&quot;headerlink&quot; title=&quot;安装模块&quot;&gt;&lt;/a&gt;安装模块&lt;/h2&gt;&lt;p&gt;与NPM类似，将&lt;code&gt;npm install &amp;lt;...&amp;gt;&lt;/code&gt;改为&lt;code&gt;cpm install &amp;lt;...&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&quot;更多&quot;&gt;&lt;a href=&quot;#更多&quot; class=&quot;headerlink&quot; title=&quot;更多&quot;&gt;&lt;/a&gt;更多&lt;/h1&gt;&lt;p&gt;更多命令参考文档&lt;a href=&quot;https://docs.npmjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[3]&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;关于NPM&quot;&gt;&lt;a href=&quot;#关于NPM&quot; class=&quot;headerlink&quot; title=&quot;关于NPM&quot;&gt;&lt;/a&gt;关于NPM&lt;/h1&gt;&lt;p&gt;NPM的全称是Node Package Manager，是一个NodeJS包管理和分发工具，已经成为了非官方的发布Node模块（包）的标准。&lt;br&gt;就目前而言，NPM的官网&lt;a href=&quot;https://www.npmjs.com/&quot;&gt;[1]&lt;/a&gt;拥有18万的packages。国内的镜像是淘宝所提供的CNPM&lt;a href=&quot;http://npm.taobao.org/&quot;&gt;[2]&lt;/a&gt;，与NPM相同，它会每隔10分钟就同步一次。&lt;/p&gt;
&lt;h1 id=&quot;一些常用命令&quot;&gt;&lt;a href=&quot;#一些常用命令&quot; class=&quot;headerlink&quot; title=&quot;一些常用命令&quot;&gt;&lt;/a&gt;一些常用命令&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;npm -v&lt;/code&gt;: 查看npm安装的版本&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm init&lt;/code&gt;: 引导你创建一个package.json文件，包括名称、版本、作者这些信息等&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm install &amp;lt;modulename&amp;gt;&lt;/code&gt;: 安装模块&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm install &amp;lt;modulename&amp;gt; -g&lt;/code&gt;: 安装全局模块&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm install &amp;lt;modulename&amp;gt;@1.0.0&lt;/code&gt;: 安装指定版本的模块&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;npm install &amp;lt;modulename&amp;gt; -save&lt;/code&gt;: 安装模块并添加到package.json依赖中&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;npm uninstall &amp;lt;modulename&amp;gt;&lt;/code&gt;: 卸载模块&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;npm cache clean&lt;/code&gt;: 清除缓存&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;npm help&lt;/code&gt;: 查看帮助命令&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm ls&lt;/code&gt;: 查看当前目录安装的依赖&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm ls -g&lt;/code&gt;: 查看全局目录安装的依赖&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="开发日常" scheme="http://HankCoder.github.io/blog/categories/%E5%BC%80%E5%8F%91%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="npm" scheme="http://HankCoder.github.io/blog/tags/npm/"/>
    
      <category term="module" scheme="http://HankCoder.github.io/blog/tags/module/"/>
    
      <category term="nodejs" scheme="http://HankCoder.github.io/blog/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>Brunch:快捷的HTML5构建工具</title>
    <link href="http://HankCoder.github.io/blog/2015/09/08/article-4/"/>
    <id>http://HankCoder.github.io/blog/2015/09/08/article-4/</id>
    <published>2015-09-08T06:48:25.000Z</published>
    <updated>2016-05-22T14:56:40.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;/blog/images/article_img/2.png&quot; alt=&quot;Brunch&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;了解Brunch（官方介绍）&quot;&gt;&lt;a href=&quot;#了解Brunch（官方介绍）&quot; class=&quot;headerlink&quot; title=&quot;了解Brunch（官方介绍）&quot;&gt;&lt;/a&gt;了解Brunch（官方介绍）&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;编译你的脚本，模板，样式，链接它们&lt;/li&gt;
&lt;li&gt;将脚本和模板封装进common.js/AMD模块里，链接脚本和样式&lt;/li&gt;
&lt;li&gt;为链接文件生成源地图，复制资源和静态文件&lt;/li&gt;
&lt;li&gt;通过缩减代码和优化图片来收缩输出，看管你的文件更改&lt;/li&gt;
&lt;li&gt;并且通过控制台和系统提示通知你错误&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h1&gt;&lt;p&gt;当你已经拥有Nodejs时（若没有，请到&lt;a href=&quot;http://nodejs.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;nodejs官网&lt;/a&gt;下载），就可以直接使用&lt;code&gt;npm&lt;/code&gt;运行：&lt;br&gt;&lt;figure class=&quot;highlight cmake&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; -g brunch&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;新建-new&quot;&gt;&lt;a href=&quot;#新建-new&quot; class=&quot;headerlink&quot; title=&quot;新建 new&quot;&gt;&lt;/a&gt;新建 new&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;新建一个Brunch&lt;figure class=&quot;highlight gauss&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ brunch &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &amp;lt;skeleton-URL&amp;gt; [optional-&lt;span class=&quot;keyword&quot;&gt;output&lt;/span&gt;-dir]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;new&lt;/code&gt;可以简写为&lt;code&gt;n&lt;/code&gt;。&lt;br&gt;&lt;code&gt;&amp;lt;skeleton-URL&amp;gt;&lt;/code&gt;指定一个架构，则项目会应用此架构进行初始化。&lt;br&gt;&lt;code&gt;[optional-output-dir]&lt;/code&gt;指定输出目录，项目名称可以自定义。&lt;/p&gt;
&lt;p&gt;例如：&lt;br&gt;&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ brunch n http&lt;span class=&quot;variable&quot;&gt;s:&lt;/span&gt;//github.&lt;span class=&quot;keyword&quot;&gt;com&lt;/span&gt;/scotch/angular-brunch-seed myProject&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;08&lt;/span&gt; Sep &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt; - &lt;span class=&quot;keyword&quot;&gt;lo&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;g:&lt;/span&gt; Cloning git repo &lt;span class=&quot;string&quot;&gt;&quot;https://github.com/scotch/angular-brunc                                                                       h-seed&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;E:\myProject&quot;&lt;/span&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;08&lt;/span&gt; Sep &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;49&lt;/span&gt; - &lt;span class=&quot;keyword&quot;&gt;lo&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;g:&lt;/span&gt; Created skeleton directory layout&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;08&lt;/span&gt; Sep &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;49&lt;/span&gt; - &lt;span class=&quot;keyword&quot;&gt;lo&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;g:&lt;/span&gt; Installing packages...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;当不指定输出文件夹时，必须保证放置新项目的文件夹为空，否则会&lt;code&gt;clone&lt;/code&gt;失败。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;构建-build&quot;&gt;&lt;a href=&quot;#构建-build&quot; class=&quot;headerlink&quot; title=&quot;构建 build&quot;&gt;&lt;/a&gt;构建 build&lt;/h1&gt;&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;keyword&quot;&gt;brunch &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;build &lt;/span&gt;--production&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;也可以简写为：&lt;br&gt;&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;keyword&quot;&gt;brunch &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;b &lt;/span&gt;-P&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样构建一个分布式项目，使得项目的体积变小。&lt;/p&gt;
&lt;h1 id=&quot;使用-watch&quot;&gt;&lt;a href=&quot;#使用-watch&quot; class=&quot;headerlink&quot; title=&quot;使用 watch&quot;&gt;&lt;/a&gt;使用 watch&lt;/h1&gt;&lt;figure class=&quot;highlight ada&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ brunch watch &lt;span class=&quot;comment&quot;&gt;--server&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;也可以简写为：&lt;br&gt;&lt;figure class=&quot;highlight cos&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ brunch &lt;span class=&quot;keyword&quot;&gt;w&lt;/span&gt; -&lt;span class=&quot;keyword&quot;&gt;s&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;让Brunch看管你的项目，然后你就可以运行项目了。输出结果如：&lt;br&gt;&lt;figure class=&quot;highlight basic&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;08 &lt;/span&gt;Sep &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;58&lt;/span&gt; - &lt;span class=&quot;keyword&quot;&gt;error&lt;/span&gt;: &amp;#123; [&lt;span class=&quot;keyword&quot;&gt;Error&lt;/span&gt;: Component must have &lt;span class=&quot;string&quot;&gt;&quot;E:\w\bower_components\console-polyfill\bower.json&quot;&lt;/span&gt;] code: &lt;span class=&quot;comment&quot;&gt;&#39;NO_BOWER_JSON&#39; &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;08 &lt;/span&gt;Sep &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;59&lt;/span&gt; - info: application started &lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt; http://localhost:&lt;span class=&quot;number&quot;&gt;3333&lt;/span&gt;/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;08 &lt;/span&gt;Sep &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;33&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;00&lt;/span&gt; - warn: &lt;span class=&quot;comment&quot;&gt;&#39;test\karma-e2e.conf.js&#39; compiled, but not written. Check your javascripts.joinTo config.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;注意&quot;&gt;&lt;a href=&quot;#注意&quot; class=&quot;headerlink&quot; title=&quot;注意&quot;&gt;&lt;/a&gt;注意&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;必要安装项&lt;/strong&gt;&lt;br&gt;Git安装：&lt;a href=&quot;http://git-scm.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Git&lt;/a&gt;&lt;br&gt;bower安装：&lt;/p&gt;
&lt;figure class=&quot;highlight cmake&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; -g bower&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;运行项目前&lt;/strong&gt;&lt;br&gt;执行&lt;code&gt;$ bower install&lt;/code&gt;对项目初始化。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://brunch.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【官网】&lt;/a&gt;&lt;a href=&quot;https://github.com/brunch/brunch/tree/master/docs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【README】&lt;/a&gt;&lt;a href=&quot;https://github.com/brunch/brunch/blob/master/docs/commands.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【Command】&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/blog/images/article_img/2.png&quot; alt=&quot;Brunch&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;了解Brunch（官方介绍）&quot;&gt;&lt;a href=&quot;#了解Brunch（官方介绍）&quot; class=&quot;headerlink&quot; title=&quot;了解Brunch（官方介绍）&quot;&gt;&lt;/a&gt;了解Brunch（官方介绍）&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;编译你的脚本，模板，样式，链接它们&lt;/li&gt;
&lt;li&gt;将脚本和模板封装进common.js/AMD模块里，链接脚本和样式&lt;/li&gt;
&lt;li&gt;为链接文件生成源地图，复制资源和静态文件&lt;/li&gt;
&lt;li&gt;通过缩减代码和优化图片来收缩输出，看管你的文件更改&lt;/li&gt;
&lt;li&gt;并且通过控制台和系统提示通知你错误&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h1&gt;&lt;p&gt;当你已经拥有Nodejs时（若没有，请到&lt;a href=&quot;http://nodejs.org&quot;&gt;nodejs官网&lt;/a&gt;下载），就可以直接使用&lt;code&gt;npm&lt;/code&gt;运行：&lt;br&gt;&lt;figure class=&quot;highlight cmake&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; -g brunch&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;新建-new&quot;&gt;&lt;a href=&quot;#新建-new&quot; class=&quot;headerlink&quot; title=&quot;新建 new&quot;&gt;&lt;/a&gt;新建 new&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;新建一个Brunch&lt;figure class=&quot;highlight gauss&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ brunch &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &amp;lt;skeleton-URL&amp;gt; [optional-&lt;span class=&quot;keyword&quot;&gt;output&lt;/span&gt;-dir]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;new&lt;/code&gt;可以简写为&lt;code&gt;n&lt;/code&gt;。&lt;br&gt;&lt;code&gt;&amp;lt;skeleton-URL&amp;gt;&lt;/code&gt;指定一个架构，则项目会应用此架构进行初始化。&lt;br&gt;&lt;code&gt;[optional-output-dir]&lt;/code&gt;指定输出目录，项目名称可以自定义。&lt;/p&gt;
&lt;p&gt;例如：&lt;br&gt;&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ brunch n http&lt;span class=&quot;variable&quot;&gt;s:&lt;/span&gt;//github.&lt;span class=&quot;keyword&quot;&gt;com&lt;/span&gt;/scotch/angular-brunch-seed myProject&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;08&lt;/span&gt; Sep &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt; - &lt;span class=&quot;keyword&quot;&gt;lo&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;g:&lt;/span&gt; Cloning git repo &lt;span class=&quot;string&quot;&gt;&quot;https://github.com/scotch/angular-brunc                                                                       h-seed&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;E:\myProject&quot;&lt;/span&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;08&lt;/span&gt; Sep &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;49&lt;/span&gt; - &lt;span class=&quot;keyword&quot;&gt;lo&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;g:&lt;/span&gt; Created skeleton directory layout&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;08&lt;/span&gt; Sep &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;49&lt;/span&gt; - &lt;span class=&quot;keyword&quot;&gt;lo&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;g:&lt;/span&gt; Installing packages...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;当不指定输出文件夹时，必须保证放置新项目的文件夹为空，否则会&lt;code&gt;clone&lt;/code&gt;失败。&lt;br&gt;
    
    </summary>
    
      <category term="笔记随笔" scheme="http://HankCoder.github.io/blog/categories/%E7%AC%94%E8%AE%B0%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="Brunch" scheme="http://HankCoder.github.io/blog/tags/Brunch/"/>
    
      <category term="构建工具" scheme="http://HankCoder.github.io/blog/tags/%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>使用Git管理项目-初始化</title>
    <link href="http://HankCoder.github.io/blog/2015/09/07/article-3/"/>
    <id>http://HankCoder.github.io/blog/2015/09/07/article-3/</id>
    <published>2015-09-07T07:57:59.000Z</published>
    <updated>2016-05-22T14:56:40.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;获取Git仓库&quot;&gt;&lt;a href=&quot;#获取Git仓库&quot; class=&quot;headerlink&quot; title=&quot;获取Git仓库&quot;&gt;&lt;/a&gt;获取Git仓库&lt;/h1&gt;&lt;p&gt;获取Git仓库的方式主要分为两种。第一种是在现有项目或目录下导入所有文件到 Git 中；第二种是从一个服务器克隆一个现有的 Git 仓库。&lt;/p&gt;
&lt;h2 id=&quot;GIT-INIT&quot;&gt;&lt;a href=&quot;#GIT-INIT&quot; class=&quot;headerlink&quot; title=&quot;GIT INIT&quot;&gt;&lt;/a&gt;GIT INIT&lt;/h2&gt;&lt;p&gt;首先在现有的项目目录下输入：&lt;br&gt;&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;git init&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样就简单将你的目录转变成一个Git仓库。该命令将创建一个名为 &lt;code&gt;.git&lt;/code&gt;的子目录，这个子目录含有你初始化的 Git 仓库中所有的必须文件，这些文件是 Git 仓库的骨干。&lt;/p&gt;
&lt;p&gt;如果你是在一个已经存在文件的文件夹（而不是空文件夹）中初始化 Git 仓库来进行版本控制的话，你应该开始跟踪这些文件并提交。&lt;br&gt;&lt;figure class=&quot;highlight gams&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;$&lt;/span&gt; git add .  &lt;span class=&quot;comment&quot;&gt;//`.`是将目录的所有文件都添加（不包括空文件夹）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;$&lt;/span&gt; git commit -m &lt;span class=&quot;string&quot;&gt;&#39;first commit&#39;&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;//提交修改（`&#39;first commit&#39;`为注释信息）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;此时可以使用&lt;code&gt;$ git status&lt;/code&gt;来查看当前文件状态。&lt;br&gt;我们还可以将项目加入到远程Git仓库：&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git remote add origin git@github&lt;span class=&quot;selector-class&quot;&gt;.com&lt;/span&gt;:jovey-zheng/test&lt;span class=&quot;selector-class&quot;&gt;.git&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;//加入到远程的Git仓库&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ git push -u origin master  &lt;span class=&quot;comment&quot;&gt;//将项目推到Git仓库&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样我们就可以实现项目的远程操作。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;GIT-CLONE&quot;&gt;&lt;a href=&quot;#GIT-CLONE&quot; class=&quot;headerlink&quot; title=&quot;GIT CLONE&quot;&gt;&lt;/a&gt;GIT CLONE&lt;/h2&gt;&lt;p&gt;当远程Git仓库已经存在一个项目时，需要对此项目进行操作；或者有一个你想为此贡献自己一份力的开源项目时，就需要用到&lt;code&gt;$ git clone&lt;/code&gt;。当你执行&lt;code&gt;$ git clone&lt;/code&gt;命令的时候，默认配置下远程 Git 仓库中的每一个文件的每一个版本都将被拉取下来。&lt;/p&gt;
&lt;p&gt;克隆仓库的命令格式为&lt;code&gt;$ git clone [url]&lt;/code&gt;。例如，要克隆 Git 的可链接库 test，可以用下面的命令：&lt;br&gt;&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git &lt;span class=&quot;keyword&quot;&gt;clone&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;git&lt;/span&gt;@github.com:jovey-zheng/test.git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这会在当前目录下创建一个名为 &lt;code&gt;test&lt;/code&gt; 的目录，并初始化一个&lt;code&gt;.git&lt;/code&gt;文件夹。&lt;br&gt;如果你想在克隆远程仓库的时候，自定义本地仓库的名字，你可以使用如下命令：&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git clone git@github&lt;span class=&quot;selector-class&quot;&gt;.com&lt;/span&gt;:jovey-zheng/test&lt;span class=&quot;selector-class&quot;&gt;.git&lt;/span&gt; myTest&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这将执行与上一个命令相同的操作，不过在本地创建的仓库名字变为 myTest。&lt;/p&gt;
&lt;p&gt;Git 支持多种数据传输协议。上面的例子使用的是&lt;code&gt;SSH&lt;/code&gt;传输协议，当然也可以使用&lt;code&gt;https://&lt;/code&gt;协议。&lt;/p&gt;
&lt;p&gt;关于SSH：《&lt;a href=&quot;http://www.jianshu.com/p/697fe0815689&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SSH key生成&lt;/a&gt;》&lt;br&gt;推荐：《&lt;a href=&quot;http://git-scm.com/book/zh/v2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Git pro&lt;/a&gt;》&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;获取Git仓库&quot;&gt;&lt;a href=&quot;#获取Git仓库&quot; class=&quot;headerlink&quot; title=&quot;获取Git仓库&quot;&gt;&lt;/a&gt;获取Git仓库&lt;/h1&gt;&lt;p&gt;获取Git仓库的方式主要分为两种。第一种是在现有项目或目录下导入所有文件到 Git 中；第二种是从一个服务器克隆一个现有的 Git 仓库。&lt;/p&gt;
&lt;h2 id=&quot;GIT-INIT&quot;&gt;&lt;a href=&quot;#GIT-INIT&quot; class=&quot;headerlink&quot; title=&quot;GIT INIT&quot;&gt;&lt;/a&gt;GIT INIT&lt;/h2&gt;&lt;p&gt;首先在现有的项目目录下输入：&lt;br&gt;&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;git init&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样就简单将你的目录转变成一个Git仓库。该命令将创建一个名为 &lt;code&gt;.git&lt;/code&gt;的子目录，这个子目录含有你初始化的 Git 仓库中所有的必须文件，这些文件是 Git 仓库的骨干。&lt;/p&gt;
&lt;p&gt;如果你是在一个已经存在文件的文件夹（而不是空文件夹）中初始化 Git 仓库来进行版本控制的话，你应该开始跟踪这些文件并提交。&lt;br&gt;&lt;figure class=&quot;highlight gams&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;$&lt;/span&gt; git add .  &lt;span class=&quot;comment&quot;&gt;//`.`是将目录的所有文件都添加（不包括空文件夹）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;$&lt;/span&gt; git commit -m &lt;span class=&quot;string&quot;&gt;&#39;first commit&#39;&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;//提交修改（`&#39;first commit&#39;`为注释信息）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;此时可以使用&lt;code&gt;$ git status&lt;/code&gt;来查看当前文件状态。&lt;br&gt;我们还可以将项目加入到远程Git仓库：&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git remote add origin git@github&lt;span class=&quot;selector-class&quot;&gt;.com&lt;/span&gt;:jovey-zheng/test&lt;span class=&quot;selector-class&quot;&gt;.git&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;//加入到远程的Git仓库&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ git push -u origin master  &lt;span class=&quot;comment&quot;&gt;//将项目推到Git仓库&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样我们就可以实现项目的远程操作。&lt;/p&gt;
    
    </summary>
    
      <category term="Git" scheme="http://HankCoder.github.io/blog/categories/Git/"/>
    
    
      <category term="git" scheme="http://HankCoder.github.io/blog/tags/git/"/>
    
      <category term="项目管理" scheme="http://HankCoder.github.io/blog/tags/%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>生成SSH keys</title>
    <link href="http://HankCoder.github.io/blog/2015/09/07/article-2/"/>
    <id>http://HankCoder.github.io/blog/2015/09/07/article-2/</id>
    <published>2015-09-07T07:04:33.000Z</published>
    <updated>2016-05-22T14:56:40.000Z</updated>
    
    <content type="html">&lt;p&gt;首先确认自己的系统中是否已经拥有密钥。在默认情况下SSH的密钥存储在其&lt;code&gt;~/.ssh&lt;/code&gt;目录下。可以使用以下命令进入目录并列出内容：&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ cd ~/&lt;span class=&quot;selector-class&quot;&gt;.ssh&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ ls&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;id_rsa  id_rsa&lt;span class=&quot;selector-class&quot;&gt;.pub&lt;/span&gt;  known_hosts&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其中&lt;code&gt;id_rsa&lt;/code&gt;和&lt;code&gt;id_rsa.pub&lt;/code&gt;就是存储密钥的文件，带有&lt;code&gt;.pub&lt;/code&gt;后缀的是公钥，另外一个则是私钥。如果存在这些文件，则可以直接用&lt;code&gt;$ cat id_rsa.pub&lt;/code&gt;来读取密钥内容。&lt;br&gt;如果找不到这样的文件（或者不存在&lt;code&gt;~/.ssh&lt;/code&gt;目录），则可以通过&lt;code&gt;$ ssh-keygen&lt;/code&gt;来创建它们。&lt;br&gt;&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ssh-keygen -t rsa -C `you&lt;span class=&quot;meta&quot;&gt;@email&lt;/span&gt;.com`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Generating &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;/&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; rsa key pair.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Enter file &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; which to save the key (&lt;span class=&quot;regexp&quot;&gt;/home/&lt;/span&gt;schacon&lt;span class=&quot;regexp&quot;&gt;/.ssh/&lt;/span&gt;id_rsa):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Created directory &lt;span class=&quot;string&quot;&gt;&#39;/home/schacon/.ssh&#39;&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Enter passphrase (empty &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; no passphrase):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Enter same passphrase &lt;span class=&quot;string&quot;&gt;again:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Your identification has been saved &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;regexp&quot;&gt;/home/&lt;/span&gt;schacon&lt;span class=&quot;regexp&quot;&gt;/.ssh/&lt;/span&gt;id_rsa.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Your &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; key has been saved &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;regexp&quot;&gt;/home/&lt;/span&gt;schacon&lt;span class=&quot;regexp&quot;&gt;/.ssh/&lt;/span&gt;id_rsa.pub.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;The key fingerprint &lt;span class=&quot;string&quot;&gt;is:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;d0:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;82&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;e:&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;d7:&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;f1:&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;bb:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;b:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;33&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;53&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;96&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;93&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;49&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;da:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;b:&lt;/span&gt;e3 you&lt;span class=&quot;meta&quot;&gt;@email&lt;/span&gt;.com&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;首先 &lt;code&gt;$ ssh-keygen&lt;/code&gt;会确认密钥的存储位置（默认是&lt;code&gt;.ssh/id_rsa&lt;/code&gt;），然后它会要求你输入两次密钥口令。如果你不想在使用密钥时输入口令，将其留空即可（为了方便以后操作，建议不设置密码）。&lt;/p&gt;
&lt;p&gt;在完成上述操作之后即可获得SSH key，获得的公钥大概是这样的：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ cat id_rsa.pub&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAmzM2RosSFanpxK+d3Eagt3Wicef9Q&lt;span class=&quot;built_in&quot;&gt;bg&lt;/span&gt;H1x4yH3MFg2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+6vIuFXchl+L3gMZabWH3BzKpBwoJICg8q9k4N8nOf5LNPtIp74hnEj/1b9Nh7OLrri82Ao6FYEdkC&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0NVsfhKlqha10MQrYxctimabtuKZ&lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;Uvv0knSawwvql2mvCIDra2D2350ICycZi0Fg1QULF3QdDF8E&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mtnvso1a5a9jgzf3tyHX6+r7lGnA+Ifzr8bxC4sqZ+aN0R7dn4uqQETF7l+n16dd370Efvbvj8CabZ&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;qVs7r5j/fdltcmSrH3i97Yfq0XsM0CIxltOIb8+MhkRzHAXdjWY51LyfyHtyysbgHw==&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;you@email.com&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;关于在多种操作系统中生成 SSH 密钥的更深入教程，请参阅 GitHub 的 SSH 密钥指南：&lt;a href=&quot;https://help.github.com/articles/generating-ssh-keys&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;em&gt;https://help.github.com/articles/generating-ssh-keys&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;首先确认自己的系统中是否已经拥有密钥。在默认情况下SSH的密钥存储在其&lt;code&gt;~/.ssh&lt;/code&gt;目录下。可以使用以下命令进入目录并列出内容：&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ cd ~/&lt;span class=&quot;selector-class&quot;&gt;.ssh&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ ls&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;id_rsa  id_rsa&lt;span class=&quot;selector-class&quot;&gt;.pub&lt;/span&gt;  known_hosts&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其中&lt;code&gt;id_rsa&lt;/code&gt;和&lt;code&gt;id_rsa.pub&lt;/code&gt;就是存储密钥的文件，带有&lt;code&gt;.pub&lt;/code&gt;后缀的是公钥，另外一个则是私钥。如果存在这些文件，则可以直接用&lt;code&gt;$ cat id_rsa.pub&lt;/code&gt;来读取密钥内容。&lt;br&gt;如果找不到这样的文件（或者不存在&lt;code&gt;~/.ssh&lt;/code&gt;目录），则可以通过&lt;code&gt;$ ssh-keygen&lt;/code&gt;来创建它们。&lt;br&gt;&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ssh-keygen -t rsa -C `you&lt;span class=&quot;meta&quot;&gt;@email&lt;/span&gt;.com`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Generating &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;/&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; rsa key pair.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Enter file &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; which to save the key (&lt;span class=&quot;regexp&quot;&gt;/home/&lt;/span&gt;schacon&lt;span class=&quot;regexp&quot;&gt;/.ssh/&lt;/span&gt;id_rsa):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Created directory &lt;span class=&quot;string&quot;&gt;&#39;/home/schacon/.ssh&#39;&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Enter passphrase (empty &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; no passphrase):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Enter same passphrase &lt;span class=&quot;string&quot;&gt;again:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Your identification has been saved &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;regexp&quot;&gt;/home/&lt;/span&gt;schacon&lt;span class=&quot;regexp&quot;&gt;/.ssh/&lt;/span&gt;id_rsa.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Your &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; key has been saved &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;regexp&quot;&gt;/home/&lt;/span&gt;schacon&lt;span class=&quot;regexp&quot;&gt;/.ssh/&lt;/span&gt;id_rsa.pub.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;The key fingerprint &lt;span class=&quot;string&quot;&gt;is:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;d0:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;82&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;e:&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;d7:&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;f1:&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;bb:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;b:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;33&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;53&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;96&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;93&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;49&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;da:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;b:&lt;/span&gt;e3 you&lt;span class=&quot;meta&quot;&gt;@email&lt;/span&gt;.com&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="笔记随笔" scheme="http://HankCoder.github.io/blog/categories/%E7%AC%94%E8%AE%B0%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="git" scheme="http://HankCoder.github.io/blog/tags/git/"/>
    
      <category term="SSH" scheme="http://HankCoder.github.io/blog/tags/SSH/"/>
    
      <category term="加密" scheme="http://HankCoder.github.io/blog/tags/%E5%8A%A0%E5%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>使用Git管理项目-起步</title>
    <link href="http://HankCoder.github.io/blog/2015/09/07/article-1/"/>
    <id>http://HankCoder.github.io/blog/2015/09/07/article-1/</id>
    <published>2015-09-07T04:06:21.000Z</published>
    <updated>2016-05-22T14:56:40.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;关于版本控制&quot;&gt;&lt;a href=&quot;#关于版本控制&quot; class=&quot;headerlink&quot; title=&quot;关于版本控制&quot;&gt;&lt;/a&gt;关于版本控制&lt;/h1&gt;&lt;p&gt;提到版本控制，那么我会想到的是SVN以及这里要说的Git。那什么是版本控制呢？版本控制是一种记录一个或若干文件内容变化，以便将来查阅特定版本修订情况的系统。&lt;/p&gt;
&lt;h1 id=&quot;Git基础-三种状态&quot;&gt;&lt;a href=&quot;#Git基础-三种状态&quot; class=&quot;headerlink&quot; title=&quot;Git基础-三种状态&quot;&gt;&lt;/a&gt;Git基础-三种状态&lt;/h1&gt;&lt;p&gt;Git 有三种状态，你的文件可能处于其中之一：已提交（committed）、已修改（modified）和已暂存（staged）。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/blog/images/article_img/1.png&quot; alt=&quot;工作目录、暂存区域和Git仓库&quot;&gt;&lt;/p&gt;
&lt;p&gt;Git 仓库目录是 Git 用来保存项目的元数据和对象数据库的地方。 这是 Git 中最重要的部分，从其它计算机克隆仓库时，拷贝的就是这里的数据。&lt;/p&gt;
&lt;p&gt;工作目录是对项目的某个版本独立提取出来的内容。 这些从 Git 仓库的压缩数据库中提取出来的文件，放在磁盘上供你使用或修改。&lt;/p&gt;
&lt;p&gt;暂存区域是一个文件，保存了下次将提交的文件列表信息，一般在 Git 仓库目录中。 有时候也被称作“索引”，不过一般说法还是叫暂存区域。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;基本的 Git 工作流程如下：&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1.在工作目录中修改文件。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2.暂存文件，将文件的快照放入暂存区域。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3.提交更新，找到暂存区域的文件，将快照永久性存储到 Git 仓库目录。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果 Git 目录中保存着的特定版本文件，就属于已提交状态。 如果作了修改并已放入暂存区域，就属于已暂存状态。 如果自上次取出后，作了修改但还没有放到暂存区域，就是已修改状态。&lt;/p&gt;
&lt;h1 id=&quot;如何安装Git&quot;&gt;&lt;a href=&quot;#如何安装Git&quot; class=&quot;headerlink&quot; title=&quot;如何安装Git&quot;&gt;&lt;/a&gt;如何安装Git&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Mac&lt;/strong&gt;: brew install git&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Linux(Debian)&lt;/strong&gt; : apt-get install git-core&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Linux(Fedora)&lt;/strong&gt; : yum install git-core&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt; : 下载安装 &lt;a href=&quot;http://git-scm.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Git&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;配置&lt;br&gt;&lt;figure class=&quot;highlight smalltalk&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;$ &lt;/span&gt;git config --global user.name &lt;span class=&quot;comment&quot;&gt;&quot;your name&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git config --global user&lt;span class=&quot;selector-class&quot;&gt;.email&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;youremail@email.com&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用 &lt;code&gt;--global&lt;/code&gt; 可以使该命令只执行一次。&lt;/p&gt;
&lt;p&gt;你可以通过如下的命令来查看你的配置信息：&lt;br&gt;&lt;figure class=&quot;highlight mipsasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git &lt;span class=&quot;built_in&quot;&gt;config&lt;/span&gt; --list&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;user.email=&lt;span class=&quot;keyword&quot;&gt;joveyzheng@qq.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;user.name=&lt;span class=&quot;keyword&quot;&gt;joveyzheng&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;color.status=auto&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;你可以通过输入 &lt;code&gt;$ git config &amp;lt;key&amp;gt;&lt;/code&gt; 来查看某一项的配置&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git config user&lt;span class=&quot;selector-class&quot;&gt;.name&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;joveyzheng&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;获取帮助&quot;&gt;&lt;a href=&quot;#获取帮助&quot; class=&quot;headerlink&quot; title=&quot;获取帮助&quot;&gt;&lt;/a&gt;获取帮助&lt;/h1&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git &lt;span class=&quot;built_in&quot;&gt;help&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;文中多处借鉴《Git pro》，想获得更多了解推荐阅读： &lt;a href=&quot;http://git-scm.com/book/zh/v2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Git Pro&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;关于版本控制&quot;&gt;&lt;a href=&quot;#关于版本控制&quot; class=&quot;headerlink&quot; title=&quot;关于版本控制&quot;&gt;&lt;/a&gt;关于版本控制&lt;/h1&gt;&lt;p&gt;提到版本控制，那么我会想到的是SVN以及这里要说的Git。那什么是版本控制呢？版本控制是一种记录一个或若干文件内容变化，以便将来查阅特定版本修订情况的系统。&lt;/p&gt;
&lt;h1 id=&quot;Git基础-三种状态&quot;&gt;&lt;a href=&quot;#Git基础-三种状态&quot; class=&quot;headerlink&quot; title=&quot;Git基础-三种状态&quot;&gt;&lt;/a&gt;Git基础-三种状态&lt;/h1&gt;&lt;p&gt;Git 有三种状态，你的文件可能处于其中之一：已提交（committed）、已修改（modified）和已暂存（staged）。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/blog/images/article_img/1.png&quot; alt=&quot;工作目录、暂存区域和Git仓库&quot;&gt;&lt;/p&gt;
&lt;p&gt;Git 仓库目录是 Git 用来保存项目的元数据和对象数据库的地方。 这是 Git 中最重要的部分，从其它计算机克隆仓库时，拷贝的就是这里的数据。&lt;/p&gt;
&lt;p&gt;工作目录是对项目的某个版本独立提取出来的内容。 这些从 Git 仓库的压缩数据库中提取出来的文件，放在磁盘上供你使用或修改。&lt;/p&gt;
&lt;p&gt;暂存区域是一个文件，保存了下次将提交的文件列表信息，一般在 Git 仓库目录中。 有时候也被称作“索引”，不过一般说法还是叫暂存区域。&lt;br&gt;
    
    </summary>
    
      <category term="Git" scheme="http://HankCoder.github.io/blog/categories/Git/"/>
    
    
      <category term="git" scheme="http://HankCoder.github.io/blog/tags/git/"/>
    
      <category term="项目管理" scheme="http://HankCoder.github.io/blog/tags/%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
</feed>
